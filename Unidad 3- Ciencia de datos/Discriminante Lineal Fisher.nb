(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    959072,      18231]
NotebookOptionsPosition[    950161,      18083]
NotebookOutlinePosition[    950595,      18100]
CellTagsIndexPosition[    950552,      18097]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Reconocimiento de patrones: Tarea 7", "Title",
 CellChangeTimes->{{3.791044082742649*^9, 3.7910440964427156`*^9}, 
   3.793570498856371*^9, {3.798737344351436*^9, 3.798737344572486*^9}, 
   3.800716631509065*^9, {3.8027914137740817`*^9, 3.802791414188933*^9}, 
   3.8042766819409924`*^9},ExpressionUUID->"f811a4ed-1dda-47ab-b26d-\
5f8881b9244a"],

Cell["\<\
Carlos Manuel Rodr\[IAcute]guez Mart\[IAcute]nez
20/07/2020\
\>", "Subsection",
 CellChangeTimes->{{3.791044108729664*^9, 3.791044125236742*^9}, {
  3.793568513434387*^9, 3.793568513794141*^9}, {3.7987373544042645`*^9, 
  3.79873736682662*^9}, {3.8007166339778585`*^9, 3.8007166388199043`*^9}, {
  3.8027914172359886`*^9, 3.8027914194165435`*^9}, {3.8042766971016784`*^9, 
  3.8042766971808467`*^9}},ExpressionUUID->"878fbff7-241e-48cc-bbf9-\
8690bbc81c1b"],

Cell[CellGroupData[{

Cell["Cargar base de datos Iris", "Subchapter",
 CellChangeTimes->{{3.7910441307642603`*^9, 3.7910441355342293`*^9}, {
  3.802791442617474*^9, 
  3.802791446191646*^9}},ExpressionUUID->"9d6dfe1c-d455-4e3c-a524-\
fcb3fb55436d"],

Cell["Carga toda la base de datos Iris", "Text",
 CellChangeTimes->{{3.802791652984005*^9, 
  3.8027916587607203`*^9}},ExpressionUUID->"cc8957ed-65f7-4d62-a228-\
1cb161b00cf7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"attributes", ",", "rawDatabase"}], "}"}], " ", "=", " ", 
   RowBox[{"TakeDrop", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<iris.csv\>\""}], 
        "}"}], "]"}], "]"}], ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.802791467895279*^9, 3.802791546244971*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"7395b67e-7643-40b4-8dd3-2b0a1cd40171"],

Cell[CellGroupData[{

Cell[BoxData["attributes"], "Input",
 CellChangeTimes->{{3.8027915475111494`*^9, 3.802791548226234*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"f6f470f6-af6d-43d7-8243-e7c4a7132103"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"sepal-length\"\>", ",", "\<\"sepal-width\"\>", 
    ",", "\<\"petal-length\"\>", ",", "\<\"petal-width\"\>", 
    ",", "\<\"species\"\>"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8027915484635997`*^9, 3.8028035902968388`*^9, 
  3.8028036322043085`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"9494720f-0e48-4517-a28b-ff0ffac145eb"]
}, Open  ]],

Cell[TextData[{
 "Selecciona las clases ",
 StyleBox["setosa",
  FontSlant->"Italic"],
 " y ",
 StyleBox["versicolor",
  FontSlant->"Italic"],
 ", y toma el atributo ",
 StyleBox["sepal-length",
  FontSlant->"Italic"],
 " y ",
 StyleBox["sepal-width",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.8027916639591837`*^9, 3.802791689197835*^9}, {
  3.804276751660122*^9, 3.8042767674010267`*^9}, {3.8042834705767517`*^9, 
  3.804283472097483*^9}},ExpressionUUID->"c361ddef-ef1e-4480-9a1c-\
e06b07e798a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"processedDatabase", " ", "=", " ", 
  RowBox[{
   RowBox[{"Cases", "[", 
    RowBox[{"rawDatabase", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "\"\<setosa\>\""}], 
       "}"}], "|", 
      RowBox[{"{", 
       RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "\"\<versicolor\>\""}],
        "}"}]}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8027915501742277`*^9, 3.802791585151453*^9}, {
  3.8027916243735027`*^9, 3.8027916411238623`*^9}, {3.802791706957723*^9, 
  3.8027917217972355`*^9}, {3.8042767208201714`*^9, 3.804276720930587*^9}, {
  3.8042771727702217`*^9, 3.8042771749108143`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"eed92880-b884-4de4-b541-705b3b7159fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.5`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "3.`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.7`", ",", "3.2`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "3.1`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.6`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "3.9`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "3.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "2.9`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "3.1`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "3.7`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "3.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "3.`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "3.`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "4.`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "4.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "3.9`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.5`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "3.8`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.8`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "3.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.7`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "3.6`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.3`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "3.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", "3.5`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", "3.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.7`", ",", "3.2`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "3.1`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "3.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", "4.1`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "4.2`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "3.1`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.2`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "3.5`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "3.1`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "3.`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.5`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.5`", ",", "2.3`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "3.2`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.5`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.8`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "3.`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.8`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "3.2`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.3`", ",", "3.7`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.3`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.`", ",", "3.2`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4`", ",", "3.2`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.9`", ",", "3.1`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "2.3`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "2.8`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "2.8`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "3.3`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "2.4`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.6`", ",", "2.9`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", "2.7`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "2.`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.9`", ",", "3.`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "2.2`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.1`", ",", "2.9`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.6`", ",", "2.9`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "3.1`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.6`", ",", "3.`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "2.7`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.2`", ",", "2.2`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.6`", ",", "2.5`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.9`", ",", "3.2`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.1`", ",", "2.8`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "2.5`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.1`", ",", "2.8`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4`", ",", "2.9`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.6`", ",", "3.`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.8`", ",", "2.8`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "3.`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "2.9`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "2.6`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "2.4`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "2.4`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "2.7`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "2.7`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "3.`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "3.4`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "3.1`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "2.3`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.6`", ",", "3.`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "2.5`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "2.6`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.1`", ",", "3.`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "2.6`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "2.3`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.6`", ",", "2.7`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "3.`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "2.9`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.2`", ",", "2.9`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "2.5`", ",", "\<\"versicolor\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "2.8`", ",", "\<\"versicolor\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.802791552813859*^9, 3.8027915855184703`*^9, {3.802791632633701*^9, 
   3.8027916416064467`*^9}, 3.8027917086874228`*^9, 3.8027917460348253`*^9, 
   3.802798915794207*^9, 3.802803591180543*^9, 3.802803632254174*^9, 
   3.8042767221541357`*^9, 3.8042771753999085`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"b8b13bee-a0f7-4640-b7c4-08c66d1b8ff1"]
}, Open  ]],

Cell["\<\
Se termina el preprocesamiento cambiando las etiquetas setosa a 1, y \
versicolor a 0.\
\>", "Text",
 CellChangeTimes->{{3.802798426229974*^9, 3.802798455615406*^9}, {
  3.8027988819748077`*^9, 3.8027988848751984`*^9}, {3.8042771814008455`*^9, 
  3.8042771827905893`*^9}},ExpressionUUID->"68146d49-84d3-4ace-bb77-\
b1e4fe18daa9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"processedDatabase", " ", "=", " ", 
  RowBox[{"ReplaceAll", "[", 
   RowBox[{"processedDatabase", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<setosa\>\"", "\[Rule]", "1"}], ",", 
      RowBox[{"\"\<versicolor\>\"", "\[Rule]", "0"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8027983850854063`*^9, 3.802798422561181*^9}, {
  3.802798888906999*^9, 3.8027988912508507`*^9}, {3.80427717790071*^9, 
  3.8042771797303705`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"9ff56fd5-4c76-402a-a017-631b795ded17"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.5`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "3.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.7`", ",", "3.2`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "3.1`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.6`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "3.9`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "3.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "2.9`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "3.1`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "3.7`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "3.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "3.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "3.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "4.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "4.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "3.9`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.5`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "3.8`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.8`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "3.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.7`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "3.6`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.3`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "3.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", "3.5`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", "3.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.7`", ",", "3.2`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "3.1`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "3.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", "4.1`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "4.2`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "3.1`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.2`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "3.5`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "3.1`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "3.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.5`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.5`", ",", "2.3`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "3.2`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.5`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.8`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "3.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "3.8`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "3.2`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.3`", ",", "3.7`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.3`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.`", ",", "3.2`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4`", ",", "3.2`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.9`", ",", "3.1`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "2.3`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "2.8`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "2.8`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "3.3`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "2.4`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.6`", ",", "2.9`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", "2.7`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "2.`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.9`", ",", "3.`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "2.2`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.1`", ",", "2.9`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.6`", ",", "2.9`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "3.1`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.6`", ",", "3.`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "2.7`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.2`", ",", "2.2`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.6`", ",", "2.5`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.9`", ",", "3.2`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.1`", ",", "2.8`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "2.5`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.1`", ",", "2.8`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4`", ",", "2.9`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.6`", ",", "3.`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.8`", ",", "2.8`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "3.`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "2.9`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "2.6`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "2.4`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "2.4`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "2.7`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "2.7`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "3.`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "3.4`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "3.1`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "2.3`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.6`", ",", "3.`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "2.5`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "2.6`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.1`", ",", "3.`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "2.6`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "2.3`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.6`", ",", "2.7`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "3.`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "2.9`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.2`", ",", "2.9`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "2.5`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "2.8`", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8027984150745583`*^9, 3.802798423643285*^9}, {
   3.8027988916507797`*^9, 3.8027989179927635`*^9}, 3.802803632307059*^9, 
   3.804276737390399*^9, 3.8042771854701014`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"7c8b03b2-1341-4bac-a35f-3ab85911b7f4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Propiedades de los datos", "Subchapter",
 CellChangeTimes->{{3.7910441307642603`*^9, 3.7910441355342293`*^9}, {
  3.802791442617474*^9, 3.802791446191646*^9}, {3.8027987831976757`*^9, 
  3.802798788144858*^9}},ExpressionUUID->"dd636bed-93b9-4220-9a60-\
5e4108c11405"],

Cell[TextData[{
 "Scatter plot de ",
 StyleBox["sepal-length",
  FontSlant->"Italic"],
 " en el eje horizontal y ",
 StyleBox["sepal-width",
  FontSlant->"Italic"],
 " en el eje vertical para las especies setosa y virginica."
}], "Text",
 CellChangeTimes->{{3.8027987915011497`*^9, 3.8027988116477184`*^9}, {
  3.804276835940442*^9, 
  3.804276887110647*^9}},ExpressionUUID->"c5aa5806-85c8-43a8-ba8a-\
f82ab1f3ad0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectClass", "[", 
    RowBox[{"data_", ",", "class_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Cases", "[", 
     RowBox[{"data", ",", 
      RowBox[{"{", 
       RowBox[{"_", ",", "_", ",", "class"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042776588602*^9, 3.804277680199728*^9}, 
   3.8042777160697756`*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"b0183902-9ebb-4967-8dac-cbcd3d436c5b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"onlySetosa", " ", "=", " ", 
   RowBox[{"SelectClass", "[", 
    RowBox[{"processedDatabase", ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"onlyVersicolor", " ", "=", " ", 
   RowBox[{"SelectClass", "[", 
    RowBox[{"processedDatabase", ",", "0"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8027991056347322`*^9, 3.802799119522622*^9}, {
   3.80279917323732*^9, 3.8027991857883124`*^9}, {3.8027992206863785`*^9, 
   3.802799224901825*^9}, {3.8042769096308146`*^9, 3.8042769419002995`*^9}, 
   3.8042769760006437`*^9, {3.804277191580408*^9, 3.8042771940106325`*^9}, {
   3.804277734580553*^9, 3.804277739545371*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"1555d2c4-2508-43cd-b199-6c9e1f2e93bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"onlySetosa", ",", "onlyVersicolor"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Setosa\>\"", ",", "\"\<Virg\[IAcute]nica\>\""}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Sepal-length\>\"", ",", "15"}], "]"}], ",", " ", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Sepal-width\>\"", ",", "15"}], "]"}]}], "}"}]}], ",", " ",
    "\[IndentingNewLine]", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"FontSize", "\[Rule]", "13"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.8, 0.16, 0.], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.5333333333333334, 0.10666666666666667`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0.8`", ",", "0.16`", ",", "0.`"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.8, 0.16, 0.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.8, 0.16, 0.],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 0.24, 0.8200000000000001], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0.16, 0.5466666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0.`", ",", "0.24`", ",", "0.8200000000000001`"}], "]"}], 
          NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0., 0.24, 0.8200000000000001]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0., 0.24, 0.8200000000000001],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8042769542203627`*^9, 3.8042769629409113`*^9}, {
  3.8042770183057003`*^9, 3.804277119490892*^9}, {3.8042772029652443`*^9, 
  3.8042772104205914`*^9}, {3.804277691699729*^9, 3.804277745319931*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"561be34c-7824-46af-919c-1ada3e58ffb5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.009166666666666668], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{}], FontSize -> 13, 
         RGBColor[0.8, 0.16, 0.]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               DiskBox[{0, 0}, 
                Offset[{2.75, 2.75}]]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.009166666666666668], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 AbsoluteDashing[{}], FontSize -> 13, 
                 RGBColor[0.8, 0.16, 0.]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxtUkESgjAMrHgQBBUK4tkv6Af6Bp/gjF59j75J/ySQ3XQayEyns8lmkyY9
31+3x9o5dxnOajjZcJ6TdcFNVoXPe7QWOA+/72ge/iII38Ofg9cBM/8YrpMd
lC+4VD6x8BvgjdanPvXk3oHXaj4x+xXcGHwCrqHba93lfuM8yBf/XuPEaX6p
cfabzqsy+dvZezgf9m/nJTq2PxuP+6K+nafVk35q6Pbw17N9sB/qk2//T1ov
7oPvX35vhduDl5k9FTO+3Yf9DzbOfaTzif+L+tzPH1BG+70=
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2}], FontSize -> 13, 
         RGBColor[0., 0.24, 0.8200000000000001]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{{
                GrayLevel[1], 
                PolygonBox[{
                  Offset[{0., 2.975}], 
                  Offset[{-2.5764255762587047`, -1.4875}], 
                  Offset[{2.5764255762587047`, -1.4875}]}]}, 
               AbsoluteThickness[1], 
               Dashing[{}], 
               JoinedCurveBox[
                Line[{
                  Offset[{0., 2.975}], 
                  Offset[{-2.5764255762587047`, -1.4875}], 
                  Offset[{2.5764255762587047`, -1.4875}], 
                  Offset[{0., 2.975}]}], CurveClosed -> True]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.009166666666666668], 
                 CapForm["Butt"], 
                 AbsoluteThickness[1.6], 
                 AbsoluteDashing[{6, 2}], FontSize -> 13, 
                 RGBColor[0., 0.24, 0.8200000000000001]]}, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJx1UtsNwjAMTF88Pwlpm/LDCrBAZmAEJPhlHpgJdqJt7oziCEuRdY5zts85
Xh+XW2WMOY2nGE9paIfwek62hu8VHsLnPdkqxHwX7rOVwB54gTwn+DxbD7wB
3w7xCnEPvMR7i7wG/BbeIN4Cs58O8QJ8nfBF7BS/l3l4T76Y10r9mKf5mV9L
P9SL9fX8zNf31Dvt16t+BqWvz+ZP53PwteyLemus5031bOD3f+ptMz3TfZeZ
vqxPPYjZL/XR+0jnsRl/uq9fPeJUH/0/rPSj/+8XLFT5EQ==
         "]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{}], FontSize -> 13, 
         RGBColor[0.8, 0.16, 0.]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2}], FontSize -> 13, 
         RGBColor[0., 0.24, 0.8200000000000001]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{}], FontSize -> 13, 
         RGBColor[0.8, 0.16, 0.]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2}], FontSize -> 13, 
         RGBColor[0., 0.24, 0.8200000000000001]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {4.24375, 0}, AxesStyle -> 
     GrayLevel[0], BaseStyle -> (FontSize -> 13), DisplayFunction :> Identity,
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"Sepal-width\"", 15, StripOnInput -> False], 
         TraditionalForm], None}, {
        FormBox[
         StyleBox["\"Sepal-length\"", 15, StripOnInput -> False], 
         TraditionalForm], None}}, FrameStyle -> GrayLevel[0], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> GrayLevel[0], GridLines -> {Automatic, Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
     LabelStyle -> {FontFamily -> "Helvetica", 
       GrayLevel[0]}, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{4.24375, 7.}, {0, 4.4}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     GrayLevel[0]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Setosa\"", "\"Virg\[IAcute]nica\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], FontSize -> 13, 
                    RGBColor[0.8, 0.16, 0.]], {
                    InsetBox[
                    GraphicsBox[{
                    DiskBox[{0, 0}, 
                    Offset[{2.75, 2.75}]]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], FontSize -> 13, 
                    RGBColor[0.8, 0.16, 0.]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], FontSize -> 13, 
                    RGBColor[0., 0.24, 0.8200000000000001]], {
                    InsetBox[
                    GraphicsBox[{{
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{0., 2.975}], 
                    Offset[{-2.5764255762587047`, -1.4875}], 
                    Offset[{2.5764255762587047`, -1.4875}]}]}, 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    JoinedCurveBox[
                    Line[{
                    Offset[{0., 2.975}], 
                    Offset[{-2.5764255762587047`, -1.4875}], 
                    Offset[{2.5764255762587047`, -1.4875}], 
                    Offset[{0., 2.975}]}], CurveClosed -> True]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], FontSize -> 13, 
                    RGBColor[0., 0.24, 0.8200000000000001]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", 
          GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8, 0.16, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5333333333333334, 0.10666666666666667`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.8`", ",", "0.16`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8, 0.16, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8, 0.16, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.24, 0.8200000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.16, 0.5466666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.24`", ",", "0.8200000000000001`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.24, 0.8200000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.24, 0.8200000000000001], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    DiskBox[{0, 0}, 
                    Offset[{2.75, 2.75}]]}], ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{{
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{0., 2.975}], 
                    Offset[{-2.5764255762587047`, -1.4875}], 
                    Offset[{2.5764255762587047`, -1.4875}]}]}, 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    JoinedCurveBox[
                    Line[{
                    Offset[{0., 2.975}], 
                    Offset[{-2.5764255762587047`, -1.4875}], 
                    Offset[{2.5764255762587047`, -1.4875}], 
                    Offset[{0., 2.975}]}], CurveClosed -> True]}], ",", 
                    "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8042769636201887`*^9, 3.8042769835801353`*^9}, 
   3.8042770666639504`*^9, {3.8042771065398936`*^9, 3.8042771199998283`*^9}, {
   3.8042771967699385`*^9, 3.804277216411854*^9}, 3.8042773256040773`*^9, {
   3.80427770240987*^9, 3.8042777478697433`*^9}},
 CellLabel->"Out[47]=",ExpressionUUID->"1a88afef-806a-4c54-9c3e-a8b0f4b5efea"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discriminante lineal de Fisher", "Subchapter",
 CellChangeTimes->{{3.7910441307642603`*^9, 3.7910441355342293`*^9}, {
  3.802791442617474*^9, 3.802791446191646*^9}, {3.8042773550005565`*^9, 
  3.80427735982053*^9}},ExpressionUUID->"701210d5-3f69-412b-861d-\
8c6d371cb924"],

Cell["\<\
Para el c\[AAcute]lculo de la proyecci\[OAcute]n de acuerdo al discriminante \
lineal de Fisher me bas\[EAcute] en el libro de Bishop.\
\>", "Text",
 CellChangeTimes->{{3.804282728807348*^9, 
  3.8042828259073105`*^9}},ExpressionUUID->"18610b27-0338-4936-91a9-\
2787416b816e"],

Cell["Primero se calcularon las medias de cada clase:", "Text",
 CellChangeTimes->{{3.804282847587586*^9, 
  3.8042828590080414`*^9}},ExpressionUUID->"961891d0-bbdc-4459-b245-\
53125c54ca24"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnWdUFNm2x+e9++V9fGtdIwbMYhpzwoAJnbl6R0UkKTpiQAwoEgVRQGBU
UIIEQRQJChIVDIAEJQomQEGMKIg6JBMyKDK8P5y59Xq60WHoqm7C/q3SRZ2u
rtp9zq7/2bvq1KmBejvUNv33d999Z/w/+E9tnfncXbvW7V7xv1hZaWhsoG+4
ccOPhiYb9Tfumqb3DxTq4F/2f333XdPfjQRBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBCMO7d++uXbu2SmdVQUGBvG0hCMGpqanJzMxUX6Ee
dzlO3rYQnRAoanx8/PJly1Vmq8yePXuA4oD8vHx5G0UQApKeng5FnTJ5ykLV
hT179IyJiZG3RUQnpL6+vry8/Pnz51++fLEwtyBpJTo9VVVVxcXF8HwPDw+S
VkIGkLQSXQqSVkI2kLQSXQqSVkI2kLQSXQqSVkI2kLQSXQqSVkI2kLQSXQqS
VkI2CCSt7969s7CwWPfzOt6XO3fu8Gsq0aUQSFrr6+udnZyFcPisrCx+TSVk
g0DSWldXt0JtRbd/dmPL1i1bI1tBRHhEQECAp6fnwQMHLS0t1dXVhw0dxu2E
LQabDRoaGvi1lug6CCSt8EkTYxPOS7U0tVrj8CAwMNDLy8vpkJO1tbWOts4I
pRFiDq+6QPXLly/8WkvIAOEuCJSWlk6aOIm5x+DBg3Nzc9uwE3jsgwcPvL28
165ZqzRcCbsaP358WVkZ79YSXQThLgi8evlq2rRpzOEHDRyUk53Thp38/vvv
xcXFJ0+e3LB+w+hRo7Erxf6KN27c4N1aQmgEvdaamJjYv19/5mw//vDjm+o3
bd7V58+fobGIhLt36x5wKoBHI4kuhaDXWh8/fjx0yFDm8BDGkpKSNu+qvr7+
RekLfX19OLz9fnsejSRkg6DSCj1EXs88rUf3Hvv375cyl8fX7e3tlZWVP9Z8
5MtIokshqLTCPz2OejCHhyQabjdEFCrtDj08VGarfPxIDt/BMDMzg7Tm5eUJ
tP+6ujq15WrM2Xr17BUWFiblDiHXpiamISEhvJhHdDWOuh+FtJ4/d16g/X/6
9ElHW4dz+OO+x6XcIdTV5YiLp6cnL+YRgoLGQqpy6tQpL0+vaVOnIWdfr7ce
q/7+/r/99hvvhysoKBg1ahRztkkTJz158kTKHUKunZ2c4cO8mEd0Baqrq0/5
nzp54qSqqmq/vv00VmpgFYsQt0RxrJkzZjKHx8mVnZ0t5Q7h8DsMd1Dg2v5B
klJbW1taWlr2ooxbXrx4gRIhPA2HOxt6lsuSli5dKv1RYL+UqRbRpUCy06LD
C+RFcZfjuFv8C1UXSn8U6CoNjCFaxMzUrEf3HszZHB0d6+vr5W0RQQjIL46/
9OrZizn8zp07hcgHCQKUl5crT1dmnjZwwMCbN27K2yKCEBBoqaaGJnP43r16
h4eHy9siotOSnZ3NDU2ZOmUqMjJ5W0QQAnL37t3hw4Yzhx8/bvyzZ8/kbRHR
aQkKCuKyJF1dXcqSiM5NamqqQm8F5vCzZs56//69vC2SMyXPS0LOhJzwO3HU
/WhCfAJKCgsLgwKDnA45+RzzycnJYbenkeTGnI9xcXFxdXWNjY2tqqqSt+Ht
nQ8fPuiu1mWeBpcLDAwU9HAVFRXhYeFRUVHR0dGRkZGxMbG1H2tRXlxcjAQt
uqk4Oiws7M2btj/L0Dmoq6uLjIgMDAj09vb2O+5XX1+POomPiz969OjBgwfP
RZ97/fo12/LWrVvHfY87Ozn7n/TPy8ujm4nfBjVpYW7BDe0+8MsBQQ9XWVkZ
djYsKjIKTQaHh+fjFEB5SUkJdyLgj7dv3wpqxjdIS0tDF8MqxMjIyMfHZ/my
5fHx8QkJCSNHjhw4YGBAQMCjR4+WLV3m6+Obn5evoaHRu1fvFWor5GhzRwHn
7MQJE1nd9u3TV9CH+NBGP6/9eeqUqT179IRja2tpV1dXozw9LR0JGgqnT5sO
qX/+/LlwNnQI4Lc62jpDBg9Bo4wbOw49IFYPHTx0+/ZtfX19+DYKcXra7LPZ
uGHj9evX/f39UXvYPj09Xd62t3cQqU6eNJk5fB+FPoLW2OPHj+Hws2fNZg6/
9Keljx4+QnlOdg5sQCFOvdWrVpeWlgpnw1+C7hjnHWpjjsocS0vL2tpaVqin
p4dCONV6vfVFRUVs48zMTFRav779sq+3cQwbUmNEv8atw8TY5MGDB7z9VJlz
NeUquifmbPPnz2cdq3CgK1+0cBGOtXjxYnYsRK0//vDjkSNHBD1uhyM4OBjn
o9JwJTU1taSkJFYIz2RPK+NEcHJy+vz5c2NzMDZm9BiW5LZ5UNCDogemJqat
9PnTp0/z9jtlzsOHD1l1YUFshh5f0MPB4X/690841pTJU54+edrYHLX+sOgH
GxsbQY/beiD+7FlgUR0zNzdnVYRciSvMy81jWtHm+4Dwz7Kysset4+nTp0zq
OyhfvnyxtbHlsiScX0IfsbCgEIrRvVt3TQ3NshdlM2fMNDczZypBcISGhqI5
UEsWFhaimf7IESPRUgsWLBB9TGPB/AWsBdt8/RA+/OTJk1b6fHl5ubQ/T36g
MpH5ckO7169fL/QRX716hV4Px1q+fHlNTY26ujqi2fYjGkxa586ZK+o8uy12
syriQlaQl5c3aOAgFIac+eMBTFTm69evc3NzT/id2Lljp4ynBSstKQ0MCAzg
G3g4XxYi7NHS1OKGVeOk5mvPXyMxMZHdrp0wfoLBZgO6gyYJk1ZUkdg0ZaNG
Nj1Mt8Nwh6jeLlRdyNru7Zs/LoI1XbCNjHR3d7ezs9tltCvucpzMrsTiQLx7
O7h//z5fFqIf37BhA7SOqau3lzdfe/4aGRkZzOFnKM9Yo7umXT29yKQVvbPo
I2actIoOpZCUVkhHUFBQVFTUer31S39aKuMR8tBAZ+DE83Lv3j0ejUQuwKZN
w4JUlMc9fw3kFH0U+sCx0TQyOFyHg5NWJLCi5UxaTYxNvi2tkFOcCIgiICMQ
JZzXmZmZsrEchvHu7Vhu377No5Fv3rxBnCaZ8woH6l+xvyIc3umQkwwO13qk
kVYO9PWtkVZsgJ1kpGe0asnI6Bw3tS13Wyr0VhD6timjoaEB0RSyJKgHDnrp
0iXJmAoNzeUX6OWx2qXugEsjrdXV1X379PXy8uI20NLSgpJ843Dw4SZXbp3P
i5nUQfHy9EINm5iYyOBY8GQPD4+pU6ZCWhFRRIRHSF4VR+7GOTw6xJqaGtk4
vCylFT/KzNRMfYV6a5aV6iv57U/lAqLWsd+PRVQvg9wcDuPo6KgyWwWtZrTT
CC01ZvSY4uJi0W1u3rhpZ2u3aeOmmg81sbGx1nust23bJpvoop0gjbSyN5hc
vXqV22DtmrXTpk77xuFu3bqlsVKjlT7v6uLK98+VNe/fv5+jMgd6IoPRrWgp
X1/fEUojcnNzbW2b7msMHjRYbHDC8+fP4eTLli17+fLl1ZSrVpZW5mbmBw8c
FNq2RtlKa1fj9evXixcvXr58uWzC75CQEHTfOTlNE7+/evXqX//6F7u7LdqI
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
BEEQBEEQRJfl/wDT/x8N
    "], {{0, 45.}, {228.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{382.07142857142856`, Automatic},
  ImageSizeRaw->{228.5, 45.},
  PlotRange->{{0, 228.5}, {0, 45.}}]], "Input",ExpressionUUID->"ce47d216-cf97-\
4df7-9c8a-f5ead202b12c"],

Cell["\<\
Se hizo el c\[AAcute]lculo de la matriz de convariancia intra-clase dada por:\
\>", "Text",
 CellChangeTimes->{{3.8042828109030604`*^9, 
  3.804282817431692*^9}},ExpressionUUID->"7d1fa5b6-9e0b-47ad-a03d-\
eba96584f95b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnWdUFEnb9+/zvl+ej+85j7smVkVMgIo5B1REATOrgmFFBQwEyRiJImBk
FzGAARPgmkEBxRUThjUgSpaMIBIkKAZY9f1D7d3b2zOM4wQG8Pqd2T1jUdNd
XV3XVf+ruqpafdmaOZb/5z//+Y/j/+B/c5a6TnBwWLrO+P/hH3NtHVetsLUw
N7B1slhh4TBi2f9tSMR/r5C/4fsXgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIosVQVFR0TgnExcV9/vxZ1RdHEC2Lx48fK8PcUlNTVX1lBEEQ
zQf83g/tfmj3v+3wwRfNPpraWtrSfJCzd6/evXr20uiuodZZ7ccffmQHYR/8
NSsrS9UXRxAtC2sra85G2v/YXkpb09LUYubWs0dP9W7qnTp24tsaPosXLa6v
r1f1xREEQTQTtbW1S35Zwhwg5Mf2bdsrpaCioqKkpKSwoDA7Ozs5Ofl6/PWI
iAhHB8dBAwdxbvnggYOqvjiCaFkUFxePHDGS2QgEf1xcnDTmVl5ejh/m5+cj
HEhMTLx8+fKhQ4fMlphBxrBDdVfvXlhYqOqLIwiCaD6gQ4YPH875wEePHsl8
qM+fP9+8eXP8uPGQLrq6un/99ZcCy0kQshEfH+/q4urt5e3n6+e7xdfZyXnj
ho3su7ubu5Oj0/v375utMJcuXercqTMzt5kzZr59+1bmQ8G+9u7Zq6mp+UO7
HxzsHRRYSIKQjerq6s3emz3cPWBcMLH169a7OLv4bPbBd6TDDJ8+farqMhJt
BOiNixcvco+Npk2bJqcnR5wYHBys0V0DXlpRhSQImYFQAampqS9evCgsLNTS
1HLb5FZUVFRQUJCQkDBwwMCC/IJmK8zHjx9xdm5wcsOGDXLOCsvPz7exsVHr
rJaTnaOoQhKEbMC+Fi1a9ODBA9gUzM3MzExbSzspKQnf09PTfXx8wsLCVF1G
ok3h6+sLR8o8qq2trZyPzuGNjx49OkV/Chz1VzPX19V/+PBBntO1JRBK19XV
SZlZnpi9jYF6a6oVLV269NWrV9w/oVV++/U37p87d+yUZ6RRNmbNnMXNVDlz
5oyc6gVWtmLFip07d0qT+d27dzQcykC119TUSJkZLlF6w2zz1NbWfvr0STQ9
Ly/v/Pnz3D9tbWx1+uuUlZWxfyJeOHnyZDMVkfg+ePvmrfEcY+4p/Lmz5+Q8
IBp2UFDQn/f/lJwN3Q2y5efly3m6NgM62YCAAGkkX0ZGxuFDh5VfotYB+iCf
zT5FL4pE/+Tq4sr/p0C63L59OyEhQenl+zdPnjzprt6dmduwocNKXpbIeUDY
0ebNm78aAiAo3rhxIyleBnxUwK6ApKSkr+ZET+3u5l5Q0Hyjcy2c+Pj4P/74
QzQd0uXhg4fcPwXSpaqq6uLFi81UxFZFSUnJhQsX9u/fv2/fvhs3bvAffNy8
cbO0tFSB54L5o83b2trOmD5j9qzZfn5+z549g+u4cf2Gvb29Ak/UbKSlpXXt
0pW5U20tba69yQx6k5SUFAkZEP0F7w/GLZPzRG2MWzdv2dnZSX5s9/LlS3Nz
c/nvUVuioqLCarVVVWWV5GwC6aIqEH527NCRmZuRoZH8823gf9DDSsiAU7g4
u1RWVsp5orZEXV2dk6PT69evJeSBm4JuefDgQbOVquWDenN1db1/777kAUOB
dGl14OpgL2LHl1ADz58/f/fu3VcPAqlQVFSUmZlZXFwsNv/du3cRv5w6dQr2
m5ycPHXKVBMTE26IDwWAW6t8rRizxSl+WfxLD40eu3fvjr8WHxcXFxIc0nDG
+SZ9tfuOHz9eIWdpfi5GXezyUxdu0otki5af33//ffGixc05SbK1gL712NFj
Tf0Vwcu8ufNu3brVnEVqFZw9e3bd2nViXQ1HC5EuAM6fm2Pm7+cvudhyAk8I
B3j40GHacEkAIoWpU6dKULwnTpzY4rOlOYvUKkD0ZDDVAN23hDytWrrAZBBZ
I8QQO5iJzusntZ8ePZT0rBm2BnlgaGjYrWs32LhGdw1TE9OMjAx+nry8vAE6
A7Zu3coZZlpammYfTU9PTy4lPT199arVyCnnFeGA6HB//OFHgQ6HuDI1NYUv
ar3Spb6+3m6NHbdWOmBXgPLO9erVK71Jei9evFDeKVovUOljx4zNzxf/HC08
PNzR0bGZi9QqQFCDRgUBIyGPnNIFMTiko8w/51NSUoLCMHODc0t+lqyQw4oF
UcnIkSOleRD5HWJnZ7dnzx6xf0pPS++u3p12qRJLTHSMk6OThAytV7qgKzx+
/PjevXvF/jUnO4epEcnSJSkpafCgwRbmFoGBgdZW1j00euAnqJA3b95weSCN
kMiPQ2tra8eNHWdoYMgfRD1y5IjxHGPJw6pfBRII3TqUkuifcI9GDB/ReqUL
KC0t1R2vy9ypejf1q1evKulEwcHBbpvclHTw1g7k8fp161etWiU6Xxqtd9LE
Sc+ePVNJwVo+sbGxs2bOkjCdQ07pAnfk7OSsqBGSp0+f9u7Vm5kbCpabm6uQ
w4qywHQBPfJoCji9yXqTRWcv4y6vW7fOw91DJaVq+bx+/XqK/pRnT5v0Ra1U
uqAl7Nq5y2S+iVg3gsjF3Nx84YKFkqULfDgcONeBoi0lJiZq9tHEr3BwllhR
UYE4FCmeHp6cS0FrHDZ0GAyWH2jgr0ZGRiEhIfJcV1RkFM7VuVNn0aAYpXV1
cW3V0gVkZ2dz7lRLU0v+cSpR6urq+vXt98dVMRO9CAa6SPRlopUfejgU0qW6
ulolpWr5wAaHDB6SmZnZVAY5pUtCQoKlhaUCF+kcCDnALe6zsLBQxjKWwsLC
kSNG0pPZpkCAMHv27DOnzwjS3717N3zY8JcvX6qkVC0f9Kc21jZmS8yaegrZ
SqVLelo6ii02PMSVHjp06NTvp9zc3CRLl+Tk5LWuawU1ExQUhF/NmT2H/ZNt
Mtmta7dePXs9Tfp7x5tr166pdVZDCCY44K5du3784UexKxGkJO5KHPMzI4aP
iI6OFsTF8dfit2/fLvPBWwJokHv37OXeDgBHrfDn4/Hx8X21+wq0H2qSOxG+
cL0DvnDpKt/wHIWpqakpKSmBqOD6Aji39PR0gZyAOEcHKvPiEVyyrq6uYNQL
/ZqxsTHkseCO8HtS3D72V34dfmpEtpIoig8fPiBMe/HiRVFRESshwornz5/n
5OTwLwdlRsNAusxL5h0dHLdu3dpUGbS1tL29vWU78hclSJc3b96Ympoyc0NA
dPjwYUUdmWPTxk0rVqwQlFnQZrjmwaXjpqi8zaDBV1VWocFw2wWjVLm5uTA3
gcZjMyH5Q/HfhO8W38l6kwVmdf/+fX19fUFOfr0hP+eR+OkqX36OAsAdwS8h
DuW8AUwvIyND8NDhbzdVIqObunDhAoJQsT9H41lhuaJv3764NbIdXCWgon5Z
/IvxHGOxf0XPBVN6+/btV6VLcXGxqOi9fes2utSFCxayf35oZNOmTQ1vz9HU
PBlx8tLFS1OnTL1wXszSFUgL+Idff/1V1iv7Ul1VzS1sZN7GZL5JcHBwSnJK
ZWVl25gFx+bzcHMIoWQU68Tc3d1HjRol0CHOzs4a3TVQnx07dEQc6uLswtJ/
/vnnDu07/KT2E6p96tSpKqxhdLXz5s5jC0O6/NTlwZ8PIK1NTEwGDRzUp3cf
pHh7eUPPoBngC+I1BPgouZGhkWzPyq2srDZu3MhPgRMYMmSIoGHDb6BmIN1R
dThdzx49U1Ma3sf34MEDqHekqHdTR4arccp69icNqCstTS3WombPml1RUXHw
4MFRI0cNHjS4U8dO48aOe/z4MdrDo0ePZs6YOXTIUIQhqE9EATKMQhw4cABh
hSDxVckr5pH0Junhg++yPQhQuHT50ujBhg0dxrmUP//8ypYC3wSK2rtXb9Fd
X1AJPTR6sDaDW3D9+nWWjtuElK5duqLNhATLNUAtJ+h20arZ+9Em6E7AhZw5
c2bsmLFoMyge/h8VGYXmUVBQsOSXJbBBzT6ayLxh/QYZRO/vJ3+HsQg6WftG
+Cloorj7qBm4I/gBfJycGiZ74Ixo1fBaaLRwYu5u7vJdurwMGTwEN5E1p3fv
3t1JuDN92nQkwk3BsrZt3YYCwyIQBKHedPrroN6gn2VYl4EQA/fizp07/MSG
pfrem2FiU/SnoJnNnzd/5YqVuJuKuz4lkpSUhEoTu0tSaWnp3J/nwnfh+1el
i1gux17Gr44ePcpPRI+GaIsNFMAkm1oKDbkOQ54ze448w6cXoy6i6QpegoZm
rDte9/Sp0zIfVjJlZWU3pEb+/ZbRIY4fN557QYCgccoDXBBcDdqzIB2xNvov
a2trJgyioqJYemxsLAqwZcuWu3fuqvYluZ8/fUYBDh08hLuPEvr5+UGBP3ny
BA4N4gQmjLa3xnbN6tWrY2Nia2pqEAOyzce4EcJvIjAwcPbs2fwUnB2tlxta
ZMB7o95gFHBKOJehgSEzLpx92dJlUFAx0TEPHzxU1ORS2UBtIIb92fhnlFB/
sr6lpSWkS1lpGQq/1nUte2Xn7t274fMRA0InI7phYkyGhVTRl6LxQ5kDcMko
Q7p8afRp3AsCoM8VuPUKoj801/DwcEE62hLE7bhx43DG0aNGszYD1q1dh/xh
YWEPHz7kb+XX/MBFo83AxFBCuFZ4AEjZwsJCVD6CUyR26tTJ29t7+fLliYmJ
SMxIz2DrC34N+ObIFP4NDlwwHWjkiJFb/f81fIdeBl0wsiFgwbkQJqCWWHpI
SAjUwo4dO6A8Vb4DDEIAT09P1pzgSDdu2JiRkQE39ezZM5QZV+rn64fY/9of
1yBsqiqrxoweg5wwz28d1kY0h9YSeSFSSRfS/EDXoX6uXbsm+icvTy/uOY5s
0sXB3gFxmejjfoTA0OTsrWRo6mK777y8PG0tbUR58qz8bXjgdfBQX+2+om9x
ZVfNRgbglj82AhXKmgR8Mr6zFC40QGYuUcJJz549C1OS8qOQl8niNnEXOGni
JDmnN3OgTzEyMtq0cZPYv1ZWVhoZGuGMEE6wKdwmnNrDowXNlEtPS4c2hodE
Q+Kv0x81clSDO+3Yid/sEdewCpRhW6HLly/37t2bnwLxhuM3tQUoJAoEFUK/
Q4cO4e4jRO3Xt19aatq3nld5bNiwgdlIUFAQl3jx4kVWRQZTDTijho5F9SLR
weGb385z7949yB4lvS1FSdLlS+NjHe4N7E6OTop6NopejD+oIuD27dtsrYS9
vT38D9r2AJ0Bzb9HnwQCAgKYWU2fPp1LROWwUYWBAwbyM7OIEvL+W89SWFAI
w+F3wTBtRCKhh0PF5n/x4oW2tjan+mDdkyZN8tns863nVR6cWcEvcboU8QtT
Kag9NjbLWLNmDRL79O4jw8xGdKZBu4O+nq81gC4bYSYiZQSD/HT00XCnq1b+
s25CBulSVFSEI4tu5ZeTk9O/X3/o4aSkJDaPF1Gw6EA94gid/jr9+/eX+eke
B5orOpdt27YtMF2gpanFqRcYDiKdhjXd8fEuLi7Q53BEbBAYBoK7vOSXJYsW
LkLUyY6D5uTo4IiDtLSp7LgEdDHcHEJEygqZ6Qc1oqurK2GqJOLuIYOHsAGE
WTNnrbBcoahZqehx3kuB5IcUTLqgeF5eXvz0CboTkDh82PBXJf/EqtwLa0Rf
MYN4TfKDJHQr6Mv488zj4uLgw5vKj2KjVhv2Q1ZTc3Z2Hjhw4NWrVxX1fA3F
kKbqJPfpTLrAQ/KX0qCQ3N4mXCK6Buiuhpmr5haCg+AsUZFREpoiYvDu3cW4
iG+FxRSCC4QGMF9uDhkvSJf/iSpuHyIObo7ZsaPHFHLv4q/FQysKXDEHThEd
Hc3Uy8oVK+HHjhw50qLaDJMu+PD3t8RPmEpZ67qWn5mtL4CN8C8BffT27dv9
fP2g7ZuKv9C5szrnUtDRwPVJGEVPS0uDm8KvzJaY6U/Wd3d3V9RTdfSP0tSb
ZDfFSRe+oIIjHT++YSwdfpWfee3ahpHPXj178ee3FxYW7t27d/PmzRERERIi
/ZkzZqr8AZmiQFSIWwn3Lgh88nLzYPWcAvzy7dIF9wsdmbOTs8BxwdFBTCJA
Y6II0nH2rNloVMbGxoJx47KyMoQV8IoyzxtHgxHdkbJhiPtaPERRu8a3qp0/
9/d7HMrLy9W7qfM3jMXPFy5YOGDAAH7Dg+6aMWOGBG+sKhB6mMw34dZKf3Vj
f2lAAxg3btzePeKXzDNSU1OZ/kTIoKjNKOC10DXAOX/1g0hKsHEQH066CGZU
MumC//ObHCdduEe9uMshwSH2dvZdfuoi+Q2Vd+7cQVviPzuA74Ugl3yZcOYQ
PGj8x48dl5xTeqCyBg8aLE3VWVtZSxguYNIFDp9vfZx0OXrkn0fAnHSBx+AS
7927t9V/q4GBgeRRU7gdje4aolP0vxVYsbaWtuACcevVOquhcQrSTU1N5Twd
QO/Mnvo1PDaaMvX9OwU4hKtxVxFiS97uHhEKG/DB7VOUboEF9dXuK02bWWq2
VMJxOOkimAfLpItgTQQnXTgVcevmLX9/fzhbqGV0svAAYv0J+nTBGEtBfgGs
T/IeQVFRUWxcGk1aUQ8ocWnDhg2Tpt5EJ3Tx4aQL/1khJ11WrlzJz8ykS8+e
PTnpAn8FQYJIH50dAnC4taZm286dO3fD+g1yX3eLoKqqatLESbBB/vKihmXO
K1ehPkt4ODk5ocauXLmC79JE1jExMVarrUSNC14ax7l79y6XAt+I5gQPJtju
DyeCwBg4YKDMoy7Xrl2DMBMrsHEuRJQwAe7lMmxiJ3/TADh2eGPYHf+5KgxE
sXPzFAhcEC4K1evr66uQ9yT+Perym6QFqpBM8+fNZwOb8DyKGjyHaiqUAjQe
CZGgnNIFR0Y7gSCBKpMsXb511IWBhsSmkQ8fNvx5pqS9LqUHnr+4qFiaqpO8
z7xk6cKPecVKF9gsThEZGSlZujx58gSGL//Se4hM9rJpPufPn1+0aFF+Xv43
Xbj0oEngFqPZQ3o1w6gLAzbOZtogPGnq0dK3Ag8pWntikfzsnpMufJfLSZcd
23fwMwukCyLH/v36c2/VQccEBS52vBdlgN/mz59ETw3rkzx3EVbMxodxv44d
a3L762+ltLRUmnqTPBOJky4RERFcovTSBfE1F4DjMo0MjZqaCTN71mw3tzay
QxdcN0IGeA/4EC4Rl4/7i2gFUpz7sJfmoL3hu2AxhSjw2/b29qLtvKysDL/F
cQSbOdjZ2UE2C1Zn447jXHqT9GR+BgGZAasROxELvQyEPRo8//2YsBTE19xo
J8xn586dqIrA3wJZCsxQmo0m4uPjTaRm44aNinocn/U8S0NDw8bGRiFH+9L4
qsdpRtPWr1/fVAaU/MiRI4gp/P384XVR29yUXQZcOhzL/Xv30RiQGSZ8//79
5OTk5hm2klO6cHxVuuCv0P/8FIhzuGUJE26hzRA1eHp4sok3U/SnwHvzM6CJ
Jj1JQl3BC9XW1mZmZOKYzbZ6UU7pwoBPlixd7ty5A8cimMysKJQ31+VLY3d/
OfYy3MXvv/+uqGOyuS5ipx0yEI8sW7bM1MSUja+i5QjaDJpKenp6UlISFCxi
CrhQVAIcYPPsVCCPdMnNzUXKnqA93IWgn4XzET0LcqKz4K/dw5WyaWNNFYy9
22jIkCFoD+0a90N+9vQZX23iO2rp4cOHcAgN4r+4GG4qJTlFIQHgV5FTuowf
N57bKRcXYmlpCREoVp+jwQQGBirtOpoV3NN5c+fBANG5cIloNgcPHBR8kA01
5uHuge+3bkpaSvD06dNVK1cJnu6xrury5csHQg7gOPzXbQO0qz69++Tk/GuO
AXsOjkPJHNFAukCciN28Ba0ddxwXzn/cgMaA/JwJoEUhLl6yZImRkRFLqamp
CQsL++p50UHfkRpUl0JCNnSFUKGGhoYKfHklmofZEjPRFUYM+JzQw6GDBg5C
nIj762DvgDurpaXFH1JDVSA+OnfuHA6CzLExscnPkm2sbVxdXJthJ4pmky67
d++Gp+WnsBVGTQ3+4x7NmT3H3s4emgQdN1wNGp5gl7PoS9EIq9FJ7d+/f++e
vWiKf/zxh56eHn/OnvJoHukSHd2wwkhJ70dWqnTBremu3t3b21uBx2crjJry
MKglXM7iRYvRZvLy8tgabahf/g1CzIhGgkjQz88PnhY1ADk0eNDgmJgYRRVS
AvJIF/jArKwszh6hGeBYxO6MAfciusJo1KhR/v7+opnZkX/77TdDA0OIE4QS
y5Yuw3kRFPOjddgpVJO3lzesGP4fNxdueenSpQcOHJC1Mr4BOaULnAlnYmgb
M6bPgG8RFavwLbgRMr9CF1VUXdWydtf08fGBZP3qTDmfzT6ic11gTYLLgd6w
W2MneMSDXvXMmYb9Dx/8+SA/P3/4sOEzZ8zkZCFqfvSo0dZW1oJIHLq6YfLV
admXMEO6tGvczmXnzp0vi19CrrBNwGAg6EbR/tevWy+QDdOnTUdQ86XR4hYu
WIjIF1fUoX0HticbrObGjRsyl0d5oMXOnz9/xPARNdXil7TIjKeH58gRIwWG
gJrE7YOChQXFXYljifA2epP02jW++iEtLQ2VjDqEE4CLgEKDj4JuYTl9t/iO
HTNW2QMvKCT8tkZ3DRRp3759aKu4+7gQFIytJR83bhwaKiyaNQnmE/CB1xKU
7avSBbJNMP8N3dDQIUOh2fiJbJe8srIya2trg6kGXEx3MeoiW4WxYf0GeFe2
GAoHRGnRIKfoT2H1j9JCS/x+UmFhvlhQSNSGi4sLyoPuAx0Kqw20MZSTVVFI
SAjrZXAJbKYEEqFykcjvtr4qXY4eOQrbV9KFKE+6sBuxYMECxR4cR0MEt2PH
DkE6ahUuFB4YjZkbQy4qKmKTbVauWIlujk1qPXLkCA7i6OAIWcVyom3DHrdv
U+7em7jpKORW/62seaA8rM28b9w6SU1NDYlbtmxhzYPZICs83AIyC+JcXAJ0
yDSjaWJjOjaWDvviJzo4OKDfEeR8V9vgphA64Szcyn0UiUUuMEC0TNaMEXp8
adwEFcHs7du3WU4YoK2NrWIqqGngl9DHsXoLDQ1lMh5mxV6O1hARmJujkGwX
UHxh+4r07NHzSeIT0bcbX4+/PmjQIEHlMPLz8rt26cqPK6UnPKxhD/zly5fL
8FvlAfEGhdDUnpYcotKlvLwcbUBHR4dbpZWdlY3eE030t3+DHo2/iC83Nxcu
cczoMdAz0CdTp0yF9YnOwfZw98Dx5RmRQCNHj7B9+3boZ/S/0KIIDFdYroAC
h4uAOYt6HigT3F+oKfR6bJcntCW43zW2a/Dd0tKyqeWuKgTt3NnJuVevXmzj
AsUSHx+vpaklWHTj5Oikq6ur3k29Q4cOsCx2jwob9zBnay6gTufMmZOakoqQ
EPbl6emJYIf9Fr6rYd3WokUKLyofNCfUie54XSYJ0NFAiKKEt2/dhstiL93G
//X19c+fPw//hkTW/zaMxkyYgPiLfzTJ0gWXj/5XMM4PV/Oz8c8Cd5qcnAwd
gngZVYQOhXMj27ZtY0WCT9bT03N1cWUvaodXh4/iRkRTUlIQqyr7pUgoJCyF
rXeG7IfxsvVEVqut2LMtVp/QVEhEXIzAn02ARGdkaGhY+N/NVL9IIV1sbW1F
e2pFoSTpAkmAdmVsbKyMVzxs3LBx+bLlgjIbzzFGA0MlQ5Bwz6fYevx2jQvY
0ajs7OzwK/Y8UX+yPqdvX716BRNQ4FMtseCmw4IG6Axo99+1816eXrALBClw
72xeMRq8kaFRdnY2AhlkYIYJQ8B3XAt3KPwqLCxs3rx5YjdGw1+9vb0NDAwE
Y7Z//vknPBI/BRaEXh5BCvw5OjhuAxn4c7ZGA5+xY8fOmDEDxyxs3ILGwsLC
zMyMq/yJEyZCzCi4pkRApIxOk5UHngH6/0vja+NwE5lPgMlPnz793r17CHlm
zZrFDBO1h87R3d2df6ibN2/CKptaoAGB1K9vP9nG5CPCI8QOq6oW3DhUFxqY
5Gyi0gWaBwJArbPa/fsNrjU/Px/3ut2/905hH9id4Jksett7d+9FRUbFxMSw
ja0Ep4N/gJ9MfJwoz6UhYIyM/Hv5P+579KVoKLQtPlvCToQ1tVoNDXvo0KGb
N2/eHbibzbpE2Ro2j9XQgMX5+vrKUx5l0DDbJPRIt67dlLQFKyoKxnLlyhV+
YlYjkKzoXrknbghn0KuydIjYtLQ0FkGggY0ZM4ZbRFNeVo5oAv9EyZX3zIiN
P6NsOTk5KE/W86z09HS0uuqq6tTUVHjFhkJmZ+M7GkbDBlBPn+FakIj8+JVg
zwTJ0iUxMXHggIGi78kKPRwKi+BPd0GFQM5BuuMsODXX96G1o7qQiD/h7Kg9
pgZhHfBmXAwFlQWvi3pT6muFGwqZmooaY1WEgrFLg51mZmTmNoIvbE0iKzmr
T/wE4oo/PUCydEG1QwIpb+tOZUgX1LyFuQUsQhnvC/vSGNahsQkG/VjbAGjD
XNdTUVHBWjJ+8jzzOVo7azOof8hd7ghxV+LQzeGHKLnydrfG6dAe+BbE1tSj
5XA2iL/CPzTsq1ZVJbBBbikrbtaN6ze4uZQV5RWCE7F3GAnmG7ACDB0ylP/s
jG1Jx+oHLZebJIZTpCSncO6Lm9mIgkGRck/W0LChCWNjY5X9Yg4UgDMr3Efc
qS+NQ2rMrFCB8AbMV8AVc4bJGgN/ikV6WrqNjQ0bRELmz5/+da9xCVZWVlz8
KAM4l6K2C1MguIMIOQULfASgMhHU859Ks30GIiIimHOATT1sAtT2N5UHB1y8
aLG/v3/zv5gDp7a2skb8yN/mMS4uDs0YQXRLezsVbkF4WLh6N3UJU9TkJyQk
RJ4ldXACiBa5ZVkIDQYPGgwrgKoU7e5bJpKlCyrHxtpG9OEy3AikizyDJPb2
9rNmzuKEClrgnj172ONOmY/ZnEiWLoi1Z8+arTx/mJSUBFtWoA9B/7hmzRq0
XqUOfC1csFCeDbEvnL+gr6/PtUZXV9d5c+ehEta6rlWq4pUfeLOzZ88eO3aM
NQnoGVcXV0EeeGBDA0NRW2u4wLVrv7p+RALovzT7aHKSL2h3EARqZWVlbEys
6EZPLY3r16/v2rmLU4COjo6C2BwXoj9ZPyO9yX0kWim474cPHZ7781wl7cj9
rcA/h4aGqurFWOfOnmv/Y3v+ECtMHmKGexNTywEuFPblYO+g1LqCUaMLLsiX
ccfs8PDwAToDiov+HjrYtm2bk6MTTClgV4DiyqgsEL/AISCgO3HiBKJFGIgg
dEUENHbM2KZi8LATYfZ29rJFu3Dg48eN9/TwZP/EQXr36p2aknrr1i1lPBlU
LDAZVNfxY8dHjhiJeK2mpkZQCahJqBrBXCCFo9gVInv37v1J7Sdllxkiefiw
4aLTGKRk0cJF0FdcbU+bNu3WzVtQcSi84sqoeODBYmNj9Sbp2a2xY5+ZM2cK
JHrDMx1zi/3794s9QkpKSg+NHpIDcAnA4aOuuBNZrbZydHCE60NlqvwVjZJB
L8Cvt6VLl4ourDhz5ozgHU9tCaiF06dOq/YNpLA4Hx8fOAcVvrkPLhddRn7e
vwYE9u3bFx4mfLeIaklOTkYAaG1tLX8whZ5FgiDHvcAdMTUx/fhBlhNFRER4
enpy5p+VleXt7Y3GlperlCF3xXL8+PGDBw9uWL9hq//WY0ePRUZGCmrb389f
9KUzHFA+JvNNbt68KcOpoe5Wr1qdkvzPxqQISH/99VfJ+9O2EOBOUV2onE0b
Nx04cACeU9AXnzx50t3dXeWvF5eeM6fPICrHLZDfQ6ampkpQJpBbkLsyv5ba
0sLyyuV/Hu+itWzduvXUqVMyvByzOUGAAKlg/W9yc3L5ea5evWpkaCRhwwHI
D5l3+Iel8/d7efDgASIspMi/l7uygZUJ6g3RNz/Di8IXEyZMaPljRzIDn4zQ
Epq2eRazN4WSVkq2MWDpBlMNILHkXwrdME575uyN619ZORWwK0DmhXVtEtRb
wu0EWxtbyUKiqKho2bJl/DcOEMXFxba2tsqY5qok7ty50+WnLlCw8gfgUGv+
/v6SB1XYC2pl3kW8TYLwClpC8ptJcXfcNrk9fPBQhZFvSwO9OdqtDK9GbXWg
bdTXtZpQ6PuktrZ20aJFDUNDipgrEhsTK807LmECBw8elLxL+XdFYWFhSHCI
NEo7MzNT8o7E3xXl5eXbt29/8eKFqgsiLSjqqJGjLCws5Ndanz598vLyWr9u
/VeHbnBSNzc3/qtYvmegSbw8vaR5GT3u0a8Bv7LJrgQ4d+5cy9zQg/jeqKur
c3Fx6dWzl/xvKfr48ePVuKt9eveBW1BI2QiijVFaWjp82PBpRtPkn0785s0b
P1+/9j+2l7BfLkEQRJtk3759vXv1jo6OlnNQNCEhwdzcvHOnzmqd1WhomiBE
gYmZLzfX6a8j59KM+vr6iPCI6dOmQ7cMGjio5U9VIgiCUBRwpOfPn4f3CwgI
eCsdCPRqamqqq6srKytLSkry8/IfPny4d+/eiRP/2YFn6VJJb4MliO+Tjx8/
urq6anTXSExM/FZzq6ioKC4uzsnOuXnzpoeHh5amFmduR44cUfWVEQRBNB/s
ZTcd2neYNHHSNKNp0nyMDI2mTpk6WW+y7njdAToDunbp+kO7H/i7BXbs0FHy
y+IJ4vskeH8wrKOHRg8YkfTmNkV/ip6e3pjRY/pq92WveOZ/kKio91YTBEG0
fMrKynT668AZKvYjdhtYgvjOSUxMVO+mrnBzW7li5V/1LXqTEIIgCAVSXlb+
x9U/FP65c+eOanfyIYgWSGZmpjLMLSvr2/YVJwiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAii1fH58+cW/jpUgmgzwNxoMjxBEITMlJWVHTp4yMbGZqnZ
0tOnT6u6OATRlklLTduxfcfyZctXrVqVmZmp6uIQBEG0UD7/F0F6bW3t+fPn
TU1MQw+Hnjh+QltLe+LEiSopIUG0DT7zEPypvLx8i88WiJbw8PDdu3erdVZz
2+SmkkISBEG0WKqrq4ODgy0tLZeaLWUfCBXur2/evHFwcIiMjOTeIjdv7rzN
3ptVVFiCaN1kZGR4uHuYLzfnzI0/qPLkyZMFCxYkJiYySYP/6+jo4J+qKy9B
EETL4tOnTzExMaNHjUaUl5aWVvBf6urquAxwszt27OB+UpBfMGjgoJTkFBUV
mSBaK+/evYPmN5hqEBERkZ2dzWytsLCQG3j58OGD8RxjWCL3k4sXL/6y+BfO
HgmCINo2N2/eDA0Nra2thfy4du3anqA9kZGRAh94Ne6qg4NDUVFRUwe5Hn+9
X99+Odk5XEpWVtbjx49p6iBBcEB7QI1cOH/hr7/+gvw4fep04G+BSUlJgodB
W7ZsCQoKevPmTVPH8fLyWrZsWX19PZdy48YNaBslFp0gCKLF8ODPB7sDd8NV
IsTbtWsXZMzHjx/nzJ5z9MhRLg9SDA0MMzIymjoI/PCqlatmTJ8h+jieIAiO
wMDAu3fuDh402MPDw9nJOTc3t7qqeszoMa9eveLylJSUWFpYwuiaOkhpaal6
N/VDhw41S5EJgiBaFp8+fdq5Y2fdxzp3N3eN7hpPEp+wdFtb240bNnLZrly5
YmFhIWH8pKKiYtTIUQcOHJB8uurq6tu3biuk5ATR6qgor3B0dHz//n3/fv3n
z5//9u1blj5yxMikJ0lcNhdnlzNnzkg4Tkx0TMcOHZOTkyXkefTo0YnjJ2Bu
NOxJEEQb4/Pnz68rXn/48MHUxNTB3oFLhC/lx3Shh0NHDB+xcMFC0U9kZCQy
vHjxoodGj/Pnzos/TWMGLy8vg6kG+ImyL4ogWiYfP36srKzMyMhQ76YeExPD
EqFkYDsQ/1y2mTNmGhkaidraooWLnj9/jgwHDxxs97/tmnobe319vbu7+6lT
p7Kzs11dXHG0qqqqZrg6giCI5uT169dQJrdu3WL/TE9P79a1W0JCApfh7Nmz
5ubmWeKorq5GhsLCwu7q3X02+wiOjIiPPY7/66+/EGMG7Q4i6UJ851y6dKlz
p86cVjl27Jj+ZH1uUR4wX26OYEHU1rKzstlTpODgYEiXhNsJgiPX1dUh7oCk
6d2rN1tqBKODYYaFhTXXxREEQTQTiM7g67gllr6+vsOGDoPTu3DhQk5Ow7Rb
RG2jR4/mP44XAD88ZvSYwYMGQwVxifiVra0tXwIFBZF0Ib53tm3bZmRoxL5/
+PABtubl5QW7Oxlxks2Nf/TokYuzi4SdqGNjYzt26Lhxw0buYRB+npuba21l
/f79e/wzJTmF/amsrAzSJfpStNKviiAIonkJCQ6ZN28e+15fX7/klyXu7u6I
8jZ7b+bWGR09ehSJTc3ChZv13eLb/sf2ZkvMHj9+/O7du3t3761ft/56/HX+
o3aSLgQxf9784P3B7HteXh6kxY3rN6Kioi5dusTlsbOz4/9TQGVl5aSJk9S7
qSPKKCgoePPmTXh4+Pr167OzsgU5IYoCAgIgkJRxIQRBECoEDvD4sePcPxMS
EhaYLvDz9eN7PEgaL0+v1atWJyUllZWWVfwXFuV9aVQvbpvcBg8arK2lPXTI
UPjM8vJywYlIuhCEmZnZy5cv2XcIe0gLG2ubAyEH+HHBq1evpuhPCQwMzMvN
gx1x5sYNxVRXVcOU+vXt11e777ix4yIiIgSjNDU1Nf7+/mfPnsVhJSyyJgiC
aKV8aoSf8vHjR9GFCUiEqoHOsbGxgYZhnytXrnAZ4CRLS0tzc3MRFYo9EUkX
ghB9EiR2HTSMKCoqysXZxcrK6m9zW70aSobLUFdXV1BQkJ+fLzqogt8i9Lh8
+XJmZiYsVMIADkEQBNEU1dXVYSfCLMwtDA0Mjx09Bper6hIRRNsEusXI0Ein
vw73efb0maoLRRAE0fqor68vKSkpbQRfuMdMBEEoFthacXFxEQ/+prsEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQUjJ/wcFeryD
    "], {{0, 42.5}, {372.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{483.2142857142859, Automatic},
  ImageSizeRaw->{372.5, 42.5},
  PlotRange->{{0, 372.5}, {0, 42.5}}]], "Input",ExpressionUUID->"76cfaaeb-\
2756-4d31-9414-999e70327805"],

Cell[TextData[{
 "y por \[UAcute]ltimo se encontr\[OAcute] el valor de los par\[AAcute]metros \
",
 StyleBox["w",
  FontWeight->"Bold"],
 " por medio de la discriminante lineal de Fisher:"
}], "Text",
 CellChangeTimes->{{3.8042828840376606`*^9, 
  3.8042829104757986`*^9}},ExpressionUUID->"b2ed546a-273d-4af2-986e-\
2d2cbf6ec3a9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnHlUVeUah1v3/nP/vGvdtNI0s27ZhZiaTEDCApFBvSo3HKBEBgG1wKvI
pDkALkSQSUaFTEAFQRBBXA4FmSMEAmqUQ6lJkECmaWF5H9itfXcH2Bxm0u9Z
qIf3bL7z7m//vvf7vfscfNr5vRluf3nkkUeW/o2/Zsz3Nffxme838+98Y79k
qYf7EleXKUv+6+ru6jPe+a8EX+dPHX9aH98XCAQCgUAgEAgEAoFAIBAIBAKB
QCAQCAQCgUAgEAgEAoFAIBAIBAKB4KGkqakpKTHpp59+GuxEBAKtOHLkyMbw
jbY2thNNJzY2Ng52OgKBVty4ceP777+Pj48XuhX86UhMSOxSt7iI7Ozs+vr6
Acvqz0VlZeXe/L2//PLLYCcyFLlz5w7i8X7f22OhR2hIaFlZ2a+//vrbb78l
JyfX1dX1eNgudYto/fz8Pv74Y16ux6/yYMPM7NyxM2tX1mAnMrRgWkpLSw0N
DE2MTQL8AyIjIhcvWmxqYjpt6jR3d/fn/vncubPn5IOR2c3Oad9/danb9PT0
6Kjo/jq3B4Vbt245ODh89tlng53IEAJZ6uroWlpaynWVMos1jYqKGjlipFK3
P/74I5Ke3DlOjk4ag6vrtrq62uIti2vXrvXf2T0w1NTUWE22+u677wY7kaFC
SHDIo/94FJVqxG/fvv32f97WqLfdRUW3GLZ3nN6JiIjo8eAPGz4+PhnpGYOd
xVBhkvkkdOu73Lf9U0ePHu0/3dbW1lLnv/322x4P/rBBF4CXYzccsFfktSgv
LS0tmMl79+7x+F4L/94jcq8N6Vn5SClIRJskOVLlMJ7iAJUfNzc3R7fjnh9X
VFj0ww8/KIfiB6dPm37x4sXunOvvMBQGYM3qNa++8mrVmar6+nqNNGgDsdDt
z0Wy0EidVlEKUvkbGho0cmOWMDM3btxQP7sBQJnz3bt3paCUM0HlkVLOHNaz
JvTKlSsvGb108uTJPkhaO0jV1dXVxtrGFmxsradYU/Dz8vJaIza/R6Qdk/Na
sGCBjU1rnG1UvRxh19etXWdnazd79ux9+/ZpqJf53LFjB3s9ppQ57GyQ4OBg
dMvXmKfGUHtdXVxTUlJwU9Jozc3NPRPGiRMntn+0PSY6Jjw8PC0tLTcnl2yV
Bzg7O7c3JynJKZYWlqRBlc7Nbf2RsLAwZonIm5PeXBm0Umr9PvnkE/tZ9lOm
TOGweXPnnT9/vgcZ9hVxsXFyzkVFRXQBISEh1tbW5m+Yv/XmW6zcn3/+mcMO
HTw0c8bMKVatOdMIfPnll919Ic7dwsJi1cpVfX8OnUDp4IyWL1s+fNjwxx97
fO2atWfPniXzrVu26r2oN+zRYWzTp06dknLLz8+nRs3494yc3TlMQmdjImnH
eY6RkZGHDh0KCgxiQ+cKUn+kZy9fvuzk5BQUFCRHOoM09PT0JOkqv1jaJNB/
b9EyPmtNI8gkBK8LHjNmDAnExMTg6GJjY6laFNuXX3qZoIuLCzpxc3O7cOEC
5cvL04vgi7ovaiyKgeTYsWOI86nRT5FJUlLSksVLEhISyIdipa+nT9DTw5MV
6rHQg4uChl0WuBA0MjKSNxTtmTtn7qyZswb4niEK0dHRIecVviukCAmgPSKz
HWbLh92+dRvdlpeXq48WsTFCPoZxSkpKxj49ds6cOSiNSbO3t8cOaWMzWu+D
lZRy6dtL94nHn2BBSeWib6GMj3pyVIdbHo5iwusTeHUuenp6ulztAwMCCY54
YgRillcT3kZKleLc50lqz/Xr11979TXSMNA3wP/IOS/1WSrl7O/nL6uUaiDl
vH///u6+0Jo1ayjjrOK+zL4rqA/oioRZm/iB+23XyHiCMRWYkitvdmzT2AaV
Snu/zT75+vpqyLKgoAAxeHt7v7fkPcpUt3JDCZkZmZgKExOTF8a98Njwx6S5
ZcDS0tJunmjX1FTXPDP2maqqqvZPybqlICsLS2hoKMHRo0ZLG5MEK07KMyE+
QQ4yz1999RWLurKisqG+QX3x8hJ3tADjqjKOrFsyVx62cuVKyYBVfF4hBw8U
H5By/jDtQ41xmpqarl69qpLt5s2beSFeTuWY/oA9Xco5fEM43x4+fNhqshVu
hwhi45SRq5WV1datW7sY5+ChwsJCjSDTO//d+axuvJ/cIHQLLiK+ovaL2uLi
YrYAVhOJYY97MJQ6n5d//uwzz1ZXV7d/StbtnNlzlHFJtzr/0lE6Q1m3m+M2
SxHmMC4ubu/evWVlZYkJiTjMTz/9VCWT9aHrJ1tO7vKLi4Jj72wQWbcLnBco
45JusYLK3lbWberWVDm4v2h/aEgoXTAeXiXbLSlbXnn5lYG/482smk00I2f+
ZnG9+867bIVHjhxBbFI+zDYmgXKqPs6unbs6NBJMIHqgXGvv9/z9/fGK7ePs
CLRCpPqG2RtaDqU9lZWV1NvqKjXd4qCUcUm3ujq61FI52F63bL6oRX43f8OG
DezdKrPR1NhUpQXnzp1TsaOybt1c3ZRxSbcYnkuXLsnBDnV7+vRpBvFb4dfh
DUkZ/DPyGJSbh5mZmdQx9t/U1FS0evnSZelK4RYK9hYEBgZuCNvQ5SDUbRq9
9nGq5bjnxzHUqlWrtHTv418bf/DgwQ6fIhOmlxaYx1QMOg6uC52R9/ve0gGx
MbELFy6UgvT499v8xtq1a11dXEHlJjkrlBkoL+tg6fVStzhAQwNDWScUyZEj
RmL+tZmKHtN73Up0qVuuiImxiWQyBxiaSn391jaT+XR2dpY8PLsDEVsbWyND
o5qami4HoSCv/mC1huOigcJsREZEssWj3uPHj2uTD+vX0dGxwwrPzkVWmzZt
kr6lHbC0sGTnVZavxMRE7PrpU6flCGe0yGtR+3sFSsicekvn2P6pXuqW3DAG
8prFTT058knlj/QHA6ZbTw9PG2sbZafc0tLCq0s3//sVLqt0J4QvuaHGjWMV
iNjZ2Wl5eyQ5Ofnrr79WRrZs2bLCdwVbJPsIVsHQ0FCbJYBuqf+enp4anySs
q6szNTXV1dWtra2Vg9HR0RoOk1rNj9MvKH82KDCoyxtoLNJtH25rH++lbpVw
NS0tLan/6pn0noHRLcqZOnUq0pUjLP+N4RvZMXfv3t0nJ6LOsWPHaNhZOMqg
l5cXAsC4ajkIUl+/fn1FRcU333yDAQsJDvFY6CHfIeHZqXZTDQwMtm3bhplU
adPQrbGx8ayZs/CBPj4+aalplEoWBbaWjp4GR3kwYmZ/37ljp/QtZS3APwDN
m5qYyjd/WCxxsXFd5s+Eu7u5awRxStRqLHrrHU5Do2XLll28cJFlyH4kme3R
o0ajjaTEJA6OjoqeN3eepAHMjK/vH644y/+DVR+4ubn1912jnJwcZmDs2LGk
wWSSBipl/rF8ZmZm0u0jd3d3bCEHh4eHOzg4SDnb2dpxjHIodd02NDQYTzDO
zsqWIyxMVvfwYcNXr17db+f3f7jcWbuyNIohJ7v9o+3duheNirKzs1EvZfDk
iZMaez0u6MCBA8uXLcfy0QN2NkhMTAwVjPJ45syZzIxMKjZy8vb2ZuQrV660
P156O096TJ1JSUlhX0bMR48elYIUGW0MGHsNxVNjQbEM9+zZU7ivkPaK5ZOb
m0v5JXmWT0FBAUH2/by8PMlLU+rz8/OLCnH6RRygUXPoyFizXXa4vYdWWpkz
jxFYY2MjuSlzlm5rFBcXK3PO25OnHEpdt0wOm53GDdJrV6+x2FXeDxVIsBbo
+744/8X9Nu2Vl5ezfMaPH+/l6SXdRpP9sDpcWUqoug3uGazBuLi4rKwsyf/n
7M7p8IbbEERdt/Hx8QEBAQOZz4OE9OkOPz+/+223wamHyHXxosUYvLrrdZUV
ldp/vDkjI2P6tOl9+xYtWm21B65uUZui+IrYGMHqGICq2yeo6La5uXmS+aSa
6q4bFkGH4GOdHJ1o2TA2gQG/27Pjx4/TtpeUlNBqqb/jowSN0WUcPny4D9Oj
zGIClV/2s+z7cPx+gn0nMjKSbhqjzgMMhvJZ5pypDl4XLH6bqTfg2eg1aKDk
9z6YWLOJZkSwx936/BhNpfN85z60Z1Tvhj9CpeqrwfuPmzdvYuOb2+CBxgcg
cbZscOK/oeglKFNfT59tSxlMTEykse3sLQwV6AoD/AMG8QNdQxyaXIqt+F3+
PiEsLCwtNU0ZkX4Bqme/Lk0317MPVDwMNLUx2Fk8INxtQxmhCP8pdmSBQCAQ
CAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCwYDxPzNqRJ0=
    "], {{0, 28.5}, {116., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{218.85714285714243`, Automatic},
  ImageSizeRaw->{116., 28.5},
  PlotRange->{{0, 116.}, {0, 28.5}}]], "Input",ExpressionUUID->"f775a57e-942a-\
4ccb-be45-b5d31dcefef0"],

Cell[CellGroupData[{

Cell["\<\
Funciones para el c\[AAcute]lculo de w mediante la discriminante lineal de \
Fisher\
\>", "Subsection",
 CellChangeTimes->{{3.8042829340506086`*^9, 
  3.8042829494872227`*^9}},ExpressionUUID->"688303d2-cae2-4a61-80b4-\
4ad7e96e846c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClassMean", "[", 
    RowBox[{"data_", ",", "class_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "attributesOfSelected", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"attributesOfSelected", " ", "=", " ", 
       RowBox[{
        RowBox[{"Cases", "[", 
         RowBox[{"data", ",", 
          RowBox[{"{", 
           RowBox[{"_", ",", "_", ",", "class"}], "}"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Mean", "[", "attributesOfSelected", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WithinClassCovarianceMatrix", "[", "data_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m0", ",", "m1", ",", "semiCovC1", ",", "semiCovC2"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m0", " ", "=", " ", 
       RowBox[{"ClassMean", "[", 
        RowBox[{"data", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"m1", " ", "=", " ", 
       RowBox[{"ClassMean", "[", 
        RowBox[{"data", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"semiCovC1", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"x", "-", "m0"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"SelectClass", "[", 
            RowBox[{"data", ",", "0"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"semiCovC2", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"x", "-", "m1"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"SelectClass", "[", 
            RowBox[{"data", ",", "1"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "semiCovC1", "]"}], ".", "semiCovC1"}], " ",
        "+", " ", 
       RowBox[{
        RowBox[{"Transpose", "[", "semiCovC2", "]"}], ".", 
        "semiCovC2"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FitW", "[", "data_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m0", ",", "m1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m0", " ", "=", " ", 
       RowBox[{"ClassMean", "[", 
        RowBox[{"data", ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"m1", " ", "=", " ", 
       RowBox[{"ClassMean", "[", 
        RowBox[{"data", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Inverse", "[", 
        RowBox[{"WithinClassCovarianceMatrix", "[", "data", "]"}], "]"}], ".", 
       RowBox[{"(", 
        RowBox[{"m1", "-", "m0"}], ")"}]}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.804277367539917*^9, 3.804277446900009*^9}, {
  3.8042779072801037`*^9, 3.804277948629918*^9}, {3.804277997579892*^9, 
  3.80427804225021*^9}, {3.804278155210216*^9, 3.8042781553399143`*^9}, {
  3.8042782014302855`*^9, 3.8042782287501707`*^9}, {3.8042782684901466`*^9, 
  3.8042783043202543`*^9}, {3.80427838849332*^9, 3.804278393199419*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"64851f96-0d47-4008-8f78-0059c22ad2f5"],

Cell[TextData[{
 "Para las instancias de la base de datos Iris se encontr\[OAcute] el \
siguiente valor para ",
 StyleBox["w",
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.804282971907129*^9, 
  3.8042830052474775`*^9}},ExpressionUUID->"7985daf6-c1ff-425d-88d7-\
22f2e720bd6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w", " ", "=", " ", 
  RowBox[{"FitW", "[", "processedDatabase", "]"}]}]], "Input",
 CellChangeTimes->{{3.8042783110451164`*^9, 3.804278315060191*^9}, {
  3.8042784277401133`*^9, 3.8042784282303443`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"acf47c27-cc48-44e3-90f0-711077bba9ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.11642956966332889`"}], ",", "0.1429106599358504`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8042783156044707`*^9, 3.8042784294693274`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"920f280a-ccf7-43ae-90bf-c969060d19e3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Funciones para la visualizaci\[OAcute]n de la proyecci\[OAcute]n", \
"Subsection",
 CellChangeTimes->{{3.8042829571440477`*^9, 
  3.804282968197011*^9}},ExpressionUUID->"32cd12ce-7a45-4691-8af2-\
d3de594c906b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PointProyectionLine", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"wx_", ",", "wy_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"pointX_", ",", "pointY_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "wSlope", ",", "proyectionLine", ",", "pointLineX", ",", "pointLineY", 
       ",", "pointLineSlope", ",", "b", ",", "pointLine", ",", "minX1"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"wSlope", " ", "=", " ", 
       FractionBox["wy", "wx"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"proyectionLine", " ", "=", " ", 
       RowBox[{"wSlope", " ", "x"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pointLineX", ",", "pointLineY"}], "}"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"RotationMatrix", "[", 
         RowBox[{"90", " ", "Degree"}], "]"}], ".", 
        RowBox[{"{", 
         RowBox[{"wx", ",", "wy"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pointLineSlope", " ", "=", " ", 
       FractionBox["pointLineY", "pointLineX"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b", " ", "=", " ", 
       RowBox[{"pointY", " ", "-", " ", 
        RowBox[{"pointLineSlope", "*", "pointX"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pointLine", " ", "=", " ", 
       RowBox[{
        RowBox[{"pointLineSlope", " ", "x"}], " ", "+", " ", "b"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"minX1", " ", "=", " ", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"proyectionLine", " ", "\[Equal]", " ", "pointLine"}], ",", 
          "x"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"minX1", ",", 
           RowBox[{"wSlope", "*", "minX1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"pointX", ",", "pointY"}], "}"}]}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProyectionLines", "[", 
    RowBox[{"w_", ",", "points_", ",", "color_"}], "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "color", ",", 
        RowBox[{"PointProyectionLine", "[", 
         RowBox[{"w", ",", "#"}], "]"}]}], "}"}], "&"}], ",", "points"}], 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.804280479471739*^9, 3.8042805528941736`*^9}, {
  3.8042807151871843`*^9, 3.804280768077893*^9}, {3.804280992822795*^9, 
  3.8042810052443247`*^9}, {3.804281046653881*^9, 3.8042810749052544`*^9}, {
  3.804281140347436*^9, 3.8042811486427298`*^9}, {3.804281406561346*^9, 
  3.8042814067855825`*^9}},ExpressionUUID->"f8a34c83-da44-4fe0-81af-\
f28f8f29df79"],

Cell[TextData[{
 "Aqu\[IAcute] se muestra una visualizaci\[OAcute]n de la proyecci\[OAcute]n \
de cada una de las instancias de la base de datos sobre una l\[IAcute]nea de \
proyecci\[OAcute]n determinada mediante la discriminante lineal de Fisher. N\
\[OAcute]tese que el vector ",
 StyleBox["w",
  FontWeight->"Bold"],
 " contiene la direcci\[OAcute]n de la l\[IAcute]nea de proyecci\[OAcute]n."
}], "Text",
 CellChangeTimes->{{3.804283039377634*^9, 
  3.8042831218278265`*^9}},ExpressionUUID->"41ae3b63-df4a-447e-810c-\
44bed32cc76f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"onlySetosa", ",", "onlyVersicolor"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Setosa\>\"", ",", "\"\<Virg\[IAcute]nica\>\""}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Sepal-length\>\"", ",", "15"}], "]"}], ",", " ", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Sepal-width\>\"", ",", "15"}], "]"}]}], "}"}]}], ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"FontSize", "\[Rule]", "13"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[0.8, 0.16, 0.], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->RGBColor[0.5333333333333334, 0.10666666666666667`, 0.],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"RGBColor", "[", 
              RowBox[{"0.8`", ",", "0.16`", ",", "0.`"}], "]"}], NumberMarks -> 
            False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = 
              RGBColor[0.8, 0.16, 0.]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[0.8, 0.16, 0.],
         Editable->False,
         Selectable->False], ",", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[0., 0.24, 0.8200000000000001], 
              RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            DefaultBaseStyle->"ColorSwatchGraphics",
            Frame->True,
            FrameStyle->RGBColor[0., 0.16, 0.5466666666666667],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           StyleBox[
            RowBox[{"RGBColor", "[", 
              RowBox[{"0.`", ",", "0.24`", ",", "0.8200000000000001`"}], 
              "]"}], NumberMarks -> False]],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = 
              RGBColor[0., 0.24, 0.8200000000000001]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[0., 0.24, 0.8200000000000001],
         Editable->False,
         Selectable->False]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "\[IndentingNewLine]", "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"5", "w"}]}], "}"}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<W\>\"", ",", 
        RowBox[{
         RowBox[{"5", "w"}], "+", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0.3"}], "}"}]}]}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"ProyectionLines", "[", 
     RowBox[{"w", ",", "onlySetosa", ",", "LightRed"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"ProyectionLines", "[", 
     RowBox[{"w", ",", "onlyVersicolor", ",", "LightBlue"}], "]"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1.2274429970762153`"}], "x"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "8"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Proyection line\>\"", "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.804278835129853*^9, 3.804278856199935*^9}, {
  3.8042789212189713`*^9, 3.8042789738192186`*^9}, {3.80427908286913*^9, 
  3.804279112389699*^9}, {3.804279183519069*^9, 3.804279212028993*^9}, {
  3.8042794330394506`*^9, 3.80427946947609*^9}, {3.8042795432468553`*^9, 
  3.8042795493147564`*^9}, {3.804279671339322*^9, 3.804279672128371*^9}, {
  3.804279843135024*^9, 3.80427986793566*^9}, {3.8042799379578485`*^9, 
  3.804279966478612*^9}, {3.8042800834586887`*^9, 3.804280084018734*^9}, {
  3.804280141198749*^9, 3.8042801438187084`*^9}, {3.8042801842085047`*^9, 
  3.804280188433647*^9}, {3.804281366629101*^9, 3.804281379537239*^9}, {
  3.8042814369980564`*^9, 3.804281457767843*^9}, {3.8042814914529715`*^9, 
  3.8042815654907303`*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"4834eb67-c556-49f5-9b88-46228873e45c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.009166666666666668], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6], 
          AbsoluteDashing[{}], FontSize -> 13, 
          RGBColor[0.8, 0.16, 0.]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{
                DiskBox[{0, 0}, 
                 Offset[{2.75, 2.75}]]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.009166666666666668], 
                  CapForm["Butt"], 
                  AbsoluteThickness[1.6], 
                  AbsoluteDashing[{}], FontSize -> 13, 
                  RGBColor[0.8, 0.16, 0.]]}, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxtUkESgjAMrHgQBBUK4tkv6Af6Bp/gjF59j75J/ySQ3XQayEyns8lmkyY9
31+3x9o5dxnOajjZcJ6TdcFNVoXPe7QWOA+/72ge/iII38Ofg9cBM/8YrpMd
lC+4VD6x8BvgjdanPvXk3oHXaj4x+xXcGHwCrqHba93lfuM8yBf/XuPEaX6p
cfabzqsy+dvZezgf9m/nJTq2PxuP+6K+nafVk35q6Pbw17N9sB/qk2//T1ov
7oPvX35vhduDl5k9FTO+3Yf9DzbOfaTzif+L+tzPH1BG+70=
          "]]}, {
         Directive[
          PointSize[0.009166666666666668], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6], 
          AbsoluteDashing[{6, 2}], FontSize -> 13, 
          RGBColor[0., 0.24, 0.8200000000000001]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
              GraphicsBox[{{
                 GrayLevel[1], 
                 PolygonBox[{
                   Offset[{0., 2.975}], 
                   Offset[{-2.5764255762587047`, -1.4875}], 
                   Offset[{2.5764255762587047`, -1.4875}]}]}, 
                AbsoluteThickness[1], 
                Dashing[{}], 
                JoinedCurveBox[
                 Line[{
                   Offset[{0., 2.975}], 
                   Offset[{-2.5764255762587047`, -1.4875}], 
                   Offset[{2.5764255762587047`, -1.4875}], 
                   Offset[{0., 2.975}]}], CurveClosed -> True]}], 
              GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                  PointSize[0.009166666666666668], 
                  CapForm["Butt"], 
                  AbsoluteThickness[1.6], 
                  AbsoluteDashing[{6, 2}], FontSize -> 13, 
                  RGBColor[0., 0.24, 0.8200000000000001]]}, StripOnInput -> 
              False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJx1UtsNwjAMTF88Pwlpm/LDCrBAZmAEJPhlHpgJdqJt7oziCEuRdY5zts85
Xh+XW2WMOY2nGE9paIfwek62hu8VHsLnPdkqxHwX7rOVwB54gTwn+DxbD7wB
3w7xCnEPvMR7i7wG/BbeIN4Cs58O8QJ8nfBF7BS/l3l4T76Y10r9mKf5mV9L
P9SL9fX8zNf31Dvt16t+BqWvz+ZP53PwteyLemus5031bOD3f+ptMz3TfZeZ
vqxPPYjZL/XR+0jnsRl/uq9fPeJUH/0/rPSj/+8XLFT5EQ==
          "]]}}, {{
         Directive[
          PointSize[0.009166666666666668], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6], 
          AbsoluteDashing[{}], FontSize -> 13, 
          RGBColor[0.8, 0.16, 0.]]}, {
         Directive[
          PointSize[0.009166666666666668], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6], 
          AbsoluteDashing[{6, 2}], FontSize -> 13, 
          RGBColor[0., 0.24, 0.8200000000000001]]}, {}, {}, {}}, {{
         Directive[
          PointSize[0.009166666666666668], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6], 
          AbsoluteDashing[{}], FontSize -> 13, 
          RGBColor[0.8, 0.16, 0.]]}, {
         Directive[
          PointSize[0.009166666666666668], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6], 
          AbsoluteDashing[{6, 2}], FontSize -> 13, 
          RGBColor[0., 0.24, 0.8200000000000001]]}, {}, {}, {}}}, {{}, {}}}, {
      ArrowBox[{{0, 0}, {-0.5821478483166445, 0.714553299679252}}], 
      TagBox[
       InsetBox["W", {-0.5821478483166445, 1.014553299679252}], 
       "InsetString"]}, {{
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.320730981715188, -0.39367899745168716`}, {5.1, 3.5}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.4857827675472466, -0.5962706561261708}, {4.9, 3.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.3080576815627782, -0.3781232439297668}, {4.7, 3.2}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.31713138766098004`, -0.3892607009375324}, {4.6, 3.1}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.231868438722954, -0.28460529135348545`}, {5., 3.6}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.2445417388753645, -0.3001610448754066}, {5.4, 3.9}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.1702270140253258, -0.20894395627858084`}, {4.6, 3.4}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.3298046878133903, -0.4048164544594533}, {5., 3.4}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.3352787998573842, -0.4115356149530642}, {4.4, 2.9}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.43681464300202844`, -0.5361650745731869}, {4.9, 3.1}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.3424779879658006, -0.42037220798137426`}, {5.4, 3.7}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.25001585091935796`, -0.306880205369017}, {4.8, 3.4}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.4458883491002303, -0.5473025315809524}, {4.8, 3.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.24641625686514973`, -0.3024619088548619}, {4.3, 3.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.3551512881182107, -0.43592796150329494`}, {5.8, 4.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.1193843714903218, -0.14653751074614085`}, {5.7, 4.4}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.2445417388753645, -0.3001610448754066}, {5.4, 3.9}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.320730981715188, -0.39367899745168716`}, {5.1, 3.5}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.4131931187616307, -0.5071710000640445}, {5.7, 3.8}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.1738266080795338, -0.2133622527927356}, {5.1, 3.8}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.48938236160145504`, -0.6006889526403261}, {5.4, 3.4}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.22279473262475172`, -0.2734678343457193}, {5.1, 3.7}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.07229076493488952, -0.08873279317261297}, {4.6, 3.6}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.4186672308056243, -0.513890160557655}, {5.1, 3.3}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.25001585091935796`, -0.306880205369017}, {4.8, 3.4}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.5256771859942627, -0.6452387806713888}, {5., 3.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.3298046878133903, -0.4048164544594533}, {5., 3.4}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.3606254001622043, -0.4426471219969055}, {5.2, 3.5}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.40959352470742244`, -0.5027527035498894}, {5.2, 3.4}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.3080576815627782, -0.3781232439297668}, {4.7, 3.2}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.3969202245550122, -0.48719695002796853`}, {4.8, 3.1}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.48938236160145504`, -0.6006889526403261}, {5.4, 3.4}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.06681665289089588, -0.0820136326790024}, {5.2, 4.1}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.13753178368672594`, -0.16881242476167263`}, {5.5, 4.2}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.43681464300202844`, -0.5361650745731869}, {4.9, 3.1}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.42774093690382636`, -0.5250276175654209}, {5., 3.2}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.48030865550325275`, -0.5895514956325599}, {5.5, 3.5}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.43681464300202844`, -0.5361650745731869}, {4.9, 3.1}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.28631067531216603`, -0.3514300334000802}, {4.4, 3.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.36969910626040614`, -0.4537845790046711}, {5.1, 3.4}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.2808365632681722, -0.3447108729064694}, {5., 3.5}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.6689819655757089, -0.8211372288161856}, {4.5, 2.3}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.18837442622172973`, -0.23121887029411234`}, {4.4, 3.2}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.2808365632681722, -0.3447108729064694}, {5., 3.5}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.1738266080795338, -0.2133622527927356}, {5.1, 3.8}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.4458883491002303, -0.5473025315809524}, {4.8, 3.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.1738266080795338, -0.2133622527927356}, {5.1, 3.8}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.2681632631157619, -0.32915511938454844`}, {4.6, 3.2}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.3025835695187843, -0.37140408343615594`}, {5.3, 3.7}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[1, 0.85, 0.85], 
       LineBox[{{0.37877281235860844`, -0.46492203601243726`}, {5., 
        3.3}}]}}, {{
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.2256293058441488`, -1.5043901084697833`}, {7., 3.2}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.9862627951620522, -1.2105813611984748`}, {6.4, 3.2}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.234703011942351, -1.5155275654775493`}, {6.9, 3.1}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.06792615004587, -1.3108184742683668`}, {5.5, 2.3}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.2220297117899406`, -1.4999718119556282`}, {6.5, 2.8}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.9028743642138116, -1.1082268155938833`}, {5.7, 2.8}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.897400252169818, -1.1015076551002727`}, {6.3, 3.3}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.7795915148185553, -0.9569041454440742}, {4.9, 2.4}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.2129560056917383`, -1.4888343549478622`}, {6.6, 2.9}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.752370396523949, -0.9234917744207765}, {5.2, 2.7}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.0153584314464437`, -1.2462945962012277`}, {5., 2.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.8847269520174079, -1.085951901578352}, {5.9, 3.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.3163663668261685`, -1.6157646785474409`}, {6., 2.2}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.0134839134566578`, -1.2439937322217716`}, {6.1, 2.9}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.8140118212215772, -0.9991531094956811}, {5.6, 2.9}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.1549141750483183`, -1.4175913163871126`}, {6.7, 3.1}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.7650436966763591, -0.9390475279426972}, {5.6, 3.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.9917369072060459, -1.2173005216920854`}, {5.8, 2.7}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.3961552037202007`, -1.7137009276378772`}, {6.2, 2.2}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.0098843194024496`, -1.2395754357076165`}, {5.6, 2.5}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.7867907029269716, -0.9657407384723842}, {5.9, 3.2}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.062452038001876, -1.3040993137747556`}, {6.1, 2.8}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.2891452485315626`, -1.5823523075241437`}, {6.3, 2.5}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.062452038001876, -1.3040993137747556`}, {6.1, 2.8}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.1331671687977067`, -1.3908981058574268`}, {6.4, 2.9}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.1639878811465203`, -1.4287287733948784`}, {6.6, 3.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.341712967130989, -1.6468761855912828`}, {6.8, 2.8}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.2038822995935365`, -1.4776968979400966`}, {6.7, 3.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.973589495009642, -1.195025607676554}, {6., 2.9}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.0008106133042478`, -1.2284379786998512`}, {5.7, 2.6}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.0189580255006518`, -1.2507128927153828`}, {5.5, 2.4}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.0189580255006518`, -1.2507128927153828`}, {5.5, 2.4}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.9917369072060459, -1.2173005216920854`}, {5.8, 2.7}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.071525744100078, -1.3152367707825214`}, {6., 2.7}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.6852548597823274, -0.8411112788522616}, {5.4, 3.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.7287488722835515, -0.8944976999116344}, {6., 3.4}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.1549141750483183`, -1.4175913163871126`}, {6.7, 3.1}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.387081497621999, -1.7025634706301116`}, {6.3, 2.3}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.7650436966763591, -0.9390475279426972}, {5.6, 3.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.9699899009554337, -1.1906073111623987`}, {5.5, 2.5}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.9210217764102155, -1.1305017296094149`}, {5.5, 2.6}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.9645157889114396, -1.1838881506687877`}, {6.1, 3.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.040705031751264, -1.2774061032450694`}, {5.8, 2.6}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.8684540578107894, -1.0659778515422762`}, {5., 2.3}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.9119480703120133, -1.1193642726016486`}, {5.6, 2.7}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.8049381151233753, -0.9880156524879155}, {5.7, 3.}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.8539062396685935, -1.0481212340408994`}, {5.7, 2.9}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{1.053378331903674, -1.2929618567669898`}, {6.2, 2.9}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.810412227167369, -0.9947348129815261}, {5.1, 2.5}}]}, {
       Dashing[{Small, Small}], 
       RGBColor[0.87, 0.94, 1], 
       LineBox[{{0.9028743642138116, -1.1082268155938833`}, {5.7, 
        2.8}}]}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          LineBox[CompressedData["
1:eJwVx3k4lAkcwPHBLCPFzDiHGe+M15GkO42K91cqRSpHq3aVHjlmJ9shm2jb
TO4QW4oy7lLtyFToqaj3V9m2ixSSI0p4iKJyLMls+8f3+TxfUcAeryB1BoPh
8b3/dQvqfY59cc7xlqaTxd3H7jBdTPd28AKpy2UuEy4lEnphXpa8jBdORVaO
zNEtOUi71zRdy+HFUv70hnVfFIm0b+DY7RO8DMprxaGX3Yos+vXcBJdU3jlq
/VGOoENxkc433Bh/jFdOPSr0w1bFDVrGKrNJ4lVTWgvVuS2Kh/SWrQXKoU8N
VAQ1/2VkRTOto5L5uZp3UPGrGjL1ee9oK8+PvfeTu6j+zSmdeuI+OqLWkcoa
7qMikj5HtbUO0sblnHY1tUFKanOnhK/1hb7e6fL02fLP1ByzlpVlAaP0PWmO
2daBYcp59fAFeek4PWLtpHf51zFqsVg4r/buJK0+rmCbWU1Qotw/B8t0GOig
2nHdu3SSymbKX1meVcOnsYtqH8xSUcvjrWxpoQYS6f3jlz4yQJJumpr6kIn9
Yx3tjfPUgXUkS53ho4nn3lc+1j2uAQtGZcnFDBbqCi4MdnUx4Wji+0MHzmtj
yi8VwfmWmuCqaj383l4HR0HRJTmiBaemxCdPNE3H8AXV5Ub3WbCl0/xWe6Au
dpRWJz8XTQNvG3GUUpuNX6UN2bZROjB9l9Cd+ZqNdiu0poIrpwNDVGNpV8hB
10JRyFVjXXDMnssaiOBihMDf4q2fHpQk/Dj8B6WPswc26zR5sOGamlOGtYYB
6usNsaon2PCNanaSNBkgk85WknIOxAw5Dh3KMcRdiyqbtd254BG0qcQ23AgV
6wLy74xyQRFizR9YY4wj/absntP64NKGGdE6Jljh7aqRscoAhIYcY+UbEzyy
Ni6vvMcAlqBVofICD0Wv3V4VxRnC23/H31RLTXHpktgM3gIjqBuJsQ13NkM/
82fjavVGMB74ImpEg48jj1M798qMISTrZSO7hY9ZzO3hXpYmwHbOc5wqEKB+
e0WherUJuO+z8WQEm+MPh2U+jvt48FQSFCZfSiDj0nZlJ9cUXPoWbohjCDHs
rDKVe+/7M9gS7VAh3rZLZHF2m8GM9ietmY1C5LiFzT6qy4cvw33eemIRttnX
1UdW8eHbh866+kIRXsmlLLu2C4AUOnvJNC1wm9KBI5gSAJcXae8oscDouAJZ
21/mYDl8fIbzCwu83CvI1l1PgA9L67PdYhITc+J2tG8gYCDNQdntQGKg1wer
Uk8C4o2DQ/PEJPKrqq54+BJww/rvHu5yEo+l/fwgJYAA/uqY1vGVJEocznya
FklAt0xV/c8mEi1iDdZqFRNw4OtY5s5QEqfEv89oukgAO8Zms2A3ic0f3r0o
VhBwcZovt2kPiem+ZdvWXCWghXc9xW0/iapZXvvjqgigxOGy+VEktj1Py9Wo
J0DrtyGpKoHEG/FjO+sbCSiYJGbeTCIxY5m/bdErApbGbuwOSybR/fyc8pXt
BISeLPXvOU7irYM1j2R9BNRdDfWpOUXiafvFaZ4DBEgd5ZyETBL3dcp9RIME
qN99UgtnSJy5PrQDhwlYVDdrXbmcRKZaw7n0MQJqfX/S3J1L4puKZdIdEwSE
dCTdt8knsUpaNHfeNwIYITej3xaQmEnojKhUBJz52OuUXUTif8QMPSg=
           "]]}, Annotation[#, "Charting`Private`Tag$60742#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     1, Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
      AxesStyle -> GrayLevel[0], BaseStyle -> (FontSize -> 13), 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         StyleBox["\"Sepal-width\"", 15, StripOnInput -> False], 
         TraditionalForm], None}, {
        FormBox[
         StyleBox["\"Sepal-length\"", 15, StripOnInput -> False], 
         TraditionalForm], None}}, FrameStyle -> GrayLevel[0], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> GrayLevel[0], GridLines -> {Automatic, Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
     LabelStyle -> {FontFamily -> "Helvetica", 
       GrayLevel[0]}, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{-1, 8}, {-2, 5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}, TicksStyle -> GrayLevel[0]}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Setosa\"", "\"Virg\[IAcute]nica\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], FontSize -> 13, 
                    RGBColor[0.8, 0.16, 0.]], {
                    InsetBox[
                    GraphicsBox[{
                    DiskBox[{0, 0}, 
                    Offset[{2.75, 2.75}]]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], FontSize -> 13, 
                    RGBColor[0.8, 0.16, 0.]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], FontSize -> 13, 
                    RGBColor[0., 0.24, 0.8200000000000001]], {
                    InsetBox[
                    GraphicsBox[{{
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{0., 2.975}], 
                    Offset[{-2.5764255762587047`, -1.4875}], 
                    Offset[{2.5764255762587047`, -1.4875}]}]}, 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    JoinedCurveBox[
                    Line[{
                    Offset[{0., 2.975}], 
                    Offset[{-2.5764255762587047`, -1.4875}], 
                    Offset[{2.5764255762587047`, -1.4875}], 
                    Offset[{0., 2.975}]}], CurveClosed -> True]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], FontSize -> 13, 
                    RGBColor[0., 0.24, 0.8200000000000001]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Helvetica", 
             GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8, 0.16, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5333333333333334, 0.10666666666666667`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.8`", ",", "0.16`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8, 0.16, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8, 0.16, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.24, 0.8200000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.16, 0.5466666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.24`", ",", "0.8200000000000001`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.24, 0.8200000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.24, 0.8200000000000001], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    DiskBox[{0, 0}, 
                    Offset[{2.75, 2.75}]]}], ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{0., 2.975}], 
                    Offset[{-2.5764255762587047`, -1.4875}], 
                    Offset[{2.5764255762587047`, -1.4875}]}]}, 
                    AbsoluteThickness[1], 
                    Dashing[{}], 
                    JoinedCurveBox[
                    Line[{
                    Offset[{0., 2.975}], 
                    Offset[{-2.5764255762587047`, -1.4875}], 
                    Offset[{2.5764255762587047`, -1.4875}], 
                    Offset[{0., 2.975}]}], CurveClosed -> True]}], ",", 
                    "Automatic"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Proyection line\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.804278856579076*^9, {3.804278921699283*^9, 3.80427897475424*^9}, {
   3.804279102108837*^9, 3.8042791130587473`*^9}, {3.804279193879052*^9, 
   3.8042792127792587`*^9}, {3.804279444038873*^9, 3.8042794698636003`*^9}, {
   3.8042795452085695`*^9, 3.8042795497587767`*^9}, 3.804279672678824*^9, {
   3.8042798519252253`*^9, 3.8042798689395027`*^9}, 3.8042799670134506`*^9, 
   3.8042800857061634`*^9, {3.804280185028537*^9, 3.8042801890186434`*^9}, 
   3.8042813799486537`*^9, {3.804281428907052*^9, 3.8042814580977674`*^9}, {
   3.804281492571415*^9, 3.8042815660659175`*^9}},
 CellLabel->
  "Out[179]=",ExpressionUUID->"4eac62d2-be5b-4174-aa3c-1c81bc3f5618"]
}, Open  ]],

Cell[TextData[{
 "Se proyectan los datos y ahora se puede ver su distribuci\[OAcute]n en el \
subespacio ",
 StyleBox["y",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.8042831302034187`*^9, 3.804283149027794*^9}, {
  3.804283184677391*^9, 
  3.8042831849076023`*^9}},ExpressionUUID->"ea502263-2fe6-4929-805a-\
5b651905b8a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"proyectedSetosa", " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"w", ".", "#"}], "&"}], ",", "onlySetosa"}], "]"}], ",", 
      "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"proyectedVersicolor", " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"w", ".", "#"}], "&"}], ",", "onlyVersicolor"}], "]"}], ",", 
      "0"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8042816316478868`*^9, 3.804281678717908*^9}, {
  3.804282460216382*^9, 3.8042824688294477`*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"63ea7d37-903f-44e4-990b-2fd5775d8e83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"proyectedDatabase", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"proyectedSetosa", ",", "proyectedVersicolor"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.804281987017585*^9, 3.804282030515669*^9}, {
  3.8042824578556333`*^9, 3.8042824769628043`*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"00927d76-713e-4375-8c4c-92a591bd4c74"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"proyectedSetosa", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"proyectedVersicolor", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Setosa\>\"", ",", "\"\<Versicolor\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<y\>\"", ",", "15"}], "]"}], ",", " ", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<PDF\>\"", ",", "15"}], "]"}]}], "}"}]}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"FontSize", "\[Rule]", "13"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.8, 0.16, 0.], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.5333333333333334, 0.10666666666666667`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0.8`", ",", "0.16`", ",", "0.`"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.8, 0.16, 0.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.8, 0.16, 0.],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 0.24, 0.8200000000000001], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0.16, 0.5466666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0.`", ",", "0.24`", ",", "0.8200000000000001`"}], "]"}], 
          NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0., 0.24, 0.8200000000000001]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0., 0.24, 0.8200000000000001],
       Editable->False,
       Selectable->False]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.804281692498332*^9, 3.8042817425481005`*^9}, {
  3.8042824802879057`*^9, 3.8042824873242836`*^9}, {3.8042831699334726`*^9, 
  3.8042831770875893`*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"7e70f6ce-615e-4f00-b0de-257abcfc8943"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{}], 
         RGBColor[0.8, 0.16, 0.]], 
        LineBox[CompressedData["
1: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
9fnmz+7IZ/O/0fLGaPT////53/j/AIbVGEE=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2}], 
         RGBColor[0., 0.24, 0.8200000000000001]], 
        LineBox[CompressedData["
1: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
1f/zv0PoonPfp5qX6P/L/wfO+wY9
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{}], 
         RGBColor[0.8, 0.16, 0.]]}, {
        Directive[
         PointSize[0.006944444444444445], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2}], 
         RGBColor[0., 0.24, 0.8200000000000001]]}}, {{
        Directive[
         PointSize[0.006944444444444445], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{}], 
         RGBColor[0.8, 0.16, 0.]]}, {
        Directive[
         PointSize[0.006944444444444445], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2}], 
         RGBColor[0., 0.24, 0.8200000000000001]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{}], 
         RGBColor[0.8, 0.16, 0.]]}, {
        Directive[
         PointSize[0.006944444444444445], FontSize -> 13, 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         AbsoluteDashing[{6, 2}], 
         RGBColor[0., 0.24, 0.8200000000000001]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> 
     GrayLevel[0], BaseStyle -> (FontSize -> 13), DisplayFunction :> Identity,
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"PDF\"", 15, StripOnInput -> False], TraditionalForm], 
        None}, {
        FormBox[
         StyleBox["\"y\"", 15, StripOnInput -> False], TraditionalForm], 
        None}}, FrameStyle -> GrayLevel[0], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> GrayLevel[0], GridLines -> {Automatic, Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
     LabelStyle -> {FontFamily -> "Helvetica", 
       GrayLevel[0]}, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-0.46753655647094366`, 0.02613724549200172}, {0., 
      10.146533299566935`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     GrayLevel[0]}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Setosa\"", "\"Versicolor\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0.8, 0.16, 0.]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0.8, 0.16, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0., 0.24, 0.8200000000000001]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 13, 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0., 0.24, 0.8200000000000001]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", 
          GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8, 0.16, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5333333333333334, 0.10666666666666667`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.8`", ",", "0.16`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8, 0.16, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8, 0.16, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.24, 0.8200000000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.16, 0.5466666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.24`", ",", "0.8200000000000001`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.24, 0.8200000000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.24, 0.8200000000000001], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.804281699287753*^9, {3.8042817308726387`*^9, 3.8042817429676185`*^9}, 
   3.804282487707246*^9, 3.8042831775396223`*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"5d4a3f39-a5e6-4bc8-9763-b8f619f413f9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regresi\[OAcute]n log\[IAcute]stica", "Subchapter",
 CellChangeTimes->{{3.7910441307642603`*^9, 3.7910441355342293`*^9}, {
  3.802791442617474*^9, 3.802791446191646*^9}, {3.8027921416957283`*^9, 
  3.802792154126571*^9}, {3.8028009223280935`*^9, 
  3.8028009304101396`*^9}},ExpressionUUID->"abc58d52-ba0a-4ce4-8ec6-\
1092a7983029"],

Cell[TextData[{
 "Se utiliz\[OAcute] el algoritmo iterativo que se describe en la ecuaci\
\[OAcute]n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvWdUFVfc9v2s9/3yfHzXurH3hr232HvB3ohd0djF3lDEigUbNhTFWEgU
e48aCxpjxd6wN9RoFDRWxMZ7hX/c92RmzjDCgYPm+q3RxdmzZ/fZ+9p1cnUd
0KLH//N//s//GfJ/8V+LLiNqDB7cZWTL/w8/PPsP6d2zf/duHv2Hdu/ZffB3
Xf9fGMbh33D88fff8YQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBCSBrh///6UKVNSx6/Xr19PGD/hzZs3qePd
186+vfs2bdzkdGc3bNiwf/9+pzvrKuLi4rZu2Wp9PXv2zNXB/Mp49OiRdZJu
377d1WEkhBCSdnn58uUPP/zw6tWrVPPx5s2b/fr1SzXvvl6OHzs+ccJEOzZn
TJ9RoniJDu07mN49fPhw3Tp1c+fK/fjxY2U4xm/MiRMnnBNQV3P79u2MGTJO
mjRpx44d4eHhc+bMcfsfN58RPuEJBAUFZc+W/cCBA64OZgoC/bxz507nurl6
9eoC+QsELwzes2cPkrFP7z5I1aVLl+JvdHxGjRqFn7Gxsc71lBBCyDdD165d
U7/xnT179sIFC1PZ06+L6OjomjVqvn792qZ9X1/fVi1bObp7/vx56IE///xT
maBPUatmrW9jZC/ieMSE8RPUz5MnTyKyEEjKJGxV2Lp161wRtJTl3bt3eI+G
DR1WpUqV1q1bO9fxefPm7dq1S/1cELQAqQoxr0wGDhwYdTfKuZ4SQgj5Nvj9
99+bN2ue+v5C3hQtUjQmOib1vf5aGDVq1OJFi+3b95/ob6Ewr127plOYYO7c
uaNHj056ENMM27ZtCw8PVz+NChO6KCgoyBVBS1k+fvwYeSny7du3vXr2crrC
HOM3Rju1YVSYSOFvZhicEEKIc+nateuOHTtc4jUUEdosl3id9omNjS1UsBCU
g/1HkqAwX79+XbhQ4bi4uKQHNHkcPXrUKUOL58+f1y4AMCpMxPHgwYPJ98gp
LApedP36dee6mRIKc9/efdqfRoV569atmzdvOnocCb5502bnBimFCJwV+ODB
A1eHghBCvh3Q7GbOlFnbNIMhg4d0aN9hzZo1586dmzt37oTxEyZNmvT+/Xtl
AeJn/vz5Y/zGzJg+Y/To0X/88Ud8wopB/O3n5zdi+Ag4i8YIFmCyd89e3A0N
DcVPX19frV+7du2qXat2asX1KwOyv17dekbzPXv2ICVnz549buy4DRs2aG8Z
FSb026hRo2A5MDDw119/NSpMUKtmrd27dzs9/HY4c+ZMv379Pn78aLx1+fLl
U6dOXbp4KfLfQElGREQ8ffrU2mWjwtRy7969w46JOB4Bf9+9e2czFlevXrUI
qukoPd6g7t26O3d+2Y7CRHiQ5pEGzp49i/fXNCO0GBWmtV+DBg769OmTzfC7
lufPn6OvrasJCSGEJJmLFy+WKF5CZ/jq1avq1ao3adxEtjCjjYAIgciUu1CP
LVu0VBvPw/eFV65UWQbB0DqjAZKRIjwF8aA2nrx8+bJSxUpoc7UeQe1kzZI1
0Xbtv8n0adN9fHx0hoGzAgcPGqxabX9//+HDhqu7OoUJVYmckmWc0EtwzVRh
Dh0yFDZTJA6WQJhVqVLF0SpTNPf58ubDlSN7DgQbVzq3dGKCSzshboq1wgxe
GCzuZMyQURxHP0tM8ubJmyVzFphky5rNs5XnsmXLEi2ffXr3kWdz5sgpruFS
QdWuY9Ty4MEDRN+JksaOwixcqLCECvHVRRxXont27CtM6G3UIV80Ap864JWR
iGfKmEl3CwWyZo2akJouCRghhHxjbNm8pU7tOkZzNFUQJ+rnoIGD2rVtJ3+H
hYWhJdW2HWVKl/n111/lb1TRY/zGyN/efb1z58otpxJFR0drN2IIUEqo6u/d
u+e8CH07QDDMmjlLa3Lr1i2oLPyvTCDPIISOHDkiP7UKM/JSJNL28uXLynJE
RISpwgwICPD29k6ROFji4eGBspSotQ0bNijNZt9xa4WpqFe3njiuO9ngwoUL
KPNyq369+to0t+CXX36RR5ApduzPnj0b74jR/OHDh0cTwzjE+kWz5Cp2Xbp0
sflIvG2FKX3SlDhiK/lYKMz4hHWnqvoihBCSHNauXdugQQOjOZqqgQMHqp9o
j77//nv5G01SoYKFFi9arK7OnTqjbZW7y5Yty++ePy4uDkpmypQpaMHDVv2t
IoKCgq5evWr0KGOGjDdu3HB+xL5+vLy85s2bpzUJDAyEwtRNOxYrWkwNY2oV
5qRJkzJnyqwdf3OkMANnBXbv1t35EbBk27Zt6IzYmUJ1icIU2rZpK3dr16pt
Z6T9SxUmXpOiRYqePXtWZ75r165+iWHMx7SjMNevX+9R38O+s6mJtcJ8+fIl
ipnNDgUhhBALduzYgYbeaG6hMHv26Fm2TFlHDr548SJ7tuxbNm+ZM2cOWqKf
Qn/y8Pi7rdG6pkCrjaqeC+xNgYqYPm261gRSEMmlU2VFChcZNnSY/K1TmFDv
WpuOFCY6Av3793dy6BOjVs1aS5YssbYTHR2N8omSo2Tbzz/9fODAgZiYxM8f
cIrCDAkJUbPekMQW7iBIO3fuhNRXU88o+fv370cUrAPg4+PTtWvXRKNjB5sK
Ex26TRs3NWzYUIJavVr1devWHTt6zM5uL5sKs3KlysgprcnBgweXf0a3MODh
w4fqlnbI3elE3Y2CF0giiXiG9BnEU920eI/uPdQLRQghJMlcv349T+48RnML
hbl3z9706dJr9y+g6j58+LD6icYaOmfwoMHxCUs6c2TPERoaajofisYub568
XIdpyty5c3VTqDdv3kTKa4e8/vjjj0wZM5nOkl+8eBHN6J07d5Tl48eOmypM
dBmCFwanSBwccObMGYTk/v37pnchoVFgoP0Q2bp16ipJkDVLVl9f3zKly0C/
eXX22r17t0XJOXHiBB5JdBbeWmFCoCqFuSh4kakLYavC0IdCUKGZ27Vtp8bH
Ro8eXb5ceYj8jh06Qid/+PDB9HFkCuxAZVmH0w7WChNvor+/f7my5RDUDu07
VKtaTYJaqWKlAQMG5M6VG2/iiOEjdCuldQQFBeER6yE+iFV48eTJE60hhJyj
lJw/f766FRkZaS+uSWH79u3KI+2l29SPzEKVhZ5yyoWEEELSPlBo165du5MA
5Meli5dgePfOXZjjfzQEV65ciYr6Z78q/kBdCpu3b99Whmj4oDAfPXqkdRaN
EVpeNEOy2BL/o5VEW69Oxhs1alT7du1lPy9EzsiRI7V7e2WsbOPGjfIT7VfB
AgVNNxGgzoc7zk2TtMC7d++QF8gR5AISHNkhu4YvX76MTJGsQWP6119/iX2Y
i2X8r84/P3jwoHGJbMjikObNmou8RyP4ww8/qNWtcXFxkEm1a9VW2RQQENCm
dZuXL1/ib7T4yFDkC+SoTphBbJw7dy6l0sKMyZMn16hew/QWtFbjRo2l6V+7
dm28YZYcJVbGcnF17drVuBxx1cpVKJBIJWhRFFqU1Tlz5jgKibXChMhXOsSY
REjSFs1byN2fQn+KN8ySI51l0A8XEt90kBByGi+grCRJMnAZLyDSrXq16giV
cX8NdGzJEiURjAL5C4iG1M2SP3/+vFPHThZaesqUKUhJ5BpSFZ1N/L1l8xbT
wIwdM9Y4RY7gQXWL+7rjDlQaVqlcJckpYAebChOplyF9BrWwnBBC/pugJleb
YdOnS585U2YYoqVQlTn+UE2nd19vValqJ+aGDxu+bNkyrbP+/v6TE0ALG5/Q
zk6aNAlNDMyVnf379w8bOmzihInTp0037odF+6Xa0wsXLsyfP980/AMHDvzx
xx+TmQhpEMgk5AVyRFIbeYR2HNIIhmi81ESq+qZz3jx53T5vlxZZFZ+gT0qW
LCknQWk5c+aMr68vhCVa+UOHDinzkJAQZNPUqVP9J/5vNkGmjvEbA4kVvDD4
xIkT6Cl4e3trxdKDBw+KFC6SysPI6FY4+mYoJLEkhep6mK7DRMkXQ9PVF/ax
UJhQGlWqVJG7QwYPMT7r5eUld9WeONN1mNC6YtirZy/TMEAGJ/PQe7yYyPQp
CeAPPz8/7VIKdGQKFyosYVBf0TKuw4TIVBvM169fn+TAQECazjJLB0dKvjpA
4M2bN8rTlD7QQBaHy5cupW78MwHj8HLpUqXRi0nRwBBCSNonKipKlEz1atWV
IRqL7Nmyw1D3EZM1a9bkzpVbNzt56eIl080+KQ0al/LlystOc6cD0bt3z949
ttHO8juLJUuWSFsWEBCgDLdt3SZKUndONeQKxJVupHfWzFmzZ892esB0XqT+
l25KliipW2IqRByPUJ0gJXJMFeb4ceOVXEnOVy+VwoTQkrmA27dv441Ax6dG
9Rowd8/nDlVm3JEkn+CUS605NFWYyH3V0TA9m6hP7z7acxucDrJYBVXNVpju
9KlTu44YQvQm2buCBQpKz1THpo2bVDDUJx7w6inD1Pn6pPVOH6F169apv/eN
EELSIGr1l/bzbTVr1IRJubLltI2jV2evkSNHGl2YOnVq6n+yedzYcckZKrFm
586dEGytbWM635pMZNMTcqFI4SLqvPoHDx5IZvn5+Smbr1+/hvL/7bffdC7E
xcW1atnKOIzpLB4+fIjOhdMjbg2SBdFHZ8d4C8JD6Q31LRhThTlzxkxlMznb
Q5TCLJC/QIPP5HfPL4ZVq1Z1JHvCw8NVANRqT1OFKWsX5Tpz5ozRKcQFvic5
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
fwFPoQ+l2xKVaHgSDSSCgTRHHI1bGm26HJ9wXhmCpz2aVSwgsigtppslCSGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEKIHcLDw53u5o0bN+7du+d0ZwkhhBBCSNpn0qRJBw8eTNTahQsXFgUvmjp1
qundV69eLVu2LHBW4Pnz58Xk3bt3gwcNjrwU6cywpmE+fvz46dMnV4eCEEII
IcT1rFmzZv78+XZsRkVF+fn5uf2Pm+nduLi47du3Z8uabfXq1VrDli1aQnw6
J6xplWfPnu3Zs6dO7Tr439VhIYQQQghxMffv3y9XtlxsbKxN+4cOHXKkMIXi
xYprFSZYunTpoIGDkh7ENE94eLiPj8+WzVuQMrt27XJ1cAghhBBCXIy/v3/I
4hD79pOgMOPi4sqWKRsTE5PEIH4lvHr1yqbCfP/+/YkTJ1IhSMkn4ngE5/0J
IYQQ8kV8/PixUMFCN27cMN66cuVKaGjounXr/vrrL625qcJ8+PDhzp07RY0Y
FSbo379/8MJg5wY+rWFTYSLNBw0cdObMmdQJVTI5cuSIr6+vq0NBCCGEkKRT
r269hg0btmzRUnfBsHat2u/fv3e6j7du3cqbJ69ukCo2NrZ7t+4hi0Oio6Mh
Pvv26bts2TJ1V6cw375926d3H4iQ8+fPHz58eOTIkXDQqDCXLl3q1dnL6eE3
ZdPGTdWrVXd01aldp2mTpqNHj/71119fvnzpRH9tKkzIS3jtRH+dgihJAXmq
vbVx40Ykl6sCRogFqLss3qZTp0452pboCLzFa9assfDu6NGjU6ZMmTB+wtYt
W3VviuLJkyeoM8eNHTf3/2/vXLyiqNs4/k8sclMB4yKQFygvyKUTUEZeIQlN
UES8oARqCSSCgqLHVBDBGxoJanTU0FjCkMRMDUVBU7wEUUhWuqICsggclPeJ
3+u8887szo647IJ+P2cOZ/f5zc48O8w+8/3dnt/WrbW1tfyimpqaV2fmIwCg
73Dw4MGvu5k0cRJpFdreG//e18948uSJ3s9YWFjo956fwLhwwcJViau4tx0d
HSOGj+CEk0BhhoWFRS6O5N6SOrW0sBQrTBKfbmPd9Ou8NiiGsyvm6eHJLiOp
Su4y7t27d8mSJUNshpCd/h7Yf0Bf55WjMHds3xE8M1hfZ9QjO3fsZNeKtqam
JkHptA+mfXXgK6M4BoA2mpubZ8+aff7ceW2lLiNdhjoMlXk0tVpNgtDe3v4N
1zc07tDa2hoSHOL9tveFCxeo6r1g/gKKaXV1dYLdjh8/bmNtk5mZefv2bVKh
dMD09HSutLOzk5Tn4cOHZXoFAAD65eOPP2bP+nnh83r1RLm5uQH+AXzLP//8
YzrAlJQn30gacsrkKew1X2H+/vvvJgoTZYGSv7PVYCuxwqysrLSztdOz97og
XcQu45w5cwRFDx48oKcPK12xYoX4s9ODpvt4+0hsMctjBB/RqTDppPS8o4v2
4l9N70grTBLtVMt46RMCgH5EY2Mjxa6LFy9q2yFiYQTdzDIVplKp3Pj5RqqK
0ke0KcypU6ZScKu/Vc/eUtX7La+3HOwd+CPMT548SfGTH1K++eYbOmZaWhr/
UHGxcYcOHZLjGAAA6BeDKcwD+w/4T/XnW86fO0/npTjJN0ZHRw8fNpy95itM
2o1eC9oQNCpMehA4DnXUr/M6kVCYxPZt21npAJMBv/zyi6BUrVY3SSKefa9T
YSYnJS+KWPTi36s3kFaYxIcffpiWmia2A2B46Nfn/bZ31q4sbTvk5+fPnzdf
vsJkI4Xox6tNYf70009U9MmyT/hGph75HfF+7/mRpaGhgb8bHfC1Ia/xx+S0
tra6urr+UPKDHN8AAP2Izs5OSwtLiS0wMNDwXv3111979uwJCgpycnQyNzNn
z3oLcwsSZlSzXrdunbg75sU5deqUh7sH30KxkU569MhRvjE0NJQcY6/5CpN8
pgq7QFNpVJjFxcVU39ev8zqRVphKpZLTVFu2bHnx00krzPb2dns7e0Hj8O6s
3dxdt3fvXn5R+flyrog/DlbvlJf/eyLulqONnVQw2z3vq7wRw0fQb6f3PAFA
JikpKW5j3bQNTf/zzz99vH3u3bsnX2EySPJpU5gsmOTk5PCNNTU1ZLSztWPN
+z///DO9pZ+J4LMUf8iekZHBNx7JP+Jg7yDQogCA/g7FJe5hqnHjeoQNQ0dH
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
AAAAAAAAXhH+AyY1AnM=
     "], {{0, 124.5}, {443., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->144],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{599.4285714285717, Automatic},
   ImageSizeRaw->{443., 124.5},
   PlotRange->{{0, 443.}, {0, 124.5}}]], "Input",ExpressionUUID->
  "864912a9-08e7-49ec-bc06-74194f04da08"],
 "\ndel libro de Bishop."
}], "Text",
 CellChangeTimes->{{3.8028031198928666`*^9, 
  3.8028031653463364`*^9}},ExpressionUUID->"db1f2ff9-ca0d-405d-b40c-\
871c32aadf02"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PhiDesignMatrix", "[", "data_", "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "#"}], "}"}], "&"}], ",", "data"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ClassificationProbability", "[", 
     RowBox[{"x_", ",", "w_"}], "]"}], ":=", 
    RowBox[{"LogisticSigmoid", "[", 
     RowBox[{"w", ".", 
      RowBox[{"{", 
       RowBox[{"1", ",", "x"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NewW", "[", 
    RowBox[{"x_", ",", "t_", ",", "wOld_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"y", ",", "RMatrix", ",", "zVector"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"y", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ClassificationProbability", "[", 
           RowBox[{"#", ",", "wOld"}], "]"}], "&"}], ",", "x"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"RMatrix", "=", 
       RowBox[{"DiagonalMatrix", "[", 
        RowBox[{"y", 
         RowBox[{"(", 
          RowBox[{"1", "-", "y"}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"zVector", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"PhiDesignMatrix", "[", "x", "]"}], ".", "wOld"}], "-", 
        RowBox[{
         RowBox[{"Inverse", "[", "RMatrix", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{"y", "-", "t"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Inverse", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"PhiDesignMatrix", "[", "x", "]"}], "]"}], ".", "RMatrix", 
         ".", 
         RowBox[{"PhiDesignMatrix", "[", "x", "]"}]}], "]"}], ".", 
       RowBox[{"Transpose", "[", 
        RowBox[{"PhiDesignMatrix", "[", "x", "]"}], "]"}], ".", "RMatrix", 
       ".", "zVector"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.802798224885173*^9, 3.8027982593341427`*^9}, {
  3.8027999551327624`*^9, 3.8027999744346924`*^9}, {3.802801646311592*^9, 
  3.8028016471663094`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"320d0aa3-00ef-4eec-98ab-d8c829185192"],

Cell["Se comienza con un peso inicial w0 = {0,0}.", "Text",
 CellChangeTimes->{{3.8028031902078733`*^9, 
  3.80280320061106*^9}},ExpressionUUID->"fe26f787-d315-4d26-8cd2-\
14fa1721a257"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", " ", "=", " ", 
   RowBox[{"proyectedDatabase", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", " ", "=", " ", 
   RowBox[{"proyectedDatabase", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.802792294071384*^9, 3.8027923317692327`*^9}, {
   3.802792430637966*^9, 3.8027924322150335`*^9}, {3.802798105389284*^9, 
   3.8027981171901803`*^9}, {3.802798267149305*^9, 3.8027982680605497`*^9}, {
   3.802798477101254*^9, 3.802798477291787*^9}, {3.802801008803035*^9, 
   3.8028010154666395`*^9}, {3.8028012339684772`*^9, 
   3.8028012424012833`*^9}, {3.802801895646984*^9, 3.8028018988413353`*^9}, {
   3.8042820673929853`*^9, 3.8042820685533657`*^9}, 3.8042832377222724`*^9},
 CellLabel->
  "In[251]:=",ExpressionUUID->"b8435041-9804-4a0e-a500-162a67f0e5ba"],

Cell[TextData[{
 "La funci\[OAcute]n ",
 StyleBox["NewW",
  FontWeight->"Bold"],
 " devuelve el nuevo valor de w."
}], "Text",
 CellChangeTimes->{{3.802803212915157*^9, 
  3.8028032234839525`*^9}},ExpressionUUID->"2d0944ba-80a7-42b9-a02c-\
4e332a3aa763"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NewW", "[", 
  RowBox[{"y", ",", "t", ",", "w0"}], "]"}]], "Input",
 CellChangeTimes->{{3.802803209927149*^9, 3.80280321002289*^9}, 
   3.80428324215734*^9},
 CellLabel->
  "In[254]:=",ExpressionUUID->"06ba4c6f-c386-4b58-bfc3-6d8ad8842a6c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.235072379273555`", ",", "16.605392255492017`"}], "}"}]], "Output",
 CellChangeTimes->{3.8028032106382427`*^9, 3.8028036330375557`*^9, 
  3.8042820775578814`*^9, 3.8042824975700626`*^9, 3.804283243617154*^9},
 CellLabel->
  "Out[254]=",ExpressionUUID->"2382433f-8fa9-4cc2-8c59-7de080503093"]
}, Open  ]],

Cell["Se itera 7 veces", "Text",
 CellChangeTimes->{{3.802803231498474*^9, 3.8028032355566187`*^9}, 
   3.8042821405459766`*^9},ExpressionUUID->"7cbc010f-fa53-4b27-8d18-\
94499f8e0847"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ws", " ", "=", " ", 
  RowBox[{"Drop", "[", 
   RowBox[{
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NewW", "[", 
        RowBox[{"y", ",", "t", ",", "#"}], "]"}], "&"}], ",", "w0", ",", 
      "7"}], "]"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.802801915102618*^9, 3.8028019443913856`*^9}, {
   3.8028021825829067`*^9, 3.8028021841048336`*^9}, {3.8028023351948595`*^9, 
   3.802802338256674*^9}, {3.804282114834791*^9, 3.804282130455117*^9}, 
   3.8042832469375563`*^9},
 CellLabel->
  "In[255]:=",ExpressionUUID->"807c00fa-8726-40f7-9736-db8ef0a9b63a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3.235072379273555`", ",", "16.605392255492017`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.484556888426907`", ",", "28.737917342109334`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.976704421113968`", ",", "42.367113251269295`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.914470698646268`", ",", "58.28380475929709`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.422445251730903`", ",", "76.70186034618459`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18.778468298785018`", ",", "98.5668621233822`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25.279370788122`", ",", "130.2717544604925`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.802801934774322*^9, 3.802801944698615*^9}, 
   3.8028021846264353`*^9, 3.802802338662583*^9, {3.802803628618351*^9, 
   3.8028036330864253`*^9}, 3.804282083063436*^9, {3.8042821156884813`*^9, 
   3.8042821311388464`*^9}, 3.8042824994518433`*^9, 3.8042832489209614`*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"b6924441-8b96-48cf-9a1f-8f0550bd6643"]
}, Open  ]],

Cell["\<\
A continuaci\[OAcute]n se muestran las fronteras \[OAcute]ptimas y las gr\
\[AAcute]ficas para las 10 iteraciones.\
\>", "Text",
 CellChangeTimes->{{3.8028032479145823`*^9, 
  3.802803266555756*^9}},ExpressionUUID->"3cad3358-af4b-413b-8fe8-\
3e589f1ff7dc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CalculateFrontier", "[", "w_", "]"}], ":=", 
   RowBox[{"First", "[", 
    RowBox[{"yt", " ", "/.", " ", 
     RowBox[{"Quiet", " ", "@", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ClassificationProbability", "[", 
          RowBox[{"yt", ",", "w"}], "]"}], "\[Equal]", "0.5"}], ",", "yt"}], 
       "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotLogisticClassifier", "[", "w_", "]"}], ":=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"proyectedSetosa", ",", "proyectedVersicolor"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Setosa\>\"", ",", "\"\<Versicolor\>\""}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Sepal length\>\"", ",", "\"\<P(Setosa | Sepal length)\>\""}], 
         "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotMarkers", "\[Rule]", "None"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0., 0.76, 0.33], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0., 0.5066666666666667, 0.22000000000000003`],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
              NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0., 0.76, 0.33]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0., 0.76, 0.33],
           Editable->False,
           Selectable->False], ",", 
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0.9, 0.05, 0.], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0.6000000000000001, 0.03333333333333334, 0.],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
              NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0.9, 0.05, 0.]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0.9, 0.05, 0.],
           Editable->False,
           Selectable->False]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"GridLines", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"CalculateFrontier", "[", "w", "]"}], "}"}], ",", 
          RowBox[{"{", "0.5", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"GridLinesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Gray", ",", 
          RowBox[{"Opacity", "[", "0.3", "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<w = \>\"", "<>", 
         RowBox[{"ToString", "[", "w", "]"}]}]}]}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ClassificationProbability", "[", 
          RowBox[{"yt", ",", "w"}], "]"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"ClassificationProbability", "[", 
           RowBox[{"yt", ",", "w"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"yt", ",", 
         RowBox[{"-", "0.4"}], ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0., 0.76, 0.33], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0., 0.5066666666666667, 0.22000000000000003`],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
              NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0., 0.76, 0.33]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0., 0.76, 0.33],
           Editable->False,
           Selectable->False], ",", 
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0.9, 0.05, 0.], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0.6000000000000001, 0.03333333333333334, 0.],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
              NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0.9, 0.05, 0.]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0.9, 0.05, 0.],
           Editable->False,
           Selectable->False]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<P(Setosa|Sepal length)\>\"", ",", 
          "\"\<P(Versicolor|Sepal length)\>\""}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.802802206319455*^9, 3.8028022838042593`*^9}, {
  3.8028023588196864`*^9, 3.802802374790986*^9}, {3.802803582592449*^9, 
  3.802803583111062*^9}, {3.8028036499376945`*^9, 3.8028037092050257`*^9}, {
  3.804282195223301*^9, 3.804282225527005*^9}, {3.8042822675276375`*^9, 
  3.804282270802332*^9}, {3.804282521105357*^9, 3.804282524925245*^9}, {
  3.8042825578178806`*^9, 3.8042826034274497`*^9}, {3.8042832667569494`*^9, 
  3.8042832800673804`*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"6a4ef61e-0f0e-4375-b385-fd8d51a6cc44"],

Cell[TextData[{
 "Para calcular la frontera \[OAcute]ptima se busca el valor de ",
 StyleBox["y",
  FontSlant->"Italic"],
 " que da una probabilidad igual a 0.5. Se muestran las fronteras \
\[OAcute]ptimas por iteraci\[OAcute]n."
}], "Text",
 CellChangeTimes->{{3.8028032726175594`*^9, 3.802803275250491*^9}, {
   3.802803398878937*^9, 3.802803445704737*^9}, 
   3.8042832224371862`*^9},ExpressionUUID->"35203600-43d5-481e-99aa-\
51f44850bf2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"frontiers", " ", "=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{"CalculateFrontier", ",", "ws"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.802802294565486*^9, 3.8028023257760644`*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"be8254b5-6805-44c9-b5ad-a9d4a431f465"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.19482059378655128`"}], ",", 
   RowBox[{"-", "0.1908474028627833`"}], ",", 
   RowBox[{"-", "0.18827585381628498`"}], ",", 
   RowBox[{"-", "0.1872642107652599`"}], ",", 
   RowBox[{"-", "0.18803253515151963`"}], ",", 
   RowBox[{"-", "0.1905150259859024`"}], ",", 
   RowBox[{"-", "0.19405105038167328`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8028023009125166`*^9, 3.802802342290881*^9}, 
   3.8028036331931434`*^9, 3.8042821480912805`*^9, 3.804282502219672*^9, 
   3.804283287657157*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"a5e934f6-411e-4a4f-befb-a62cafc9f362"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bestFrontier", " ", "=", " ", 
  RowBox[{"Last", "[", "frontiers", "]"}]}]], "Input",
 CellChangeTimes->{{3.8028025649139733`*^9, 3.802802570574835*^9}},
 CellLabel->
  "In[237]:=",ExpressionUUID->"73ec3659-192f-4c7b-b202-290971a77527"],

Cell[BoxData[
 RowBox[{"-", "0.19405105038167328`"}]], "Output",
 CellChangeTimes->{3.8028025711014223`*^9, 3.8028036333297744`*^9, 
  3.804282150809483*^9, 3.8042825033499346`*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"d99561f4-80c3-4da6-8dae-e9abeb7a8338"]
}, Open  ]],

Cell["\<\
Posici\[OAcute]n de la frontera \[OAcute]ptima en el histograma de los datos \
por cada iteraci\[OAcute]n. En la etiqueta se muestra el valor de w.\
\>", "Text",
 CellChangeTimes->{{3.8028032836799617`*^9, 
  3.8028033156544704`*^9}},ExpressionUUID->"b81a0c2d-8798-4a89-8c4e-\
9004792fe220"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SmoothHistogram", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"proyectedSetosa", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"proyectedVersicolor", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Setosa\>\"", ",", "\"\<Versicolor\>\""}], "}"}]}], ",", 
      RowBox[{"GridLines", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", "#1", "}"}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "#2"}]}], "]"}], "&"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"frontiers", ",", "ws"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8028024088798423`*^9, 3.802802474372732*^9}, {
  3.804282167494396*^9, 3.8042821733035116`*^9}, {3.804282507262083*^9, 
  3.8042825117707224`*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"1041c9f9-5766-41c3-9f66-09d88bc6913e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
9fnmz+7IZ/O/0fLGaPT////53/j/AIbVGEE=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
1f/zv0PoonPfp5qX6P/L/wfO+wY9
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{-0.19482059378655128`}, {-0.19482059378655128`}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"3.235072379273555`", ",", "16.605392255492017`"}], "}"}], 
         TraditionalForm], 
       PlotRange -> {{-0.46753655647094366`, 0.02613724549200172}, {0., 
        10.146533299566935`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Versicolor\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
9fnmz+7IZ/O/0fLGaPT////53/j/AIbVGEE=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
1f/zv0PoonPfp5qX6P/L/wfO+wY9
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{-0.1908474028627833}, {-0.1908474028627833}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"5.484556888426907`", ",", "28.737917342109334`"}], "}"}], 
         TraditionalForm], 
       PlotRange -> {{-0.46753655647094366`, 0.02613724549200172}, {0., 
        10.146533299566935`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Versicolor\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
9fnmz+7IZ/O/0fLGaPT////53/j/AIbVGEE=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
1f/zv0PoonPfp5qX6P/L/wfO+wY9
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{-0.18827585381628498`}, {-0.18827585381628498`}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"7.976704421113968`", ",", "42.367113251269295`"}], "}"}], 
         TraditionalForm], 
       PlotRange -> {{-0.46753655647094366`, 0.02613724549200172}, {0., 
        10.146533299566935`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Versicolor\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxde3c411/4vmwl2Xu8eUsoo8xSnZNURNKyUvkYpUFWiGRLKHuPbLL35rH3
yAiR8UZRItlK+fld1+/3/eN7/jnXfd3nPM99ndf1nPs5f7wEjZ5eNyUnIyM7
T0FG9n/nztdL1vw/xoHs/w2j/XXkxvY9/4MVJ39l/XnSAzr6d54c33BHDMXE
W6FGPbChePFturAnmvW59e+Ybg+4jg1ccDT2QpV3XqU3X+mBs/SnFA2LvFHA
iQqtu+d74HQSmRgbmw8ypVnY3lDsgddMfst6r18jpc+8yQGSPRAgQP50jdEP
MRZoaogK7+03tHTKy/ZHX71c1+u4eoBGb6ZH/85bVK1fGK93qAe2HhQ8+8IU
iIKlZi+tUPaA9BtVlydkQciMkv2X7+9uePB35l7B7yB05tOlaOJyN1CaNgof
3heCWHKfn6/+0g1k6xSbp1hD0Tf3rB83x7pBduARhZlsGKrVGQ9b/NANr+dj
7hGNwlHosUPIu6UbYg9l/fgSF4Ee7Ts3z1/dDacSN+TF5yMRHrIOKivoBvYR
pRtPzkUj9qyUU1rp3ZAyO1QulhmDFlyGZuZjuyFdQoiLJBSH6m/SvnEL7gby
km8yzNnxKELslDy3TzfI7NoO8hMT0JN/jycLnbsh4a2Y8cpWAlIeiPNRt9nT
++5wZtNwIuLM6D0+a9YNNjuluUOQhJZe7Bt7cbcbjnMJOz4sSEZN12Q82W52
w6rBt9812SkoSsRUIletG0JVHGZZC1PR0z/hQxdRN1zjfPEmtz4NXfjQ5jIp
2w2fnN93dYylI+7U36IO4t3ge2ZNtZfsPVp+fqyfkdANjQbGzQPSmahF867T
e7ZumHFylNp6nIViiYHCyge64Ydwt3tEYTay3qrvHiXrBrEUjsUflLnoUveq
nc1GFzhxuUqeMM5DfEmHCfQ/ukCspaq0934+WrXTaU8hdcE0eYunnFABalN/
bX1muAukfr4rnZ0pQPGEKp6hri6IoX75dCOrENmu/2iyaOgCGtfoDHfHInS5
g9+CprwLmosWOROuFiPCOy2OhJwuyPwZxWtytASt27jXKSZ3gYYQV+z0wVLU
qVr8sC+yC/xdlVYlNktRIt9X5kdvu+CuHM2I9lwZslvhqCb37ILW4dfnnkyU
I41WNdOY511gcDJH0+lzBRKKdWKQfdoFJ/oEJQJIlWjLMqesy6QL1IutyAoW
q1DPhUlDU/0uCKm+2j5HVoOSuZn2/7vaBZ0HFa4o8tSi5z+Vi8IvdEFHwdN/
KacBXW2yNZBS6oKa7osr4SfqkHBUGlWbdBc8HgZls4469Nt8JNdQpAvqrJPm
Gk3r0Qfl/brbPF1guyq5L42yAaVxnN4XzNQF6598NOnSG9CLH+aZ4jR7eg71
EOc0GtG1+nc3Gnc6YcUh11BhoxEdCe/bub3SCe81Ah4sJzWhnUcUaWtznfDd
5wIbzY1m1I/krr4Z74QzU9YVFtQtKIP1wdbhgU7YUWwWFahpQS+/RSbWtnVC
MwULP499K7pZ23FZp7YT2vazVvLJtiGxkJ3Vn0WdkK1usSm51oZ2H0jG+bzv
BEnrV2lqZe3o42nDi4LvOoF+/1OP084dKJMp+GdFaCdI1CblbF3oRK5fGyOv
+3aC3PuFvPtMXUi7av3cgksnKB6zFXg82YWOBR5Z8HjWCSd8dqc387oRuale
KO/jvfU73PQf3XvQ8Em/MyWGndBNE9P7TacX5TDUfL2i3QkvPLtf+HF8QB4z
SwFf1TthdtvQjtfzA9ItJ5x0OdcJbl2mSmG/PiDJN9enORQ6oatG9sn0vT5E
aeTpl3+sE3qyxeZ+9vShUflSWTWhTohYaerOONuP8g/Mj5M4OmEr8b7vZm4/
8prieuV4sBPWKVKGmgUG0O0SdWkWik6olVVo2AkcQMd9nT9lbXWA6UWfSk/y
QUR9L89dZakDxMd7gi/YDqLPMqSj4zMdEJrf4S/ydRAV0rJ8fPapAwq/Mhox
6H5EPuMqLxl6O8CtauHKTPtHdLfQ7kh6Uwf8ut/O4ac0hGReZXxAlR3gVyLP
v5A9hOgMRp+P5HWAjup/RvN8w2hSmp5oldoBE794Qx+8HUbFVGe76GI6QPXY
A/4r/4aR7+jTZ0mBHWAvaizrbD6CDPMS+ZW8O2DbpW1ibGwEyXsOtA44dYCk
YC3dFbVPiF6PyuqJVQcQorhDiks+IZKEAjfVgw7YsifX2yCMojLyh41xBh1g
KDiuuuE7ivyHo5/IX++AW38iLCJXR5FRdhdb76UOcA+UoqzXH0OKbv9qH5zp
APTlmdvNujHEoC1tRibTAeqOfaxKwp/RrLgRU5RoB2j4vhY28v6MKndDKo/z
d8DgD+mQ8K+fUcBgs3EHSwfcb9HJ6VQZR6bvN+mN6Trg8IYQ53zCODr1Uqz0
z792EHUo4Rz4PY4Yb9y+F7rWDtXLySm21yfQ1yNvaCW+t4NYro51SfoEqt6p
LWiebIf+Cm06l98TKLhvWf/ux3ZYPqMw0n95EpmlCVFudrSDtfiNGdvISXTG
6WZOQF07MDzKsrg7M4lYtLy1RUvbobaUcKOObQrNC5fv1mW1A7LdZjBVnEK1
298y9BL39qfd1wjTm0KhPTzXV8Lb4bVoi5/a8yn0KPnKH1//dgg7oLPqGDGF
sINLCtG9HXSvhiceLp5C7FcKrlTbt8Ozykhy5d4ptCA4s3HTvB0SUs9Jt89P
ofoN1oRFo3ao0F45VkFGQuGdF9W8ddtB8cNELQMHCT1JcFjh12wHWSZR+9aj
JKT8LDOm7Hw7lC3ulJLOkhDn5c8qWifb4cY302IDLRJa4mdYmpfci+/kiU4a
klDTKopwE26HzBied44WJBTVZoW5udthQM9MkteJhJ7GJX8rPNQO9bMpVMLe
JKRi/TFYnaodHqwz1YUFkBD3JZrTs7/b4JsKuYtdBAkt85z88mK5DeZerjv0
xJFQy/Kjt2xf20AI7svGJZFQbHOsQu5YG1xmPuSzmEpC1tE9Uxf72sC9zNe6
M52ELj0l851saYPde39JJzNIiE/lhIxDdRtEHaQfU9njVzhNPjMWtgHXxSTx
rRQSalsM83qf3gaHX/8euZdIQvENrZLKcW0Qli474RNLQrYR28OjwW3QV7lK
cAsnoctPjrrZ+LTBC69IW509/YRzd8TpX+7lA64InlcktM4WMJBi0wY6zC8k
J5xJqPN73YszD9tgq3ChOd+GhBJg5fDQ3TYI8e8ITzMjIbtQ4V6Lm21woOHE
4Y8GJKTxUNuB5nIbxHheU7m8d95CZ30EE9BefHpTdf7zJLTFXNmhKNcGt7pp
6R7IkVDP3IJNn3gbKJd7cSodIaHkaj6+R4Q2WHdP/FzASUIOQVdbyNnbQHfj
sOMMHQlp3nd7GnOgDVLyif3zv6eQsFIRp+y+NmDrXnUaW5hCvw99qe/aaAXy
7T+1Hz9PoQ+z7I9Nf7SCnq+i/0r3FEqrUGX9R2oFdblA+yswhZzeOtaED7eC
IcV6PnnBFLpmnH1fqrsVQFr7r2TyFBJRnDjU1tAKOsH3836GTaEdesYKw/I9
nqCUYPR6CvWTzhlt57SCxnkr0wznKZRRanMgOLkVcjQPfx63nkIv/VKLxaNa
4bbj7Q2Bh1PopuHwnca3rfCJuvJhoOEUEpOjozHwbAXKIu8zV/fqZ5dOKX/t
eSvQFTR+eHFjCg1OPNF787QVzKl4+k9enUKZRfHkIqatELZcrZCuMYVcfT5k
1eq3Au91ge9f1aeQ9h3yWzparWBlf2iE98oUOnZC9t/PC62g9PszhYnWFCKn
uZ/uo9QK21aKSaRbU2h4LEJL8HgrbN0yCSu7M4Vy8tu3K0T29D2mH6Ixm0Lu
Xn+SrvO2wtQg++M12ymkqy+hscDUChd3nf575zmFJKXurXvQtAJR+0iT+F59
U1IGxfP+bYGXFd+Uq7On0OhIw6WSlRYoL/XLe9o8hfJz1pavzLcAJd94hBlp
Cnm5i0R/HW+BC70FVu179X1bR/e8y0ALnDMjby0ikpD0Md8fHO0twHn2iqPG
ZRKi3lcdll/bAtkGVlu5tiT0+ePiWbXiFvj735bV3736KswUmCe9b4HLF4n/
6X0kIR+Xa0GO71rApoDr4MyBaXT3pscplrAWWPrQZFp5cRrJiJXMZPnu5b/p
tvPPaxrR/fvqr+LaAn7P5nZ626fRRD+n/PizFrhv9v6wBvMMKk6/PPnscQu4
OPrUB92bQb4vXvgw/NcCvCL/JdQWzCDDa7nH07VbYDNl4P0y7SySF5kaRRot
ILz/m8Ul01lE/4fJc+RcCxjGjl0YaZlFpN7zElYKLeC49Ui3QeILKkt5NkQn
0QKMk+rZhOgvyP95ukuSUAvUSaemHKT/iow0P4kqcbbA6pOmP0keX5Ei8UD/
wMEWSJZOZNohm0MMW6ednlC0ANPDWhopzzk022UhTLXdDNio/Mm1g/OoMjGh
O26pGQJETrC9iJ1HAXb9dvKzzXA2I5Wt+fg3ZKpOSej91Aw2R4rYLnZ/Q6cI
8u0PeptBJ8Z889DT74hx/YE1WXMzCA3XWx/nWEBf26N4oiqbwbxOxK2+eQFV
x3c2Hc9vhtj0Zcp+xx8o2OaveUdqM+g2m2zbyC8iM1UpDuOYZki4UWRetrWI
zvD9V/cnsBks1w+5ZtUvIZaV4Ieh3s0Q/Phf0r2gn2i+pYlZ4kUziAxZHFuV
WUa1MRtVzVbNQNaoI/ouaRmFWoqa3n3QDO9zpj9Vs/5Cjy7oM2waNAPjLX+F
G76/EOb2Lwu43gw/3fTfGVOsILafNYaiqs2Q58TJuuqyghYaf9LVn2mG0Qce
D6nIVlFdpGCRnkwzSNFoBMV5rKJw8xsGK6LNkPaFYrlm/xp6ouxF5cffDHr/
2d42C1tDyhxluUTWZliQP8AVT1xHnD/mdarpmuECZS6HUck6Wqrj3ndrtwmY
aJ/5F17eQI1hGpmLa02wKLeb5z+zgaIevbzh/b0J2P2mX/9y2UQWKH+Hf6oJ
IkTyHScFtpAK63Rq2ccmuDtorH2rcQtxf2O5qtXZBDLmLf5XH22j5ZoLW/N1
TaD8/D+ddtbfqCXYPtGttAnsCFud0PAbxT54f5k7uwluiw9pSNr+QVanx1YL
E5vA+Rx94iGxHXSJ6WCcekQT0P8+tHaHtIN4v569OOvfBIJeDh+Z4/6ilUrL
ny/cm2DMdkTxiME/1BaQFMnm0ASiS8XPQvh3UbzJ4Llc8yY4+y760tXZXWR7
knrhonET7DcRncvQJsOXGRRDJ3WbIFaTrbWtmgwLzDw846DZBOeTlBTdhffh
9bKYr4wqTaBynXa6980+3OHfHfD+ZBPMEivzs7f24YT/dhWVpZpA9u5pKWZT
cmwnf3x6VLgJQqT7g7f7ybHGAWM/G+4mmL/WM2CgTIGFpkJl6RmbgF/qCL9c
EQXeKm4ZT6FqgqODfiYvDlPi7tdb3mf+NEJv6RkL8ShKnHxXXHpouRGcfQvP
yDNQYQcZg08WXxtB3DR9KdKTCmvSvnWn+dwIR6P0lS/vUGHhcTia0NcIOeQM
xeeeUePfBb8GFVsb4Ww/g6PdT2r8wZv4sq+6EXL9u70nH9HgtNu3jjwqbIQ3
atS+NnM02En61QfyjEawOrX9S9SUFl+jqngeE7fHexf9WJ+hxSKj34VkQxqh
5ZXZww/GdHgnl7ery6cRhAbnaPJm6XC/h+Yz05eN8FDwaL7X/f04Q9eV/5/N
Xv6PV5gvf9uPX0oUtoY/bATW6Nx7v54cwDfJZy2l7u2t38dnYvnrABYbZuNu
u9kI7wwPlFbZ0ePdrEuNhpcbgVB2p7x1hx4Puj5/so0awaBJLdbH4yDOvJXF
FizXCAnWqsYr+xmwq/h4rfjRRnhazUnaCmbA2rsMZo2ERtCQG6wJ4DmEjw1i
JgP2RiDeY3PITDmEyd9bV64daIS2PxEy/ByMeNg5xfjNvkbYLKq5y2vAiHOu
D9GLbDZAeL3OBbVERux+hLa09kcDjI2L3Yv/yoh1d07e05lugBndrjNsx5iw
ZN9j2uXhBji/PT6fbsWEKdPiCny6G8DOYPLvlTImPOrYqy/Y2AB9sdqJ+/4y
4byr+ygryxvAMuW7d7UyM/YSlsm5ntsAAkyS8vY+zFh/20R7IbkBTFt5SEd7
mLF0T/iuR1QD8MUI/e5jYcHUyW0ZvAENsCiu/NZYjwV/tv99rcSzAVQjHOs+
xbPgQo1jf644NgADY0qRxCwLfiV4N+Xr0wbQ7OD21xVjxXc2Aq64mDbApLGt
1Q0LVizTWb/BcbsBpt+cDeQoYsV0Cavv8rUaIKq7hSd+kxVP2B5WU7vYAOZc
C1enlNhwsZrOCklpLz/9qvWwCxv25X8d43i8AQqrVricG9mw4WqlCsuRBjiW
ZG/XQc2O5dp+LGbxNkA/US+xXI0dH4jjj1BhbgCtmTMm5/zZMclKC4/TNID+
K0ftuz3suOyi+7dnf+tB2dLnMB0jB/bnKQ5mWK2H1OlDEUrXOLDR8hel9Pl6
eELa8P0ZxIEVmzm+oIl66DwexyDQz4EZotXejgzUQ3rv95gmJk48Y+GkYNVe
Dz62mv6ftDhxxfmcKTqoh2eptvm6AZw4gHPydVJxPZTT/vI93c2JTRcZZZQy
6+GTzJFml/1c+FSD8ueBd/WQlGR0nO8SF2aMsPV6ElYPSz0LXYc8uPDXx2mS
VH71wCjL1XC9lgtX45HhONd6kP6j/4i0xYWD2Pa7ydvt6SfDWmUnuPGD70ri
vY/rQWrI+viHx9z4DJgPPPivHsr0c8hEU7gxS+i7F2Q69aD4LHGucowbz5v1
HY7SqIer9h9VvZh5cO0Zit7jyvXQlGxd76HKg0OZ5Rw6FOrB9wrl0SJnHvxo
7r6gsUQ9vP93OI6xkAej6siOP0L1EMck8DTqCw9mC+qwCeWsB5Lwo5PqnLx4
wXSHV4KhHlR6RYaJl3lx/SnJlmaKetD4Y/NA0IkXhx8yfHp3uw6KrxdoKmfx
4iezQZybS3XAKZKm4DXKi5UrGusDZuugR9mf9RstH+Z8u/5IdLQOhKT/CpjL
8+FFoyOs9b11EKZdN85ozIcbFfRq9JrrID/egWfwLR+Oove7v1JZB7pC0r9K
K/jwU1L1Ib/8Ovgvuq6+YoYPq5QulRPT6kDsPIfSOD0/5vYjGFXH1EE11Q1t
ITl+vHzv+oFbQXXga8kf52vAj1tkPYsXvevgurfkAw4PfhxDV3rH+0UdnLt2
62xHBj+2mpijFrCuAwHKUN/Ubn58qYgrv+xBHYwFe1Rk/eLHfD7qelp36qCs
UsdtklUArxg4k3+7XgcyMWOT5xUEcNvxvCw31TqY9VLm+qwrgOOpSTe5z9bB
QkdXadZzAWwzxvyvUKYOYh5hr9IoAayWr5KuLlYH3uVyIWQVAljAy05rlr8O
pgmKUm+HBfC6Xsb2C9Y6YH5Q9cV4XQB3SI4mse3fO8/scO3zdASMaTgjDXYB
Onw39V5yEPCPfKfvb74DJDMYIJPDBBypP3kaPgKcv1X1eOsEAStTng9YrgOw
Wvg2dwYT8FJOGkkwG4DibLqSwhUCjtbZL3sjAoD2v0NOc3oEfHGfhbenO0Af
GUfjtfsEvJzZN1JiDpAX2CD33JqAY2/KHZ3TBfiu+Zbqv5cErPov0plTBSBS
PMaG3peA19J3etWkAEKGu7tfhhFw/DVDISduAAkp0pOqBAK+/KfRNpsKYPWA
eWFzFgFvpBxpHV+uBYdrrBsJpQScpOnHdehzLTQ2sEdq1ROwxtbSY9xaC4hd
5fZIJwFvJV6vtSqshTCOV45KQwScol7KmBxXC04UVKbOUwSstc5lPOhTC/X9
Z70TvxPw73jnEirbWlhb+nE+a42A01RJNAr3akH29eifuH8EfH1FRd/sci1M
8TXsc6YVxP9iMrKj5GrBvOhYnDqzIM64QL/bQagFCdNbNAd5BfHNn0+v7RzY
09fJ/LDpsCAmixpIltisATzYOmIrJYizlRU27k7XwOfQO7qCJwWx9o9o1cDu
GsjJvDTQpSyIycP/RdeX14BFWiivo4YgzkVGiyvJNTBNQ794VFsQ639rRsIB
NYDQbdLsPUFMGSIWfMuxBo4L3XBIfyiI80+/mfU2rYFTCgpMdjaC2ODrsny5
Vg3skyAn3HAWxLSBN19/U6qBWb6vT/Yue1x4snyM+0gNzFjE7qAgQXx3hkdS
g7kG2s8nFtyIEcT737i4Ov+thuW8v/LOqYK4VH6mP3e+GpjH2w7V5gliw6mL
h6cGqiHBkj2co1IQ0/tm2jNBNSQV7m77NgnichmGDuXMalhSasNcvYLYZNyK
1zasGghj/CqNnwQxw6uPFqmu1SCn6lTwelYQV0qfrB96XA07IlF05j8F8f3R
WBZanWpoAMYE89+CmNmT7P5J5WrYrj4Y40clhKslTMofSVQDI1F4tYVRCJsN
t+6P5ayGs/HnbQR4hTCr29E73RTVgGhv1IQeEcJ14gF5/5aqwDwu/oWIjBB+
NLiyT3q0Ckp//LQfOCuE2V9q3/yvuQo+pyaSx1wWwg1HKtOC86sgNPIr9Qtt
IWzRx7fdGFMFu/XPzz8zEsKcTm7q695V8KbPUMPLQgg3CX+JE7GugvM6HX6Z
jkL4aY/qss6dKqgZoT4/4y2EeRyylV+rVoHHWoyfRIgQbhFkDKuUqQLaNEvd
V++EsHWnzdwCfxWkZzDZL2UJYb5nwyf59leBzyx9kGG5EG7nV/LXXK+E2Voj
ibEmIWzbFj/hMlUJLWz0hbf7hDDBmvx4QWclmCaEmE6OC+FOnvse06WVwHSv
3tL4uxC2b27/yJJUCWbl2lOzG0JY6KmE6IU3lbBv+FOaIQUR93AGOdo5VMK5
DxbxA4eI+HnDWle6cSWwsdX4nuIl4sNPdAU+aVaCb9okd7AoEX9gq7baf6oS
st3vLgzJEvELEGhSOlwJi5VSPlTniPjIQw92c8ZK+JRUa8F9hYgHmOfM4v9U
QJzX5iFmPSJ+WX25qvdrBaRf0+6fNyFi8fu5B/f1V0Bq9gZLjCURfzzEbHii
pgJGviQfO/yCiN0qnhUaZ1RAsvLcU49XRHzM+BNlWEgFDB1hkSoMJuIR+jM6
LS8rQCpLrSonjog9ShPebz6sgCZB5wfWGUQsZUi5I3qrApzVH/ruFBLxKJ2Z
pj6ugE+tHq6qNUTsXdSZ4He0AkreTOdcbyXi43ekVqvZKwBLcrhy9BHxOHXI
haV9FXCg6u/TkFEi9snfiBBYLAdWhZcUjTNELKuv/11rpBw8/VFv0g8inqSo
Pe3eWA7azOoOUutE7JcjGFCUWw4sde9KTP8SsbyOF2k2qhxGcfE1ZSphPE32
TYbdqxwyxOeONtAL4zeZGt6XLMvBKXfOappFGJ+8mT/icLscdJ44Dr/jFsaz
f1mOZl4sh2PUfOGbBGEcmG7vPHa8HNL+eu98FRHGStfGeun5ymHVNc/08TFh
PPf7rNBZ2nJI8EIv3Y8L4+CUJNunq2Ugt6P4SkxeGJ/VpG5NmCgDIhJCd08J
42+bD7n628tgfKvSm/+sMA5L7H5MUVIGKwSqK2bnhDFWP14rm1AGcxxpCSdV
hPGPtVDG+35lcLXKJD/wojCOiN8yirArg3wU0vlYVRgrqxqUtP1XBvFCpkbt
asJ46RfQ/NYoA+rw49QZl4VxdAxR/6hiGTwbTHpIrS6ML1x4lW1ALAPxsX7D
mT1+een7vzcMZXCSRZt0Zg/HRmpeg+1SEHopS862F09VuTB5ebYUvCj7/zy4
JIxXF9g2BD+UQvjbliPyF4RxfNhz1RtVpbAalkbmoiyML6PxaM+0UjgyVy2o
jITxxjxeLAkqhXHN0osuSsI4MTgFzb0ohZOrSF1eQRhrnKYN5jQrBUW+KPEH
J4Tx1pfHs2o3SmG/Itcuk4QwTgnolXc6Wwrp3Zn7FI4I46snZV5ni5XC7KXT
r4f2vs/v6fCxcdZSkDt9ZP8vLmGc5v9b4hBZKfhTB7C9YhbG1+XvuuKFEsi3
LdON2i+M/07W91sNlUAwuhkrSi6MM14fPpxcXwI5B/ob5baJ+KbMa/vB7BL4
lhzVVf+TiMnGf7RTRZbAeV7N7u4vRJzlrcWr4FECi+7U6/pjRKwtXWxhZlEC
X2s9fB99IGLyUY76KL0SMJUxXvjbRMS5Hk4snSolsFqq6cdeQcR6EpOmO1Il
4GAivlqSTcSUw8rlEjwlcL8R142/I+J817T996hLQLzKPDlgr/4MxPffCfxV
DKHVqobdnkRMM2ieV/+5GKLcNbsi7Yi40Llv32prMTg27O9ZfUDEd4/I3RQu
KgZubmWDKV0ipuuLTLsVXwxn3XmdDdWIuMRxZ8v7dTEEumldsDtJxIbChurl
tsVQePPqMFGMiOl7GuO+3SuGMAVro8ecRFxmf2SZW70YDNdEha7SELGxoJ+y
hnwx3IoOP9W3LoQZOpdCnQWLYcid6sjajBCutL0+l0tfDCYdTAaVe/enKX/p
yanNIlDh9uMRASHM1MblzzRTBLekNftOZu/5jZXzhHJPEVyv8FjejNzzGx6S
tG1FEazUfVox8hLCLM0qHqkpRTBQWKvjbCWEwSLj41BAETTPxiWr3dnzG056
UVqnIviYyHevQ3XPbxqeOp68XwTB2XfZyWWFcP3jga5H14rgu+QZ3VV+IfyE
TUEg9nQR5DCElCTQ7fkNRFt1HykC4XdOdfRrgrjJ7F/jP+YiaHofeeDUhCB+
ymzELv2vEJY6dMWOtgli7upms/++FUKBEMqaLhDELaZiVcGDhTBhcEzQeM/f
rQ+9OdgEhXCb8z1nnqcg5qtYvreeWQhtFcd5280FcZvRzUKR8D1c6VFYtNd/
2NKXU+q6FcJ1/x93rJAgJpTy6Lx+Ugj8otExlKKCuPOey/tKnUJYt16cfsoo
iO3oZv4sKBdCYERPSskWAQsVXdTkkyyEmlcU6iN7/ViPQWaCJlchKA/7KIy2
EfBzaoZVF8pCuCG+2FiTT8DC+VYXCn4WQKFdHvaKJOAPeh8jpkcLINMgYe2E
KwG/oDj5naWlAOSnL/K2PyDgIzmxpy8U7PGTqt/UrhJwvzZZgF1sATBaD7uV
yRPwSzITUvqrAthVOv6dhZ+AxTNbZT5ZF8CX6upfhlQE/PHGUe/9dwvgWo5D
m/InAez69+2IkloBqGmkOOSkC+Bj6Svi5rIFYBjFqUllJ4BHtLSd4wUKgKNq
qEdTRQB7/K7o7d1fAO+P0sq+YRbAkil8Qvs28iEq5uenxil+PHrFzfYEKR9S
ysqZNnL5sffmbItxVz7kCqYniDjz4+OJqlxhZfkwq3TcWE+dH3++nP24JSkf
gp607QZy8WOftUO1m2/yQcx1S/zDHB+WjbdhFHueD9uMvIFcpXx48tKwkb5J
PvRUsJU/9eTDvr9OlfhdzYedS4x0H6/zYfmYeJqaU/ngK3KjRV2QD0+rkOsv
Hc6H+8+PMg795MVvlkyzBZjy4ajm95lntbzYSjrkb+JWHkTKb/FIvOHFbR76
SZS9eeD35t/Tv7d5scCw4KUHqXkgFiLybF6cF9uJf1tod8qD3/YW8T+3eXC3
c37gset5UKzLeoa1nQcL99nLBYjmATk7h5tOJA92Ekajv/7lgvrnrueVD3hw
vz21y82PuSDIGcB+VoEHi3V2E8uycmHHyenIDDUPduUPa+Nyz4W/yWp3M4e4
8bCVgfkL3Vww7JK9GprGjSWbicyTkrkQs7lllWjHjb04F0rPUeXCnfZpof6L
3Pjz48LbKWM5UKbyK1mEgxvLwHMymsIcoPWi5X83x4V9mc+lPvTJgR4b2SSl
ci5MMqW93HU3B9jMfovv+HBhxYreJUm5HPjqUx43pceFA+gjQoIO5EBfOVPX
vPje+/7eXcU1UjZ0gMkz1h1OfLro8Lh2eTZU6FxRNe7mxCHUi24Vb7PBrUWo
aDCeE3/XKxbhNc2GMN0zYw8sOfG5HKfOl0rZoJHO0MWnzIkjyc5bkpiyIb56
jG2dhRP/vLGfTWU+Czx4Thxd/MKBL6b3VaTVZkGHvr49VTkHjvsdeZcuLAv6
F9bunfHlwGtXDCmePM4CZZPQi6EGHFg98UhGz7kssMq+4UsnxYGT1pY0jnNm
gd6k/NmYfRx4+1Lpr5ClTOChczqjPsiOtWKcwzeaMoEgL7rBkc6O05dUlPRi
MkEVNnzJHNnxv3P0U1VWmXv9dI8p5RV2fCtswJNfNROYe5c2hAjsOHs+WsyN
PxNYvyiV3l5lwxSnjXpm1t5DluVL4dwWNqwfIGZzsfM9FLD6+HJFs+GC6WWO
94nvYW3lW1ucORumlS+vPuDwHvqH7sOpc2z43muX/yw038OR00xDP1nZcOnn
i9R9wu8hfMe4o3qeFR+UZsiS+ZMBSgnxZonVrNjE4+PV8L4MoE2x9Y8LZMVV
Q7FrW+kZULGTIlhgwoqZxU2ibr/MALmAHobPiqz4ofPRs7U3M0CgWVCI/yAr
rvuwMk04mgEUYWIXHUgsmEO48pXHvgwYij5x4nsJC7awdzv2dTgdGr2Gj9j6
suDmDtU+1dx0aK2tNmO/x4J5+RntsjzTYSIn+mCfDAu2sRrmZridDsi+zjSV
lgV3NMWD5fF00AkZcwwZZ8aCnPdNBmjSgVWC4XlMITN2eCxBJz+RBpzs9gO1
r5hxT+1aTmRxGihwV23/NWDGIszV1//4psHsjHiU3glm/MLUY/POf3vYOdK7
n4YZD5Zfjq1TSIPBNc2Uh+NMWJye+RyRIQ0SJOVJAkVM2P3epy9es6lQ5fBF
YcOHCY8UJvjOV6aCHnNazuJdJixNbSalHpQKP+geXKORY8LeelKDOQ9SYXww
+ZTKASY8kb3hwHg2FfzHVa1SSYxYlqyWz4Y1FXb7Hk4eLWfE/je8Gj5+T4H3
cbT2n94y4uk0jQeK9SkQkt+zlGvKiE/9ZqGPiUgBsZ+S9jmnGXHglbH8v+Yp
QGfceW6IhRHPJyTdMlRJgaAbN8luDR3CZ9ce/m7gToEq44Emba9DOPzS8XeH
fyXD6d6Fo8Wyh/CP6K3zPq3JIEdy8Xk6y4BVlmD+e1wy5PKuCfmFMuDoc6/e
XLFNhmabQnm6Cwx4JVTzRP7lPX5f9c+F9YNYdZ5tmFkwGabPaZjJpR/ECUrj
Ts82k/beg4Fpc7oH8cbbFMJIdxKUXLGPpjxwEGtOP24+lZIEtq8ieN7W0OMU
OZlHcY5JsMt+4b6XJT3e8fnNQHYtCSTkydN/EOnx9c/1RUZHkoCxmf1r8/AB
nCn1Wrf5byJE2hDWmfwPYDIPrb9HBhPB5BA9Rz8+gHWHOJJ8MxPh1ILTE5qN
/ThXbPLiomsieFokrRRm7cfUzmkLV3USobjpgvvH//Zjgw/mgYUSiZCWV5r2
lHM/LibKybFRJkLL2SFTt146vN9+55P9aALMpR5sp39Fh406Gl+O5idAXrkc
LxOiw+V8fsQzrxJgYEj9+dtNWsxodb3t3Z0EMP3hMuCZT4vvN3GZk8smgIbh
483Vh7S4loPEZLo/AR5R2PqNEWmx6JCWeUD9O2i10mdUmqDBIy8mS29avAOd
iJ2DTFE02JNoQcbN8w7U/9Gp3b1Jg2U7dtQmW+NhNKhUS5CRBk9Z+oWk2MZD
yeKVad0uahzIwT3+UDAeesYjP1C8psanazNEpHri4HhTJQXhIjX+YaJgueYY
B3IbV7xyKKhx5IGWioojcUDRoGCaWU+FVQtvUrgMxsKdoXfNrK5UeE13RkPF
LRY6RNiWv5+lwim7VuF0krGgjKw5j/6jxFppZFM9ozHgJUp3b6CGEpNdCRAL
fRUD+sTZfpIzJc5e5bPRk42BF+mctjfPUmKD6OxqflI0NO0TlxfbpcC055So
Z99EwxmSA/ndOgpcPNd+9f2paEg1VopcdqPAJm91oyzmosDtoP+pifMUmFFu
blomNAo2Lg3bi1BT4LqxZ8e2cRR4xk1ItrSR4yfulHa1i5Gg+4pwusqPHPOK
hYBHdCScUKd2o7hKjtt6BenULkWCi9d/X2OZybGDXf51hrUIYLKqH/Ec2oeF
+VDsQEIEdI6HrVRE78ODjd1fIq9EQEzIj5JT9/Zh10cGUnd/h0Ov/99iSuF9
WJppwYGYHg6UZemC7N/I8Oey5w3zN8LBU9nk0pNcMux/l5Y+lywcyBj4fKht
ybAiVcQtm5wwSEqqeT57kgzPZx1+p6gfBjQGux4UZGQ49Hrx/F/qMAjt6M9p
8t9FKtvKJxqLQiElo91tl2sXLb/rc/IxDAUyXhvDkvR/KOGiYfOVg6GQ/nbA
bFbuH9JYXGJgqQwBcx+bR75Nf9FOiLPuyP0Q6FSK7Ei+8RdlnKJPimMJATQ9
LSE/s4N0SdELRnXB0JNNs3LaZgdR+ojJiZoHQ4Uy5XIJxQ4qlix/ucgVDF+J
7SdTQv8gw48X2wpbgoCV804btcgfxPjiI5ODTRDkTijmjZf9RtVCJrfPEIJg
kFoiX+zyb/SkfSWFvDsQSD3dowuftxGnpdtS6/NACPPb9jtsuY3a2BkV34gE
wvouq/kIxTaadzxDkZoWAPm3dawoI7eQapt+uBRZALDNTf/LObaFEtgcxCr1
3gJVjE/5p/pNRGYcVq1S9GYvH62Qj84m0s0vvNpL/wYuK0lerV7cQOV/e6f1
7vvDo63SVAfPDcSovvhsFvzAwuRSTD3PBrKM3E/3lMsPTCuPXogtWkdtX47E
blv7glHYsP0BjXUkKnNByrPrNWg1vrVj+bKGXF2NGhhEXkOZUXdZ+cs1NNXt
civKxQc6K+pJu5xrSJEnbp746RUYzL5rWSxaRZFmlU65J15BKBowfHV1FS2X
DDOc9PeGCT+m3r6FFaRFsZ7Y+MUL4rpuaPX7rKAMLWY5TeQFr9bL0VuRFUQb
L9U2EukJr520GQ80/0KGCxq3jVc8oH/it6qmyS9Up/hoaVHdA57jry53KH8h
Tu9Xbg6p7qB730nrTOoychhIYaXYdQPqtiDvtYvL6AOhIf2Nrhu03e8MYRn4
iaQtJk9xFrpCLWHpEgX3T+RTtdOddMAV3oGrZaPREvrAJNug3/ESPKqMHt3O
WUSu2RbzT52dQSKUjH50+wfCl94zeEm/AJJZ9KGrqj/QMmlGNnrGEbgoqqzq
IhdQ/gv+23nhz+Gy6cUmxYXvyJBDz61JzQGWM4XuNKDviFAYkv5pxw70rlJd
fRD+DX3Q6OleynsGjL1eRsd/ziPXOdo1CmNbOOfieEj88jzC7ue5udht4AFz
ip1++hxa5n2JJdutwG4i63Yn9RzKLyu/f/6FJVAEOwh4mX1FdSlfuQruWoAD
f7ORf9cXhEdv3x9regw+f57/WzrxBSUc6iukOvoQ8t7NjBXEzCLChYu7UkH3
YUoqo2+Ueha5Olap628agy7ZnQOWtjOILF860vPOf9DqaKFgPzuN6jrU2++8
ugPkYZye69p7WE7eqPCGLphbNsX+7CQh1wTCH2rCDbBU7Ex/eJ6EyDjYRctG
1IFuK07lQc0Ucv3xXc/Q6hywNVzzXTg5hcj270qKiB6Dlwb8B1esJhEZvs3y
6Ds30slrfU58NoHIhCUEVV8rIWw9r2HhPI5cq+snfh9VRS1zHCaDvp8RtrEb
ylC7huR8WV9rx40hV1r/MzedtRFpBImvFI8i17jElN3820hs5WNNbN8nZBg1
5nXL2hCZZFJVW6yOoCnj+yeP0hujE6udore4R5Cr5K8fZGmm6Gc4bY/KxWFE
tu2UMITM0MKFl1fP2w+hhEbqm9mfHqHBfUndp3I+IsLbIBp3G3NE+sY/f3Z+
EBkeezueRW2Juj+IH1MQHUQJQTfKwm9YIW2F7P+4zQfQ8gZnkFuCNTrhQ20x
UdqPpA0mHj1ZtEGK2Vm3Haj6kWt9sorOqWdI7DqN0WfdPlQn8pBf+ZUdumRV
tfg3/wNi9JfcOjZoj075Hn7fe/AD0vq12sch+Bzt6KvufzXRgxK0K7LILRyR
R6moZ1hmN5qqeum1WOmEzNxjHFJcupC0oMq9ERpn9OEzV1P0nU5k6U13svHm
S3RoW+3+fyodqG6hhzk30QVdEP+i2SXTjlxFL9tp2LuiCul6ufKjbUh07NhM
PZ8bcpPpnyY71ora3hzSUmhyQwyN9ufcZFuQJV6pzn7kjmazq21YLjQjxtVB
MSEmDyQeX7/59k4TKk8tC48o80AiO21qDc6NSFc3muLgXU8Uc9clNTG1AZEd
cLZ0p/RC8loSA2uD9Sih5t74ZqYXUv/56HDIgXqkaql82fyaN9p3oSn0hlod
mhc6XDa96Y2sv0cmcfECCvxII6wb/wr5ywalixfVIGmf74HdKj5In3bws7dO
NRo51f1XecEH8TkSKkdpq5DDYt6j8qDXyHyCI7O/pQIREoKHJRR9UcNIuShP
UDmqu/5MJXnCF13PbpoyfFCGzKh0Czi9/JAWJVWbllopoi0/xf/2qD8SHn54
KlK+BOU/4vOj6PdH7RpbLF8ki5EWH9mWg8MbdOWDZ/uX40Voq3faZIn/LWKr
l3FVQ4Uowb25z7j5LZq7XUOs0y5AWC7j7KfHAehkkrXTb/t8tGbTfOsIXSCS
NqF8cfNCHlLplqc3MghEbT+2L1Hm5KBIkYyG2LxAtGqusPJYJBvNu3A9HyYP
Qqtbb3XX8zPR6U++UszaQchAtbeaXuM98j+x80XjfRCa712ZJGymoyk/89hX
O0HoXNV37uSCNCT9ZeJ6w9Vg9OEt4zMap1TkelaL7m9SMCrSvFzedD0FjUTU
g8JGMHofsOR+UzEZif46YWetFoJKBu10ZI4mIYfLKcdyYkPQZziUOSWeiNqS
2WbmfoYgGyxQBfIJiPDXO0rofCi6ZxmMF2LjkaX21tU74aFI53MCxb2ZWFSX
95A68lsousltF5OGYhAj3Vh1/+kwpDC2+XoyPwqZGWnYHAwMQ2ppge4S8pGo
vKpGTHUmDK2cC39c2ROOaNmkptzlw9HpwGCD0udhSNciIbzmdTjq44+M0pEP
RfmtTFe2PocjtbpOv1GKEEQm6EEhIx2B7nhrlLmRgpCW41qFuUcEKjmZnBvW
E4gSBkwtM4Yi0NmmJpqO0AC0dWxYZEYsEnm35CvIZbxBqt6q43zOkWj3zYIG
+6AfipysCNH9EIkk7rhgf15fNK949HIIMQqVxK1813f2QTg4lqzHLgrlfmhi
9F3zRoELB8toO6JQg88m9wt3LzSl4mJ+ni8a+UhFMKQd9kTS8cvEl5bRKEjt
9fnmz+7IZ/O/0fLGaPT////53/j/AIbVGEE=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
1f/zv0PoonPfp5qX6P/L/wfO+wY9
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{-0.1872642107652599}, {-0.1872642107652599}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"10.914470698646268`", ",", "58.28380475929709`"}], "}"}], 
         TraditionalForm], 
       PlotRange -> {{-0.46753655647094366`, 0.02613724549200172}, {0., 
        10.146533299566935`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Versicolor\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
9fnmz+7IZ/O/0fLGaPT////53/j/AIbVGEE=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
1f/zv0PoonPfp5qX6P/L/wfO+wY9
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{-0.18803253515151963`}, {-0.18803253515151963`}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"14.422445251730903`", ",", "76.70186034618459`"}], "}"}], 
         TraditionalForm], 
       PlotRange -> {{-0.46753655647094366`, 0.02613724549200172}, {0., 
        10.146533299566935`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Versicolor\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
9fnmz+7IZ/O/0fLGaPT////53/j/AIbVGEE=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
1f/zv0PoonPfp5qX6P/L/wfO+wY9
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{-0.1905150259859024}, {-0.1905150259859024}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"18.778468298785018`", ",", "98.5668621233822`"}], "}"}], 
         TraditionalForm], 
       PlotRange -> {{-0.46753655647094366`, 0.02613724549200172}, {0., 
        10.146533299566935`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Versicolor\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
9fnmz+7IZ/O/0fLGaPT////53/j/AIbVGEE=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
1f/zv0PoonPfp5qX6P/L/wfO+wY9
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{-0.19405105038167328`}, {-0.19405105038167328`}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"25.279370788122`", ",", "130.2717544604925`"}], "}"}], 
         TraditionalForm], 
       PlotRange -> {{-0.46753655647094366`, 0.02613724549200172}, {0., 
        10.146533299566935`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Versicolor\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{{3.8028024279308996`*^9, 3.8028024761709175`*^9}, 
   3.802803634256821*^9, {3.8042821692363653`*^9, 3.804282174335106*^9}, 
   3.8042822083720083`*^9, 3.804282512701232*^9, 3.804283293597712*^9},
 CellLabel->
  "Out[261]=",ExpressionUUID->"7774a327-3305-4d68-a83c-12321c0aee24"]
}, Open  ]],

Cell["\<\
Gr\[AAcute]ficas de los modelos log\[IAcute]sticos en cada iteraci\[OAcute]n. \
En la etiqueta se muestra el valor de w. La l\[IAcute]nea vertical representa \
la posici\[OAcute]n de la frontera \[OAcute]ptima, mientras que la \
l\[IAcute]nea horizontal representa el valor de probabilidad 0.5 a partir del \
cual se calcul\[OAcute] la frontera \[OAcute]ptima.\
\>", "Text",
 CellChangeTimes->{{3.802803324513771*^9, 
  3.8028033884917307`*^9}},ExpressionUUID->"831566e5-90e2-437d-bc89-\
0c37e6783253"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"PlotLogisticClassifier", ",", "ws"}], "]"}]], "Input",
 CellChangeTimes->{3.8028023700337048`*^9},
 CellLabel->
  "In[249]:=",ExpressionUUID->"d7822e1a-4722-4c19-9a35-8a66fbaea761"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQfePnP/60b9v3M4DBB3uDMpfEuaqH4PwI7lmRjCwI
+RQFV/vejQh+QGd79MmgjXD+hfI3gnqum+B8hg1KGxbkr4TzX/Ct+vpx8Q44
f4rXbK6lPDvh/FNXdlsFBx6A8xP+8q0Jm4aQr9h8V+3hWoT5IfETdSVXINRz
3FIO48hEyD94XZy0u2MXnP8hdWLv4WsLcboXPTwOOBtMvX1vH8K8pGmBQT8R
/nmStPAkpwcivCxK7pTaLt0A5y/w3P193qypcH5OveKqPvf9OP3D0/t9iuLi
wzjDa4J6anneR4R/IrLKjjDN2oczvu5UC/LNW74Xp3sVor8tvvR9MpzvsMtW
5XPPEpzx0TDlTL/UV4T7Y26cvub88SBO9SfYu/YKpGxFhIeNQOyvebsR9p+Z
sSL29xY4v6vFZMHkvycQ8c9y3u2C6hqc6tHjAz09oMvPuGv86QcHQv+K8ytc
/GZvg/O3BO52avPZA+cDAACbH54=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQvYvz04qCJ9f2M0CB2tEbvE+yL8H5/8/FLLrMfx3O
n7hl5qW4T5fh/LjJh0usLiP0vzP/vlTz7gU4n/nlrgd/DiH4U+wqPKLkz8L5
kuciqq8vR+j/Nu97Pof0GTi/5a1aN/N3hHvS1ipuTm5DmJe1Tzbdb9oNOP+z
iOQvnncI9bO2b/rYknEOzlfesTLPf9JVON9ETOu01RSEffwiopcF2hD6Pa5e
mHVJ+BacP3Peq6PX7iDkGSSMJI1TEP5ZlhrLa3QDET6z8+5WqYrcwClvv32p
e7AWwj1ptSIZm/Yi+CtMAw418N+E869xvGssqUGEV2un/QMvfYR7Qm7Wnyne
iODfSw7db8lxGScf3b+vtU6wTWW+AufXvDicbDTzJJzP8+byfyXL0zjDk1Eg
bWH+i5s4w1dbWHCNiBzCvopDZ2a8N74I5zscufLsOTNC/lBK5DPTAoR7s39H
Bk6xQMS/8d/E+T0cCP0Cunf/7RNExHfZuVRVzmfn4fzkBZ+Ez69BmPfsVGin
hBtCPXr6BQA7quIu
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1:eJwVzn880wkcx3GJLld0hehRqSzU6YfK8SjpY0dFWrKky/lVqTw0xoXHpS00
XGSVFGXYiERNfkVOfBaLrWTTDDu/Izq2b6SjH+zO/fF+vB7P/97rTtKppzU1
NDQoc/u//WXyG3fvKnDzIIm+ksaDr2nk+enpCoyTOGacDeeBwUV+xK3bCnxo
PPGmisEDZ8d4r+spCpza5BYewOZBicx6fXyiAkmLBEVEMQ9iP6VWhV5QIGPX
eLzoIw9Mbai9+48rcPK90pDLzIGA6hbLKWMF6hdIx37m5UJijZYwht2J4ais
0/TMh/PDfnYuizrxJMXwraX1AzCyfM/hXu3AB3adhw/5PgTvc/wvpHkdqPXa
Qsqxfwxn2tJthqPbsXzL4JO/Ckph6U4MbZ+UI9eBHTmfVAERVfq3PILkGKfU
lmgNVEK2Lzvth9E29KNKaKeeVUPgPKe0r75taHvWX6FrVQvTzWsiTHtk2GYk
GrI/KQCHsg32nT4yjEmwCDNzr4cfU0M0n8neIM3DmmzOE4IiU3G/h/oG9/qI
pOyZRtiYG+u8uakV92Xk67g0iWH7c0/Z93takcWQ19rWN4OGjru9eZ0U+Wu6
ef4CCdAPXsmj75Di1pykps7MVtgfJparTkmQtann8xJPGUw4zHj/4tqCGuuO
PrlzSA56TomVvbavMTnzH2fp0Q6ovOPf0m/TjM1urFzngwrgDZX271n7CmuL
o/KzGV1gcJlSarzqJUYqXnYsvtkDX6mOHnqrxRjhSKbtzu0D0sryCb+FInS5
ZJQ7+6Ef5NbBlM0LmjDlYrx+3pcBEO/NuedJvEDPGkphicEgWCVtbeZ0CZG1
ciJwC2kITNcuLPfuasDjJuXDI8vfgSff69aFF/UI+0wGdQyGwSB5esey+ucY
9eCpRdSnYXDKJvIbGwTI/bXZIkg4AsFuuL7YD5FpxigXpb+HM9o2UY3etWhI
/hy80+1vGCrkCdO21OCCx8KeyQWjEDnBveprVo20jVS983mjoOQemfYxr8Kl
ms90NbePwcjub8cMZypwozg062ntGEwxbH8STpUh59qTsYYdSkh6ePY7y8YS
ZL71uK9ToATty3dmbgIf9QaiRa6LVWAymTRYt7sQ77ufIav8VUAmn67wGsxD
mmVwd3eZCpLlgZfeyXj4iO+7gphSgQO9iISld1EqHeVf3E4AQ0U1SdVLQd2a
7iLZOQKWjnOWJ6ljMfxy1j4rDgHF5+99vF4Zi2aKMrvpObtOF7XcDolF04q+
xtpMAuLV1Qk5vTG469sBnks2ARMrSlRhzGhkTY0HeOcQIDiyoVgyG4URiVdO
hBQQ4NNkvPWqOgxTu7Lj9pYTkNZiMZIWEobEQF7Wv3OWym24ub2h6L74M7W6
goArokKTcCYdOQ37Uy0rCTimadrXOhuENqx2+qJqAj5FLPNnq09gu5Gw/mkd
AYFxVtK8Xn9MEm6roiEBlWZZMb8z/ZBipzywVjD318+Q3D7rhUHTWu4Jzwkw
lWnXp6jd8bD4QzdFSIB+P8splumGrgGEVD3ntytmtPpmDyC7rez04xcERLOV
8RlqMmaccv5tSRMBmdfEyeOzu5CjjBytm/NOzT91H6m3od8ac60QEQH8MY/V
EvU6HGfF4SoxAbmj1eGv/yDXUW8IVr2a83+UXaAt
             "]]}, Annotation[#, "Charting`Private`Tag$75700#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1:eJwVx304EwgcwPGFipIiLhSJ0osnTdZ6dOpnSHrXqOTEukrS00ZyneK8pctb
8tKkF8bGnWoaebaT7Of9JcaYYY+aFcWJHSmTl911f3yfz/Nd9zODel6DQCAc
/t7/Kkqld7OzZSiqXrZ/zzclzDApmllZMtSu/elW+bQSDG9wwzLvyTBMKY4l
fX93l3if1DQZ2i2r+GuzSgk8CWl9fIIMj/zraaT/VQkxXzIEweEy9J5jXZOM
K8GSTJXvOyXDELs8PethJZwrb7OZMpZh6lfnjlmpEhIqtOqiU3pRh6TflftE
CaEf/X/cv7QXtzyVUyojlLDKZvhhblIPukV8Nl19QAm+l7jfrBb0IDFu3tla
VwkBXVnkj1HduOWBS5FWyxjoO2Bw96QUR0/apuXeGIMwwcpMryApBjuvDei3
GoMcvxTmipEuLDMKSA9tGoXABa7MGb8uNJmUuKpPjYKqdW2Y5VsJLp0R3Qoe
+gROpZt2956WIM2cz+Zf+gRbMugarySd+GGklDHVMwKyR7LCt9ROfD4sSnrj
NAKb82PctzZ2ID2bWbn1zt+wvfqEZMmeDuxnJa640j4MBJ1ju62FYjSabuoZ
Wj4MjEO3OQx7MQY+3/Uow24I9oU0S8fOtqPwYprmtNdHmHCa8/U+2IbRjOMF
L7w/gJ5rAl++U4Qv7eL7Vh0fBP59WpuC3Iqm3sLivlMDwBosUeyxaMH8P525
PMp7MIw9XGK85jXuzTDN/EZ+BzNUFy89s2Z08+tvfmerAKvVLyb8tZuQrtlR
oWUhBynp8uGtixpRrv21V6D7Bpr35rFPKOvRK+EcN6dbBsTEba0P++pwpsnM
ll3eA5YW2i98+2rxSG32dmKnFE5wfTLD62swNrTWYbRHAobJKnuDmmrUfX6H
t3RVJ7jmKAsaaquwxv0Cz+aaGC4fxfXF/oi6Qcu3v2WJIGAh+XqDbyU+mzV3
N619DYNFrDqmbQUOu4zdJg42wi8TuUl+G8rRw0fQYE+vh9FcT9VpawG+Ui1v
Vu2shSHH2ZNGc2Xo2+eYaKZTDVMRO3fUTZXipiTPfMUZISQ+vbDYpoGHxqPe
otLGl7Aw9v5cOnDxrorwKu+xAMwnEweEjkUoviL6cm+6DCiU82U+AxxkcZhr
TC6WQrI08LcPEhay0pfsSHXngRPjiRWWZCNhkrpub+8ziBijmmfopSHxKIla
71wE+uMPf0hUx2BV70bm7KFCKA5lf07lxyDvcqdrslMhHFQ9abtHj0FFpVa6
FakQ4tXlt/Lk0Ug75DF7fnUhTJjwxkIio1CcNc5zGCmAKs9Nxe3z15EXeG3I
JKEATjcab0tSh6DYzYD/RwsHmG0bh5j0ELR4V7JhURUHxFJybr48GMd3RYmD
yjhwu6nI/GokAz0a4lrcHnPgpIZlf8d8ELJaszT2MzjwJcyAlqI+g6xYoSTU
kAOBN4lijpyGNMFAMkmHA/wNj6N/jfRH4kHHY7PzbIj3N6J0z/sgLYH3z4Mh
NlhKFtakqY8h4ZKmnWUFG1Yq4lxjIo+iR4XJhAGPDe9N5rT65w8gUdDJ0Slg
Q1TKaPwDNQVpDeF92qlseHSnOXl8fhd6kNO89W+ywUHj5bJnajtcsSSncm04
G7ifvMza1euQUC1YTKKzIX+k/Krod4pQMTNlf+QsG/4DJ+qWuA==
             "]]}, Annotation[#, "Charting`Private`Tag$75700#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {-0.011417560188543573`, 0}, 
       AxesStyle -> GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{-0.19482059378655128`}, {0.5}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"w = {3.23507, 16.6054}\"", TraditionalForm], 
       PlotRange -> {{-0.4074598800537683, -0.01950005651232367}, {0, 1.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
       GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Versicolor\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Versicolor|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQfePnP/60b9v3M4DBB3uDMpfEuaqH4PwI7lmRjCwI
+RQFV/vejQh+QGd79MmgjXD+hfI3gnqum+B8hg1KGxbkr4TzX/Ct+vpx8Q44
f4rXbK6lPDvh/FNXdlsFBx6A8xP+8q0Jm4aQr9h8V+3hWoT5IfETdSVXINRz
3FIO48hEyD94XZy0u2MXnP8hdWLv4WsLcboXPTwOOBtMvX1vH8K8pGmBQT8R
/nmStPAkpwcivCxK7pTaLt0A5y/w3P193qypcH5OveKqPvf9OP3D0/t9iuLi
wzjDa4J6anneR4R/IrLKjjDN2oczvu5UC/LNW74Xp3sVor8tvvR9MpzvsMtW
5XPPEpzx0TDlTL/UV4T7Y26cvub88SBO9SfYu/YKpGxFhIeNQOyvebsR9p+Z
sSL29xY4v6vFZMHkvycQ8c9y3u2C6hqc6tHjAz09oMvPuGv86QcHQv+K8ytc
/GZvg/O3BO52avPZA+cDAACbH54=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQvYvz04qCJ9f2M0CB2tEbvE+yL8H5/8/FLLrMfx3O
n7hl5qW4T5fh/LjJh0usLiP0vzP/vlTz7gU4n/nlrgd/DiH4U+wqPKLkz8L5
kuciqq8vR+j/Nu97Pof0GTi/5a1aN/N3hHvS1ipuTm5DmJe1Tzbdb9oNOP+z
iOQvnncI9bO2b/rYknEOzlfesTLPf9JVON9ETOu01RSEffwiopcF2hD6Pa5e
mHVJ+BacP3Peq6PX7iDkGSSMJI1TEP5ZlhrLa3QDET6z8+5WqYrcwClvv32p
e7AWwj1ptSIZm/Yi+CtMAw418N+E869xvGssqUGEV2un/QMvfYR7Qm7Wnyne
iODfSw7db8lxGScf3b+vtU6wTWW+AufXvDicbDTzJJzP8+byfyXL0zjDk1Eg
bWH+i5s4w1dbWHCNiBzCvopDZ2a8N74I5zscufLsOTNC/lBK5DPTAoR7s39H
Bk6xQMS/8d/E+T0cCP0Cunf/7RNExHfZuVRVzmfn4fzkBZ+Ez69BmPfsVGin
hBtCPXr6BQA7quIu
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1: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
Ycvybz1eJa7/D4HjuQc=
             "]]}, Annotation[#, "Charting`Private`Tag$75812#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1: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
LR5YmPSA/wHJ2s37
             "]]}, Annotation[#, "Charting`Private`Tag$75812#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {-0.011417560188543573`, 0}, 
       AxesStyle -> GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{-0.1908474028627833}, {0.5}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"w = {5.48456, 28.7379}\"", TraditionalForm], 
       PlotRange -> {{-0.4074598800537683, -0.01950005651232367}, {0, 1.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
       GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Versicolor\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Versicolor|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQfePnP/60b9v3M4DBB3uDMpfEuaqH4PwI7lmRjCwI
+RQFV/vejQh+QGd79MmgjXD+hfI3gnqum+B8hg1KGxbkr4TzX/Ct+vpx8Q44
f4rXbK6lPDvh/FNXdlsFBx6A8xP+8q0Jm4aQr9h8V+3hWoT5IfETdSVXINRz
3FIO48hEyD94XZy0u2MXnP8hdWLv4WsLcboXPTwOOBtMvX1vH8K8pGmBQT8R
/nmStPAkpwcivCxK7pTaLt0A5y/w3P193qypcH5OveKqPvf9OP3D0/t9iuLi
wzjDa4J6anneR4R/IrLKjjDN2oczvu5UC/LNW74Xp3sVor8tvvR9MpzvsMtW
5XPPEpzx0TDlTL/UV4T7Y26cvub88SBO9SfYu/YKpGxFhIeNQOyvebsR9p+Z
sSL29xY4v6vFZMHkvycQ8c9y3u2C6hqc6tHjAz09oMvPuGv86QcHQv+K8ytc
/GZvg/O3BO52avPZA+cDAACbH54=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQvYvz04qCJ9f2M0CB2tEbvE+yL8H5/8/FLLrMfx3O
n7hl5qW4T5fh/LjJh0usLiP0vzP/vlTz7gU4n/nlrgd/DiH4U+wqPKLkz8L5
kuciqq8vR+j/Nu97Pof0GTi/5a1aN/N3hHvS1ipuTm5DmJe1Tzbdb9oNOP+z
iOQvnncI9bO2b/rYknEOzlfesTLPf9JVON9ETOu01RSEffwiopcF2hD6Pa5e
mHVJ+BacP3Peq6PX7iDkGSSMJI1TEP5ZlhrLa3QDET6z8+5WqYrcwClvv32p
e7AWwj1ptSIZm/Yi+CtMAw418N+E869xvGssqUGEV2un/QMvfYR7Qm7Wnyne
iODfSw7db8lxGScf3b+vtU6wTWW+AufXvDicbDTzJJzP8+byfyXL0zjDk1Eg
bWH+i5s4w1dbWHCNiBzCvopDZ2a8N74I5zscufLsOTNC/lBK5DPTAoR7s39H
Bk6xQMS/8d/E+T0cCP0Cunf/7RNExHfZuVRVzmfn4fzkBZ+Ez69BmPfsVGin
hBtCPXr6BQA7quIu
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1: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
1k21aDMscq5kMxPoj/zrb8zVYHPWppBoXiZ0+DhW6ObX4NuwnOE1wkwoOC2a
/Vu6BrlFJbl7DjKhR0/tDW13Dc4IbH43IseEaZ2zE0WCNfhfc4PBrDwTJI/H
SLhsqEH18bVi7IeZkKa4Jp0yWY2quZlN+48y4ZHI2NP8V9Wo+1xCTfkYE24t
pD6w31ONc1xNf84ZMUGu0TD8vFA1dq391XrCmIj/8G+IM181WrGTXaVMmGC/
3+a+K1s1Mv/2Xp42ZcIJF/4798arMFzsqtg5CybwjkY6p7yswpt3rrTtsGNC
cccdzfd7qnByoKzpzWUmXHkiBZ+EqjDWhL474goTJJwH1Sb4qnCseucD/atM
SGQ9cpTBVoV5v9t9u68xwV9jXnZ1vBIvlJ1c13iDCYZlzruEsypxVuJLwl1P
Jsymmi3bSVai8KX8J/r+THDUoFPLhCrxmkaL3j/C1JGzJVx8lWjasLiuJIAJ
dYL216tZK7EujxTHG8iEyLhLn3k/VuBJuTToC2bCvlDf/u6kCqwN3TzD+4Co
1/XVK+WtFbgm4fbOn/FMeL9RJjiGowIXDP0Fox8zwTQv//zXf+VodsboxJ4E
JqhMFgs9ZpSjuWK5jNETJmw4Xxc3312O/b6u+k+fMiH7zIDfq5ByjPDwoLOn
MOGr2h9LvpUy/PzXxfpMFhMmD7htW7NUhgZLta+7/2/h8b7pmTJseZx0RfMV
4TX9JxrfleE1w628+7IJt2YoXK0tQ79HMvrLOcR+GehtbvIuQ8n+1wvuBUxg
2D5tv/arFMNK3x1gLSN8etN9y4VSVIpgpLn83xqB6senSpEq4B7TTZgper1s
+3ApSjZ6fI0tZ8L8l2MZzVWlmOmRGSpQyYTFa5O+ArdL8bKai+imGib8uKt0
pPVHCRo3SXGkIhOK1P1JaxklOJC/bPeH8JXVjqswXoJ2L87JWTYy4YOfdUYN
pQTNmsZPczcR5/2+7+biohI8Nh/r597MhKSwlqnnV0rQ49l/VlJtTDgWb5Ti
9b4YH3RFJBztYsJv80TlcloxVghxkYMJl/F9pC72FGPtonUqmbD0k/+4XGuL
UXyQunClmwk8zx7fdkosxiS17yEJPUwYT31namJajEcibL4P9zEhIs+FfV97
EXY4rFL5KEwYU9cKiK0vwkpzLtUzhBVJwn+Wy4rwPHO7bjzhT0s0RuuLIowt
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
/oI=
             "]]}, Annotation[#, "Charting`Private`Tag$75924#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1:eJwV13k8lF8XAPBJIdoQQvZKWmizh2NtoSJJ2SUhlagoypolUiSUCAkpS2Rf
cuzJOoxhtAgh6wwlWn703vefmc/3c+7z3HnOc+65d6TsL5ucY6NQKMvIx/+/
B97Qo+Lj+/BZqM2Zn0ss+BOnvfzRoz5sHq5Y/EHMfzPHIya2Dyu/az7+TnxI
N9gi8kEfsqlnv2MR59EUNgeH9eHX0M/rJogD5h6WuHn1IbewnW4/sbSSSf9B
8z58cPjU5gZidZEqY/1Tfeiyw9a/jthsaVudzsk+PL+g9KGGOLxxWabG8T4U
TDYIrSL+bpbvvu9wHy6Ev24sIa67zsMuodqHkeVtvS+JHcrad8wL9aGK1lW5
COKLD3aZNQn2YaBE7vpwYo/zUf5P+PvQ0+LLfChxiLAJXZOnDx8dWV94mzjT
i+4bytmH8FSP6ybxtOqnTqF5BgbeoomcJ/YsH7++n8bAXHePMh1i32iD1DWd
DPyAXopaxKEuWa1f2hmY+vVDjgbxY5FLUkHNDBR+mvRQhbjCe6a5tYaBIXVx
e+WJKfsXxGzyGLhYEVomRBxWsaLe/x4DLZMK6yYWWaAgOzRy/S4DParf/fhG
PBCDnJfDGBgmu05yhFjF1dvQOpiB3IdkLn0hHpWc6VL1YSA1Z5hBI9YL+Tj4
/SID5VTZvlcQLxm/+edwhIF8tTorwohfvY2UsjJg4JcGp7xg4pPbL+meOMRA
C6F1pwOJs5fLhmrrMdDEsTX+JrFl8dO14uoMLGM3G71EXLoxTKx3BwO3MHcm
HSe+Omq7//AqBoZXn7EUIA7hHIox4GIg003Hj5f4sawD05CTgWdGOZPWEFe5
OD87tpyB/wnKtLITr2S5cZr+7UX2UzPjP/9jQeJCAM1mshdj89O20IkbVqZd
uNbSizv3DblEEjO2yTR4vO9FjoWHn8OJJwwyxa+/68UbhloGIcQ897I7vep6
saLRmdeH2IK3SNmvohdzEzaYuRAzhRuXh2f14p59Vfm6xBt2jCUk3+1FT3kP
z9m/LBDSss3xCOvFSItLzyeJRU72VBmG9qLgFFfTCLGoX/3gQmAvXtGm/Ooj
lqSlbDX27kWbpXuzNcSyN80LKOd7scXDTCuKWK2lufnMgV4Mtdr6fQvx/gHt
T8p6vXj2wca/4sTqP0un1+j0onsq758NxJoSL3jKNXrx9eL7Pi5inau3zfgU
ezHjEV18+g8LDDeqD9Vu6sW3UWff5BNbXcj5vWlZL55+pP1wLzFF4BmbxL8e
XGOBbduJ06piVoks9mCsdc+iNPEU7y0xnt892O/1WHM9sU+pgfZ/Mz04ofxV
68dvFiSxj93pHuhB3MWhnk88mCwtFFzdg1VUkbTNxCGHBaX8q3qwYd7KYyPx
9h9c229W9iBf8Uk1PuIrB2b3u5f2YKDetuR/v1jANo221nk9+D03tKuPeLOa
9QvFlB4UHTfuvEvs2P1IadSPxJdoBSMLLPjt7r9Q5NODH+MUZvuII9adLw2+
2YM+P0PF2onzDdTUtlzvQY49aTrFxP9Vf9JwcO3Blz/nK4KJH+RI6Q9Z9eC+
0TxTKeLKkKwT/ao96K0h4GAwz4Jjm2P4c5VJfmL2HlUnHqy5RfdR7EEHlWEp
eWKOxaOnxPb04PMt9+/xEh+/OmNhJduDC6dLXHp/kvVmq2j/QbAHn2ZkSNkS
86qiW88POv4M+Z1qPccC7rtHzufN0lEpaQPvUeIVn/vOhLPouPlXmpM68S//
ORPNSToGxoe2iRD3N21TzBii49/9ZTd6fpD1eTrmt0cnHXW3xMofJta9cT5Q
4DUd/4ntEt34ndRL87w3K5uOfM+qT3ASK4kGXX3/io4+T/Zd/jFL3kd1koNP
Bh0FHcWPtxDzrOw+MPKUjj/0kyq9iD890lxVFEHHxAM6aztnSH8sWR9j6kLH
90daLzuzWMCXJBZ0wpmOv+XNz5sQ5wZtvWbiSEfblFJ9deKx4/tNje3pSGU/
mbGO2GLKnv+IBR3ZE2vYipgs0JJ6E6NrQMdp1dfsf6b/nw/j2L3b6WiXtXn9
xSkWZLhbBO+RJePp3kImxLqnHTx2y9Cxc9Olv8rEt7bcOCkvTcfgajfz5cQs
TBbYLkJH/9EZt8eTLOieY8ZKcdOR7cL8cMUEqVebe3E8E914UsL23ugYC7ap
RmgOf+vGJCcDkwbiwvV3R0tGuvGWU/i358TNTXeUbAe70UT9V4Ad8cLeoJ4c
RjdmTi6/3PuNBcacNwUN33Wju4ntVMUoC5bnOccFp3Wjxlufq9bDLLgf7qRp
ntqN1zsrShSJRc45ju5M6cauVavq1hDvFnFQ6k7oxpkrj+XefiXrM8i2R/ph
N1pGeB4WJi4+bSZYHdCNnMlLJo2DLHBephf3x6Ybd4Y+MJjtZ0GcGyr+sOrG
I73CP+uJ67+o0SctutEo9ILDY2Kpqj38n826UX90d5Qm8QdviWg81o3RB+PW
3/nMgiNzf+4FaXbjEnLfXveJ/J5v+cFrxbvR5npY6TSDBTZmcls4Rbux5bqe
VRlxRENm/T/hbvy9cUd5EPH48+TlswIkP4tcz0WIU+3uBdDWdOPgyw/iur3k
PPDB2efxIg2/HEm8EEIn+WuV8JD+TMOmq+EZtE5yvxk4suUjDQ/c61v1iFia
326TbB8NP8TzSlsQH7FM6ZSj0/D93+e2X6gsSBmXlFdto2FWERf/aAcLDDik
vxm9peG1vnH24TayH8Bmc5+nNExQ7udLfs+CPWf1dvsn0PCwR2zDKeLGEAfO
2/E09Ldw28hDPNOWVnQnloZ7zhfk+jWxQN9qC1/MPRqeWKbpaPGO9P8bMi2v
fGh4MJyZs1hP6vWNrAbDmoZ/WeybfyHJ93uN1teWNISXUdJPiQ8OmliGmtNw
caA5RZv4GI+Pl9JJGk6ygoTDqlhg7dpZFHOEhoUi1mO8b1ngvd1b/vh+GtKv
T1pwl7OgKLVFolmIht/6/C0eFJD9u3wg95kgDcuD3b9uJq7s/KnhxU/ys2Wa
VvKGzE+RtJLloaF7/v6xj/ks6LK59jiEk4bRsz8bRfPI84mI8erOd6HZI41k
/2yy3h+6slXSurD/nF50cxrpV0AJK+3swoa6CG4T4huTD9YVdXSh/KD1COM5
2U91i0RzW7qQq8wDh1NZYDf3Vymlrgtnp/RZcymk/k6GXQgq6MJ8vbt35hNJ
/xZK6z7ysAsv5kc33ogh66te0fLwgy4ccspcmHhI1ovbu0H9yC5sl9NwsyJ+
2jTB1LzbhUd2aShoRJPn9drDted2F7ItNU//jGSB64cqDYGr5PcNiJ/UvcuC
vsS+jM8mXah29/S2gwHk/ajbjeQad6Hcy1+O0f7/75+jm/yPdaHG0w8Zn/xY
IC82lyJt0IUnLlJkXX1ZcPvp2gQn7S5csbqCK/gmC+SSdCNnd3Xhzee+/AEe
5DyanHOdfU0XxskuU850Js8HCsU93F3oePvJP6oTOe98KZ97sbILd/X9Sfjl
yIIeiSZ3gxVduLa64bDeORbsSBm6EPm3E7mfrjnadoYF9JQNdsITnXhQ+PCd
NAuSj9SAQ3LvOnF0x8gGK0PS3+azq1Y2dOLDnbv77AxI/RsyFIZrO3Gal6Lv
cJj0izl5qYSqTjz9VU/A6SDpjwc+/V5Z3ImrtkY6WemS/XlcKWs4rRPDKZP6
K/aT/rtnak1iYCe2lkytV99G3nfIhqDr/p1Y6CKTwSdL5vug88fEtxNX/s1+
8U2G9MPb8aNc3p2YnJ81E7GZBZH0A3jdvRPnSrTt6yVY4Ob1zO2EXSdycG/6
OyzAgr01ZjRuzU50pCQf6qeQ+nm1pLVKvRPXnZXzi/vHBLeHGbmr1DpR0PCA
+NElJrw+Nx+2WqkTi6tK7xf9ZcJO7jittfKd2L0jbcXVeSbInKDn8Ip3ok5Q
b1LSJBOER07cEVqi4un01ZSsbiaotP/9KfQfFZ2bV8TspDHhdMnzs8J/qNhl
IWmS3cmEuLAfmiLzVByy89bLaGcCn/zDnxuZVCxusnl3u4kJq6932Uv0U7Hm
5K+LXyuYQOE6riFTRcXUMpm1Ms+YsHZ02v5vBRWXpC/91Ulmgmhd+B1qGRVF
qjMvWT9lgrJPPc27iIpr6zXo4fFMcJ1VdunIpmJu0zKbdw+Y8KlP/NGNBCpG
q8YV1wcwofTV1EzzDSpym5WzVdgyoTE0TDDFk4ptl42zA62Z0O0go+5xjYrs
56evH7RkAkvcLlTCjYqbPBSdm8xIPh7SxK45URE6Dhx/cZQJMTfLDcTMqOi4
WGbbo8aEy0fupF3eR0VVR426QT4mSFY9qzm/h4pGnvsKr/Iwgbqrov/sLioq
RCu8Y1vLhL3rmUKnd1AxwrPjoBAXE+b7TtzT2kTFFnUTe8l/03DLScKTdz0V
+R1zXFMnpoGP/VKk40gH9od7ypjjNFwbS35vMdiBPTYR6WGV00Bv6Vpu9LkD
KffufCsum4bH0So3lOkdqH/+xwvOwmmQkFxxZmVDBx63jKgPyJyGnfsT9r5K
60DB4N5SetQ0HHR/T58+24E6+kdLR22mIUR91O+ubQdGZrFEHCynoZ5z+fZt
lh24W8BJ7fOpadBJUvd1MOnAgenM5FrjaVBveS3zUYvEOTdGm+tMw94tcdeb
xDow9kV1WOHmaRDtsxd+3tuOtg6xh9hGp8Aiza9Oi9aO07u0nViDUxB/OfFS
f3s7bkh+Wd37eQoEOXpqhBvb8ffnK+uf0KeAd99hl6jCdlTosHo3XD8FHPd2
Vfg8aEdZstveT52CWa3/rE4btqOhqfZbYYspWLpm78l9sB0fed22vnVyCrhf
NkVW6rTjSHjYeJ/xFEjzxtZKqrVjpZtScfDBKTAdlJMdl23H4ICJimSFKSgN
sP3hxdGOL8s/Gn1YMwX+tbVhCTVtWNWoyDSunIS1emHF/cptuML9tOzdlZNg
92ys6sO+NiyWObg4xzYJBUsH3/XsasMMzewC88UJOF3GwWjf2oaMZ3GV679P
wHP5oN9VG4iv63IYfJwAFWE/9eSFVqSemWx4mz0B9sxrtbYlrchmORhTZDgB
xY/t2geUWnH1r8mT8V7jMPr55YGQva3YLXZkQPjKOAhs+lG1Q74V37Ryc8a4
jMO1nODXnlta0UPcRtbDchz21b6KWs3fivwr9Qon1Mchb3LORGW2BRvFTk6m
Lo1BlmZYb2RWCzbvPORh4DMGKcP5A5qSLRjx7xmz3Okb8AcezRcSbcZPIVK/
X0mPwB8TXdO1Yu9RLfXD940vh2DTxoJZ25VN+Kl5xdOS9C9AV7h0VI7jHdq9
1ccg6w/wXv/ZczNmA6aumF5r9l837A7f1ZrwsR4LFW5v8zGiwp2p5o4nvfW4
0kaE3wmoMHDMkRZPq8cn0/VelruoELn+6YdHLfU4H+vZcHYdFZiJ3OMPK+ox
m/NwyEhyB2S/HmGPSKhHWWbBOZGMdthGT4BblvWo131RM6K2FaQlVxZYfaxD
laLypa3q7+GUyz0Z9t46nPI9WS4o8R4iCvme5HTVoZ2tW4s423v4eUgsYOl9
HY611A94NzVBk/teo5TSOnRWkXOzN2uCy3VWk19j65Chz3F80vMdVDrmb7pg
XIdzYUGMyuYGmM1TerT+SB02HTWNas1rAJm/FdyVB+sw4pXh4FxcA0RGNs6u
hjo01lguF3m2AexLP2KuXB2WDpveGF+sBy5uDqvv3HU4HEfr3alcD2Y5FjFe
DbXo9m1cPrOiFjol++Yv1NRiZfJXBc2MWjgSc8rc5m0tbuZKjBiLqgWdm6bi
ukW1qIBi3N6OtSB/+Fjm6vRaHGi23hrJVwscI9qVyUG1GBFtvtzLtQaKRLcN
N+jWYop8+keKYjXsjnpxoBRqUfSO1sxq6Wp4tVzm5av9ZH7V4n871lVDyoS0
a+S+WjTmaqzRJ8esiFLRX6c31WJp9POWYU0EB1Oe1VNstZhn9tJQVKwK+CMW
9vHV1qBdmLFU01wFWDsju3BVDUq+KQ0R6q6ADL3QXonyGmzi/ucbXlAByouC
N+Xe1KBszb33XVcqwMJVqfZQKvGtR/Lfv5dDirGHsV9gDT6W9bA+9bsMdgr8
uDilU4PGsQm714uXgsdsueYPzRr0D0h/4rSsFKraAnn+qNVg6YnKuA/DJWAU
wlfIua8GnX24hjdml8CVhT1/pTfV4Gnv9h1c6iVQ2ucWZr6cjN9Xr+h1phj0
kpjpjXXVKAvSWey1heBin/LNE6txzC/W5HNGIUTJmGzbWlGNTX9snOh3C+Fj
blF26JtqXFkUbiNjVghX8FbBoWfV+Gsj385DUwWQMsBd0+xbjf4r9mW4iRfA
ovTWT+2q5Pqjr3cFxueD9DeGmJ8iGR/tPrwzMB8OZYXb7tpTjVGJn/TnXPIh
Zh9zKFK2Gm8YF8Uz1PNhp17RuPGGanSeqTo5N5gHhc0hzPRxxMeSpzpt9uTB
JSPcnGuLOKDSIOHelAN62wVCUk8h5rlLNco9zwFR9gvf4oyIh8v2CPrmQGu5
4Cs/QNytEPXivEIO7JRx3XVcApGqdEJd8Hk2TP0nqjbXX4Vui9oM2ztZ4PLK
20jNpgr9I/tWh7m/BJ1gap68WRVGDTY/dzn+EkTsZPg2HavCvMsT2Vf2vIRm
ga7uVZpVSPH/duXnbCZsC9hm8VmsCqm6jXY11zJh7BTDwf/zW8zj+fzWKOAF
OLIreTdavcWogTxfhaJ0+PXatmKNKYmHd/EdfJQO4RZh/5kavsWZ6yUiAV7p
kPv6k+9X1bfIk0h976KZDvPmt29TNhCvzQpf15wGIbnUCLXOSuRZND/qOfYc
0k9dSM7Vr8SUX92KflqpoMQWO/BTvRLzouxMZbemQlN2lZSGQiUaZ1089WNN
Kkwt40trka5EyeuiDsyPz0AhuzRz7F8F5j0P57nm9Yyc/zneSJdX4O7+XrYn
5Skw/DKlPk6+Aikrrqp7ZiYB24vKr+4yxOzG3N7+SSCZxmA7Kl6BWgHZjnmn
k8A6iUd7+doKTOle8amAKwl6ov3fXp4ux+qtOzTXuT6Fppt2xYeyiYfbm4fJ
v6uco5KZf7aVo93SfktfjifQaqD+ji5VjilDokkOw/EwcfD0aJ4wGZ+/1dmz
Nh5kdKI2O3GR8afrcKNfPKQoUZ7RxsowpdSlxenPY4iWGIjPflGGlFMXbzJ+
PQLP2eS7NlvK0C6wP7R6fRzsrj4WZi9WhtWNX+wOLsTCxP3FEEeBMhzgxy3f
P8SCzU7LQFf2MpTU0Wp8kxoL+k6CXr4jpTiQm/Dm475Y4P8c4ZiUTtyZZ/LC
Kgbym7y0+7eUIqXu3HvOd9Hg8kgWhsRIvE2xoSI3GjY79qqPCpB4/Z3E+3HR
8Hi5ogqTvRRTXkkejHKMBn/NGfmlkRJMubrt+j/OaDhW6CgqnlGC/vY3N10y
fgBTyScWrGWIf43wi0xHgp1mT3ehWAlSzu02kquOhO5Pp9+sEiBx0sR9H0ZC
pbDNpbLlJM5LX/VRLRIiHjp/5R8sRn/mjw1uEfdhR6hPR0tCMWrxiqs3qN0D
F9cXL1R5i0k9f5D6XRMO/au3B0etLMZq3alk1cRwMMnKtv/2rwi1srZn53qG
g9pYvlgsswgpF96YKO4MBy77yoczLSQeYbc5Jz4MMk92+r0IKUL/z0P23L53
4Jv631MC/xWiVijF8aVLCIzJua2nzBUiZZqNl/8osfhI+8QkiUeKmKfvIqZ0
6Fd/JPFz2X/VfgbDWH3qvgsVJG5nqSgXGAwTRwzW1XgXor/S6pjlz4OAaRXf
ePF3AVLE14cp/AsE5tG1gadmC1DrinX9hlFizdsaOuMk3qL6dWNbILAkLxVu
6CtA//kO6ZCEQJgZ1kqtLSXx3iHBftVA+H5xzEfoRgFWj+wevX4rAOZvKSvW
z79BSnbHTw0hf8jT8KcuY77B6hb+QNll/uCy1HQBRt6g/3H5DqduP/jiZ5Fa
TiM2k1hj7uUHTYE+6/LzyPUDnMpajb6QcKdu/KkLceObA7QLPqAVY5R0vT8f
/cuflBd+9YY/po9Vi+j5SNni/kfwrTcUCgx2f28l8dQQk7w4b9j26Moq1wpi
1xiBUANv4HsSe8PhMfGbM8GVhV4wkvzR5LgJ8YiaCfvDGxCe5cS5ozEPKaJU
fwEPTxjQ0A148DYP/dNOetuf9AQlqvjfhUISN1o591HRE4bm6Mz65ySuvMX9
xIIHqGrq9dgEEGu2Dx+95QFjVMn0aHUyvrjqhPr9axAxVRA8d+41Uq6Mvr5I
vQIqvBe8akyJC6yFGEVXYFhR+tJ93dfof/X8kHPCFdjvF2UqK0XcvaPlt+MV
mOC9tMnqUy5Szpsfo/1zh0PKMjV1JsRf5hdUVNyBPfDxf9GQg5TfrTsWgi5D
s6FCdugu4v1WCmctL8N9AarlLQniEz+/sO+9DIIvOSvO/csm/Sl9OfOLK8hS
Pb1UkHjZ7SZtTVc4In5y/rMmMQY2l6+4BNHlvDOymllIkR+OkyxxAbOgnGQx
eeJ7/6V/fugCG48dNuITJ14rJfzezQXSBv1z/y6+QsqN46rbd7hA0cqZi+1v
iSWyutamngeGWfv4VQ3iOwEsucfOIP4j/GuV+kuk3GdoK6c5gplVu4n5DuJf
u+LbbjtCZANv7Q9h4rOJStFnHYHy+HGK7EImUi7raaRvcoQh9Qzr6HzioW67
yfRz8CKkpvecDPHosjPVbxxgt8ivltU8L5Didmr70KQ9ON/ev//FUgZS7u7O
b6Law7Mp31fa08TH98/Si+yBD9nDPJuJZYaqz/rbw9zZ9QcGgogNNLMObLCH
0hz56oLf6Uh5dG3VX8MzoK19rtDiaxpSJo4vc0u2hWije19EacT1v12kPGxh
2LqI+0vt/+NVJqsMbSHEm/3M2VTilZfdQhdsoLkgfc3FM8QzSfVCJ2zAVGbU
0efLc6QoxfHY8VuD4yon4ZSPqUjJjAmOe2sBJcKRevYtxFWRp9riLWClbMnl
zRXEA9W/93laQJYeZ2PmE2KOc3mRuyxgxufFlXxzYl/nFd5p5uA1862ltvcZ
UjSjdIfjTkME3dl3hJaCFK0/9pcTzYA/tNjxdx2xjfJsra8ZJKqsMFpTSHya
clbjjBnkJCRLKMYQV26TyZAxg/YzPdVBpsQhI1naBSdB+lMox6FXyUjRSXjg
QTOFnWs0eRqynyKl9mdIkPwJUHfrG5iKIC4998VM4AQcpV3L579E7FmuZvCf
CbjGZ5k4yBG7PTj6sNkE8rcIxy7PTUSKWrbKK2cTUNKcE9Z5nYAUh2++ja+O
g9blV5swP57Uy9bIJH1jUOWNvbo3kvjDcbcr8sawt8CvLv0iMd/EIacNxrB5
wfRsxFbi1QwDR5oRrPT7l2r+9DFSPsX+SZQwgo77ptJzdx4hpbWej1F3FGxy
lyS32cWS/nDm42ZVQzhlPO6WqEHM6Cmz4TME4++06nUbiadcGzsmDUBH6aXd
PD0GKfyfdpslG4BM1YmUOkPiuayuyZUGMN2WKWGj/JDkextzYeQQ3Jo2EX+4
9gFSbp2RiWs4ABl9HKMnmVFkvg0MoxcHgNpQniPUTuzwoHZP2AHYkiStkXSP
mD/j4qWjB6D92HfLl6uJ9S4ZV/Xqg6bdpn1+AveRIivAF/9DD4JGUrYx1oST
/rxKoOeALjDeriyzbgsj19s+U5DTBbk4t0NfI4gjGOpF63Wh54CWE3MV8Uz6
1MZBHdia+SVtBfcdpIyFH/H20YFmF3HJPRwhSFGoLDSt1AbemQTB8KUApJj+
XG5+XAtyrz7/HllMfKNGUFpVCwwXXrXHuhKL9q1fJ6UFwUtlIc/6/cn9imZe
DAHMCudNu/v4kfp9fYpzK0D1CdncjkVv8v59gxIqNcD6ndCuu0vuSImKE3EW
2g9x7Vu/xbkS83Rw7Z1RAypdKTm13w0pVFqycpMa3Gl6KX7N5zKZX8h27oYa
nGKT/tK56ELW22DS9s+qMOfBZ3dv6Qy5v9B5yFMB56Dd1LR+O/K8nRcS7qpA
8Zan/jd8bJGiYt0s56QCwbYC2j2LFkhp4jKfE1cBaRp77YOl40ipjuKiPFCG
9QO39QJ8jMj97RU4XJVhSPi/FV8WDZDirKGrZagMfvemgp8saSNld0vfMQ5l
SLz/PmJmUY3U/88m6WElUGUrX5O9tIf0Q+EL22qVIGfSVKxjSYrU1yoP+xQl
SJ0ou9YWql1F0eJNbPNVgv8Bh0DkQw==
             "]]}, Annotation[#, "Charting`Private`Tag$75924#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {-0.011417560188543573`, 0}, 
       AxesStyle -> GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{-0.18827585381628498`}, {0.5}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"w = {7.9767, 42.3671}\"", TraditionalForm], 
       PlotRange -> {{-0.4074598800537683, -0.01950005651232367}, {0, 1.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
       GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Versicolor\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Versicolor|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQfePnP/60b9v3M4DBB3uDMpfEuaqH4PwI7lmRjCwI
+RQFV/vejQh+QGd79MmgjXD+hfI3gnqum+B8hg1KGxbkr4TzX/Ct+vpx8Q44
f4rXbK6lPDvh/FNXdlsFBx6A8xP+8q0Jm4aQr9h8V+3hWoT5IfETdSVXINRz
3FIO48hEyD94XZy0u2MXnP8hdWLv4WsLcboXPTwOOBtMvX1vH8K8pGmBQT8R
/nmStPAkpwcivCxK7pTaLt0A5y/w3P193qypcH5OveKqPvf9OP3D0/t9iuLi
wzjDa4J6anneR4R/IrLKjjDN2oczvu5UC/LNW74Xp3sVor8tvvR9MpzvsMtW
5XPPEpzx0TDlTL/UV4T7Y26cvub88SBO9SfYu/YKpGxFhIeNQOyvebsR9p+Z
sSL29xY4v6vFZMHkvycQ8c9y3u2C6hqc6tHjAz09oMvPuGv86QcHQv+K8ytc
/GZvg/O3BO52avPZA+cDAACbH54=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQvYvz04qCJ9f2M0CB2tEbvE+yL8H5/8/FLLrMfx3O
n7hl5qW4T5fh/LjJh0usLiP0vzP/vlTz7gU4n/nlrgd/DiH4U+wqPKLkz8L5
kuciqq8vR+j/Nu97Pof0GTi/5a1aN/N3hHvS1ipuTm5DmJe1Tzbdb9oNOP+z
iOQvnncI9bO2b/rYknEOzlfesTLPf9JVON9ETOu01RSEffwiopcF2hD6Pa5e
mHVJ+BacP3Peq6PX7iDkGSSMJI1TEP5ZlhrLa3QDET6z8+5WqYrcwClvv32p
e7AWwj1ptSIZm/Yi+CtMAw418N+E869xvGssqUGEV2un/QMvfYR7Qm7Wnyne
iODfSw7db8lxGScf3b+vtU6wTWW+AufXvDicbDTzJJzP8+byfyXL0zjDk1Eg
bWH+i5s4w1dbWHCNiBzCvopDZ2a8N74I5zscufLsOTNC/lBK5DPTAoR7s39H
Bk6xQMS/8d/E+T0cCP0Cunf/7RNExHfZuVRVzmfn4fzkBZ+Ez69BmPfsVGin
hBtCPXr6BQA7quIu
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1: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
4YI=
             "]]}, Annotation[#, "Charting`Private`Tag$76036#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, "Charting`Private`Tag$76036#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {-0.011417560188543573`, 0}, 
       AxesStyle -> GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{-0.1872642107652599}, {0.5}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"w = {10.9145, 58.2838}\"", TraditionalForm], 
       PlotRange -> {{-0.4074598800537683, -0.01950005651232367}, {0, 1.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
       GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Versicolor\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Versicolor|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQfePnP/60b9v3M4DBB3uDMpfEuaqH4PwI7lmRjCwI
+RQFV/vejQh+QGd79MmgjXD+hfI3gnqum+B8hg1KGxbkr4TzX/Ct+vpx8Q44
f4rXbK6lPDvh/FNXdlsFBx6A8xP+8q0Jm4aQr9h8V+3hWoT5IfETdSVXINRz
3FIO48hEyD94XZy0u2MXnP8hdWLv4WsLcboXPTwOOBtMvX1vH8K8pGmBQT8R
/nmStPAkpwcivCxK7pTaLt0A5y/w3P193qypcH5OveKqPvf9OP3D0/t9iuLi
wzjDa4J6anneR4R/IrLKjjDN2oczvu5UC/LNW74Xp3sVor8tvvR9MpzvsMtW
5XPPEpzx0TDlTL/UV4T7Y26cvub88SBO9SfYu/YKpGxFhIeNQOyvebsR9p+Z
sSL29xY4v6vFZMHkvycQ8c9y3u2C6hqc6tHjAz09oMvPuGv86QcHQv+K8ytc
/GZvg/O3BO52avPZA+cDAACbH54=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQvYvz04qCJ9f2M0CB2tEbvE+yL8H5/8/FLLrMfx3O
n7hl5qW4T5fh/LjJh0usLiP0vzP/vlTz7gU4n/nlrgd/DiH4U+wqPKLkz8L5
kuciqq8vR+j/Nu97Pof0GTi/5a1aN/N3hHvS1ipuTm5DmJe1Tzbdb9oNOP+z
iOQvnncI9bO2b/rYknEOzlfesTLPf9JVON9ETOu01RSEffwiopcF2hD6Pa5e
mHVJ+BacP3Peq6PX7iDkGSSMJI1TEP5ZlhrLa3QDET6z8+5WqYrcwClvv32p
e7AWwj1ptSIZm/Yi+CtMAw418N+E869xvGssqUGEV2un/QMvfYR7Qm7Wnyne
iODfSw7db8lxGScf3b+vtU6wTWW+AufXvDicbDTzJJzP8+byfyXL0zjDk1Eg
bWH+i5s4w1dbWHCNiBzCvopDZ2a8N74I5zscufLsOTNC/lBK5DPTAoR7s39H
Bk6xQMS/8d/E+T0cCP0Cunf/7RNExHfZuVRVzmfn4fzkBZ+Ez69BmPfsVGin
hBtCPXr6BQA7quIu
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1: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
W2LR7q5Q6Sb05DvF/wM5xKpi
             "]]}, Annotation[#, "Charting`Private`Tag$76148#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1: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
3TL/f56S58oIqMUht5sEcN9LPqjFCEwu1n8q2sxF7d0Nk1ncDp7YnHrqXY2s
UsDlrrwdRJQfWJTA8PjggeQZBqDnk5/CL4N7jC5axwD4rl+5wS6A7PnrKXMC
A8gc9iz4t5GD4v2BK5oMoHT3ok1nFbJnRYeZ+RZG1+uceqqMWylyVGADE/gV
9KNa6QN6XmaUc/8qpmfcqWMohewpoXq48y8W1nCg9hcP7gdcbaF/MYbY2FSJ
P++RqUZ8+/9iI0pZdyOKkRnexenz/MGy/Wp6Horjfnu55+pvbGhhx2UGTvz5
9sa0g78xbkONz/GMeJzb5t+3ZSxIqiuqaygbmd1Uz2EZsyF+u6mYgOzJp+Kd
+guT5f3bxsKGx70u+R/6iVl6nz+fvZmF4noiyZNLWNrsyxzVOdyXU2XKlzB2
yBTo1IpbPvaLyRK2/ODgpSEf3MY1l/MXsbJ8GcLH1XeovpS48up5TFX14Sej
H5nIYS35gtNYxI3Q74fJuIOkrIemsNG7pczfa3FfrqpJm8L8XJnuP0jHTco+
LT6FtX58x2pzH/fOkT3yk5iu+LiF+/cM5HU1YD+OvTu9LwJ04baTm1Icx1bU
5Ku2QdzppVw7xrHYe34H/ZJxT3n8iRvDBmLFCa/v4t7aWdA2ilnsfcST2p+O
LOYycfEH9oUn7IJZG+4zRecP/cB2S3x5cqQCt9kMw9QIlnthV+P7eNybx/pC
R7BF9+z/ig1xn3XL+TaMuSxOtNX2pCHrnRgKHcJCqJYvx8ipyNsvsdt/wzj8
P1us1uFm2fb6+Dcs8eyOG6yfcE/vypnqx/ITUgTPROH2Y6562I913qcRfHRx
VwqKP+zDRL7579TIScHzEdniQcfkgGjPkyDca2IpF+mYenp1dowVbnvS5l46
Zm75W2NCEnfQbf34Hix72SzYLzcZ79/ylSoadpwVY2vIS0IePyXOR8WU7HuH
ZkNwu3IwT1Gwa2THYg5b3CZz5l8omF1cro65NG6akNttClYsxvOWsSAR+fW1
vTFkTB5b5lErTEAWWSPKdGMqT3JEYXEcsme/im4Xpnjg7VO5MNymlLeMXZjc
R4+6dza4Q7zKP3ZiR/7oPgg5invxvRVXJ7bbYyvdMCkWmWHh+Fg71vVaV2Q5
IOb/5T2zWrFmWfDfIwvcqZTh+60YoftYbZ86bmPfX/ytWAnX1v2azWjk0SHh
2BYsOvlD2mtH3Hn9LlHNmEnBptAx07fIiQKpuY2YvvaUfaIy7sNvVRwaMe2f
ZMJ+Ptxshs8VGjE1+Q+mK9Qo5OM1aQ0NmHj1rdQ6TdyniwmT9dhcx3tBE4VI
vL+XJjXqsBdzOgKR+94ga3GkPiJgWb07x2/PhyOb35ZTIWDEhvJ87k7cqUai
PARMLFlEOTkUt8YVpViIdV7/eecDC26Dd5U21RhmKnrKg/M1soptnHwlFnE2
uHYHNRT3VsvPCmyC7dfNoCjcBiFJhRVYeE2t/duDuIteHJWqwIZFzApyD4Qg
W9YlHivHfMZSj9FZg5DLFprVyjB61e6vdzsCkXc/cNldhklH22v8CMEdsF7a
+QWjXVJ5NL8Xd+r9TuMv2NH33zN3MAfgHtH3+Iy1WgkIndzph9cn8eXbJ+zA
YgJX0OYrfDyfAhaLsYKnGT/DPuM2TbQlFGOaf3I639rhHvImhxdjvptf/dIG
PfHn5w6fKsaWeIrmHNw98PzLv3Ivwgi3JAq6Nlzx+dQ6rl2ArRkpWPTb4ia+
SdjKx06bXRKYGHBBltWXLMzHsu3NX29WOeP9I7Sz5WOvQ1PtpF864flKHB/I
xe42cZ8I3nTA14vY66QPWHTn0YloO9wqhAGDDxiRKp+SPmiPHB4yxvEBC2j+
IODo/gTP506usPeY/naR76QNK2Tt6obgbGz5Gbtp6OZ9/P0/aM18h1n6yBIz
B02RhV4SrN5hn8WSPJ3d7+Htndc5+Q7zvcepStswws2nRsjERMhMtW82b+L+
Jj6WgR0c8r7wyv0G3p5uR2EGNsKzvuP7xlU8f9+2u2VgHqGzvvGbqnh+BDkP
ZmCJr1tCFjfO4e1PzH9PxxS3l7PmbZ7E+99zMz8dy5/R5e/aFMb780rJLR1L
n/7q2OGvWo3y8zz/Sjr2P0S3roc=
             "]]}, Annotation[#, "Charting`Private`Tag$76148#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {-0.011417560188543573`, 0}, 
       AxesStyle -> GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{-0.18803253515151963`}, {0.5}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"w = {14.4224, 76.7019}\"", TraditionalForm], 
       PlotRange -> {{-0.4074598800537683, -0.01950005651232367}, {0, 1.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
       GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Versicolor\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Versicolor|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQfePnP/60b9v3M4DBB3uDMpfEuaqH4PwI7lmRjCwI
+RQFV/vejQh+QGd79MmgjXD+hfI3gnqum+B8hg1KGxbkr4TzX/Ct+vpx8Q44
f4rXbK6lPDvh/FNXdlsFBx6A8xP+8q0Jm4aQr9h8V+3hWoT5IfETdSVXINRz
3FIO48hEyD94XZy0u2MXnP8hdWLv4WsLcboXPTwOOBtMvX1vH8K8pGmBQT8R
/nmStPAkpwcivCxK7pTaLt0A5y/w3P193qypcH5OveKqPvf9OP3D0/t9iuLi
wzjDa4J6anneR4R/IrLKjjDN2oczvu5UC/LNW74Xp3sVor8tvvR9MpzvsMtW
5XPPEpzx0TDlTL/UV4T7Y26cvub88SBO9SfYu/YKpGxFhIeNQOyvebsR9p+Z
sSL29xY4v6vFZMHkvycQ8c9y3u2C6hqc6tHjAz09oMvPuGv86QcHQv+K8ytc
/GZvg/O3BO52avPZA+cDAACbH54=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQvYvz04qCJ9f2M0CB2tEbvE+yL8H5/8/FLLrMfx3O
n7hl5qW4T5fh/LjJh0usLiP0vzP/vlTz7gU4n/nlrgd/DiH4U+wqPKLkz8L5
kuciqq8vR+j/Nu97Pof0GTi/5a1aN/N3hHvS1ipuTm5DmJe1Tzbdb9oNOP+z
iOQvnncI9bO2b/rYknEOzlfesTLPf9JVON9ETOu01RSEffwiopcF2hD6Pa5e
mHVJ+BacP3Peq6PX7iDkGSSMJI1TEP5ZlhrLa3QDET6z8+5WqYrcwClvv32p
e7AWwj1ptSIZm/Yi+CtMAw418N+E869xvGssqUGEV2un/QMvfYR7Qm7Wnyne
iODfSw7db8lxGScf3b+vtU6wTWW+AufXvDicbDTzJJzP8+byfyXL0zjDk1Eg
bWH+i5s4w1dbWHCNiBzCvopDZ2a8N74I5zscufLsOTNC/lBK5DPTAoR7s39H
Bk6xQMS/8d/E+T0cCP0Cunf/7RNExHfZuVRVzmfn4fzkBZ+Ez69BmPfsVGin
hBtCPXr6BQA7quIu
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1: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
n5feITllqdKxJ1CxjvEftkfy/wAMOpJE
             "]]}, Annotation[#, "Charting`Private`Tag$76260#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, "Charting`Private`Tag$76260#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {-0.011417560188543573`, 0}, 
       AxesStyle -> GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{-0.1905150259859024}, {0.5}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"w = {18.7785, 98.5669}\"", TraditionalForm], 
       PlotRange -> {{-0.4074598800537683, -0.01950005651232367}, {0, 1.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
       GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Versicolor\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Versicolor|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQfePnP/60b9v3M4DBB3uDMpfEuaqH4PwI7lmRjCwI
+RQFV/vejQh+QGd79MmgjXD+hfI3gnqum+B8hg1KGxbkr4TzX/Ct+vpx8Q44
f4rXbK6lPDvh/FNXdlsFBx6A8xP+8q0Jm4aQr9h8V+3hWoT5IfETdSVXINRz
3FIO48hEyD94XZy0u2MXnP8hdWLv4WsLcboXPTwOOBtMvX1vH8K8pGmBQT8R
/nmStPAkpwcivCxK7pTaLt0A5y/w3P193qypcH5OveKqPvf9OP3D0/t9iuLi
wzjDa4J6anneR4R/IrLKjjDN2oczvu5UC/LNW74Xp3sVor8tvvR9MpzvsMtW
5XPPEpzx0TDlTL/UV4T7Y26cvub88SBO9SfYu/YKpGxFhIeNQOyvebsR9p+Z
sSL29xY4v6vFZMHkvycQ8c9y3u2C6hqc6tHjAz09oMvPuGv86QcHQv+K8ytc
/GZvg/O3BO52avPZA+cDAACbH54=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQvYvz04qCJ9f2M0CB2tEbvE+yL8H5/8/FLLrMfx3O
n7hl5qW4T5fh/LjJh0usLiP0vzP/vlTz7gU4n/nlrgd/DiH4U+wqPKLkz8L5
kuciqq8vR+j/Nu97Pof0GTi/5a1aN/N3hHvS1ipuTm5DmJe1Tzbdb9oNOP+z
iOQvnncI9bO2b/rYknEOzlfesTLPf9JVON9ETOu01RSEffwiopcF2hD6Pa5e
mHVJ+BacP3Peq6PX7iDkGSSMJI1TEP5ZlhrLa3QDET6z8+5WqYrcwClvv32p
e7AWwj1ptSIZm/Yi+CtMAw418N+E869xvGssqUGEV2un/QMvfYR7Qm7Wnyne
iODfSw7db8lxGScf3b+vtU6wTWW+AufXvDicbDTzJJzP8+byfyXL0zjDk1Eg
bWH+i5s4w1dbWHCNiBzCvopDZ2a8N74I5zscufLsOTNC/lBK5DPTAoR7s39H
Bk6xQMS/8d/E+T0cCP0Cunf/7RNExHfZuVRVzmfn4fzkBZ+Ez69BmPfsVGin
hBtCPXr6BQA7quIu
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1: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
2gtLW0M3bvQ5oC1VadfWfHshKXNv59aC62hjmmf7TadeeOX/5yQKu4lWTm6Y
GWv1Qn1g8JfZ17fRpqu1O+u5XhjxursUx+eMWLPao2rUeuEY/+U9dhbOSJTz
aaPw8V4wETjzvoDqjAwmDh+YPdALApVjcQ9E7iArnrhTift7QaNb+hDmcgc5
nv9tekG4F3wIagumjXdQcGFrZCFfL5y7HZHV5HAXVTy0XPVi6oX9Pi4Mm62u
qLm0Zfsh+l5oy44R0RN1QwOzByXG//bANU3WWEVfNzR36aex2vcemOK7H9ZC
cEeCok/qWKd6wNeLt7en1wP5NTaGJTb0wOlHzgxbz91DET8OvL5Q2wMPZuyK
K+ruoefSUTX/KnpgX1o8p4fKfVQUc4V6raAHIstF6Y/K+6Ap6zWDQyk9EK+e
s5KDfNFyvKnT+IseYON6Z5LT7ov+dtaHRMf3QJ9yddc/KT/EqxBZtRbZA/kk
xY6pCj90jkFCuPZ+D5yhMF8I/vIQGShHHLvt2QM7ctsNvyj4I6ub3/REXHtA
cLTE5VmAP/Ik1gUF3eyBl/QCMZySAejda6P5C6Y9IFX2NHX1QSDacTqsbFy5
B4zCXUu/eoQgq1df694r9IADOTDIfTgEFW+eayMf6YH57W01gSqhyLiSidIr
2QPLejnMx/+Fotcygb/q+HrgabqYZ1FKOPrx6POW6l09YCn3+vIi2yOkMavG
Wr6zBwat38u+93qEll5v2ZPPjJuzynbKNAKpCPiqpqx3w2Ldl3Yv+cco3H38
dOJqNzj2lS/R5z5GH4iECwlU3DcPpLlJRSH/xxvmUTPdMHXXvmA3dzTqYfD2
9R3Gx+duXfu17wmyXnJttCzvhsKYHrpqh1hUokXqvFLcDbuN6T6Ll8ci5iwF
olF+N6TIN5xrY4pDOde+fb6Y0Q1Mg6c567Pi0DrlNuPJhG7w8mdy2vHvKdJU
6mNXje2GX+SehkKjeJQUK8OrEtUND03OHy4qjEdqOosSsiHdcNJRf2D8egKK
aLqhIezRDXPLpbXe88/QuHCnruDdbrh943nH84vPkdwDKRP+23j7oFXdydLn
iKzy9TqHfTfo3cX2EYJeIJE820d0Rt0gY1A0GaOShMqeWfV+UuoG7i0l8yzf
UtD0h6yzwfLdoGIusrgfS0U8Yqt1B2W6QeJnE7ddYCpyzQ3KdxfvhgYzFGXO
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
gR0uf/932lyla0/IqTr3x5v/+z/qSY+y
             "]]}, Annotation[#, "Charting`Private`Tag$76372#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1: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
ozUwRcn3qvRzovzP3jJdZniJRdW11pywMpfdbya49OZcMZcxUd95uZxsJhhg
5v/H+DgRD2TSvMwEs958uv9lH1H/tjb97H9g4YyXF5MAYfvW9rC/wG9NZrX2
ejIuXLL+LxB+08USykL4cclQyB8A1ij4ic2X4P4kdZdG/gY+WdSg/e3YHgae
iSW/gOCZ5ZYH9YRXnbt4/BdIY5bZ0ICI/M03hT8tgVbT2+EmWUT88q59zEuA
n1k8yjmQ8F4z68sLINnE/kXWYcLXrRI8fgDV1ZEDP9UJxxvSFH6A+owyScpu
oj5a272uOTC5iiepSYpwyCMZlTmwO6MwdfRfMc6nunEvz4La00NjOxYJ86hZ
vpkFpqs4t92exmaiPJm/OAvunT6XydJH2P9ZQ+YMqGZizZUqInyj72bIFDid
vuOHXQ7hU7xXOKfA6Kkzu3NSCR90fRY0CTjTM97CJ4TTU/0eTQDjU0bF5s6E
DfLCi8bA19fx1VFKhM1yHl0cAatTSr5ckyWcEvmAfQRIJHWv1hMnLLQ4ljUM
LOK4DzKvJ/x5eePKV9AV4VF6daoIe3lUOPMLmA+N/XRsmLDYsJr5F8ATXPh7
Sx/hXpsEzi/ghO/svk/NhINea10bAvV3rd7qZBAeE1I/OghGXO51SicRTruk
uHoQrLkVPb8SQ1iArlEyAA46UVUKAgm3mVXtGgBFNhpvJO0Jyy1YnesHmXoS
qcvyhHkSBrM+guZj6nWdkoQbPZQPfgTj2qYj2UKEi/Q1O3uArGaYzGV2wvs/
ha/uAfGqTAn00ffYVFWxax9A2S7R8qwBwmEKiPsD+KS897N/N2GJI1M5XUBo
m5OYRj3hytiOpU4QsXngaUYKYbBKJroDZIv+KfR9QZgn2/VQB2gVEuy2fkI4
7vL2WTpYx2vAL+RLeCEjTI8OvNeWRzy8RNgz5Z0ADdz6/iLQcgthD77tjW1A
uVzf31qMsOCptcfawHjIX59LfIQVN482tQJLxbOejiykJx53toDDl/nv3B8u
xOaOqfvXBFb21Nzy7CMsc3c8pAkUrnF29ukkvFe/Y3MTUExsvxpSQ/iT5sCR
RsDbF3QpLpmwC13gdT1oTT9gk/ic8Ozom8P1wM91/PyrSMJMud1f6sBvAR2L
rIeEww5UydSBIUNm47KLhPOzThbWgJz6Owf7txAO0tKXrAJXnsjBITHCpiY7
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
wyuFkjj+3rnF92AZ2bxgCuV/fm8XsQ==
             "]]}, Annotation[#, "Charting`Private`Tag$76372#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {-0.011417560188543573`, 0}, 
       AxesStyle -> GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{-0.19405105038167328`}, {0.5}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"w = {25.2794, 130.272}\"", TraditionalForm], 
       PlotRange -> {{-0.4074598800537683, -0.01950005651232367}, {0, 1.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
       GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Versicolor\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Versicolor|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8028023780412936`*^9, 3.802803635468217*^9, 3.8028036699129305`*^9, {
   3.8028037024904385`*^9, 3.802803713288767*^9}, {3.804282213695351*^9, 
   3.8042822298448725`*^9}, 3.804282528584026*^9, {3.8042825946622047`*^9, 
   3.804282607057129*^9}},
 CellLabel->
  "Out[249]=",ExpressionUUID->"07ff8d38-904d-4fa4-bb2d-591dd8f7ef15"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tasa de clasificaci\[OAcute]n", "Subchapter",
 CellChangeTimes->{{3.7910441307642603`*^9, 3.7910441355342293`*^9}, {
  3.802791442617474*^9, 3.802791446191646*^9}, {3.8027921416957283`*^9, 
  3.802792154126571*^9}, {3.8028009223280935`*^9, 3.80280092431532*^9}, {
  3.8028025248919754`*^9, 
  3.802802528933178*^9}},ExpressionUUID->"fd3bbe43-167f-4bc3-b556-\
bc28177f7980"],

Cell["\<\
El clasificador clasifica correctamente el 94% de las especies setosa\
\>", "Text",
 CellChangeTimes->{{3.8028004732617702`*^9, 3.802800496387722*^9}, {
  3.802802632829694*^9, 
  3.802802632989321*^9}},ExpressionUUID->"18de3c2b-dd2c-4d66-be62-\
5a68a8c58785"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"truePositives", " ", "=", " ", 
  RowBox[{"N", "@", 
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{
      RowBox[{"proyectedSetosa", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"x_", "/;", 
       RowBox[{"x", "<", "bestFrontier"}]}]}], "]"}], 
    RowBox[{"Length", "[", 
     RowBox[{"proyectedSetosa", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.802800103671937*^9, 3.8028001732545223`*^9}, {
  3.8028002063832917`*^9, 3.8028002255417356`*^9}, {3.8028002692555857`*^9, 
  3.802800292005975*^9}, {3.802802580531208*^9, 3.802802589928089*^9}, {
  3.8042833410848594`*^9, 3.8042833456675744`*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"edd18de2-5c59-4c46-b412-0b45d50d5ec4"],

Cell[BoxData["0.02`"], "Output",
 CellChangeTimes->{
  3.8028001740184884`*^9, {3.802800207348705*^9, 3.802800225974884*^9}, {
   3.8028002698160625`*^9, 3.8028002923510523`*^9}, {3.8028025848386917`*^9, 
   3.802802590260196*^9}, 3.802803635672674*^9, 3.8042833243868337`*^9, 
   3.8042833811567554`*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"e96d97bd-9031-4010-9561-e10152543dbe"]
}, Open  ]],

Cell["\<\
sin embargo clasifica incorrectamente como setosa el 4% de las especies \
versicolor\
\>", "Text",
 CellChangeTimes->{{3.8028005043069844`*^9, 3.8028005398227882`*^9}, 
   3.802802627999607*^9, 
   3.804283401073903*^9},ExpressionUUID->"5ce9b19b-7b82-46c5-9401-\
194fe5cf754e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"falsePositives", " ", "=", " ", 
  RowBox[{"N", "@", " ", 
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{
      RowBox[{"proyectedVersicolor", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"x_", "/;", 
       RowBox[{"x", "<", "bestFrontier"}]}]}], "]"}], 
    RowBox[{"Length", "[", 
     RowBox[{"proyectedSetosa", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.8028003071213307`*^9, 3.8028003233965454`*^9}, 
   3.802802583662836*^9, {3.8042833530470767`*^9, 3.8042833696474457`*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"2819aa47-44eb-4039-a7e2-a4037f9a525f"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.8028003202515697`*^9, 3.8028003236797857`*^9}, 
   3.802802593579322*^9, 3.8028036357125673`*^9, 3.804283325576785*^9, 
   3.8042833823121395`*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"dfc1241c-04ab-4ec2-b64e-f28315e32485"]
}, Open  ]],

Cell["\<\
De la especie versicolor, clasifica incorretamente el 6% como setosa\
\>", "Text",
 CellChangeTimes->{{3.8028026451754684`*^9, 3.802802667005103*^9}, {
  3.802802697104618*^9, 3.8028027177653856`*^9}, {3.8042833927068944`*^9, 
  3.8042833942056108`*^9}},ExpressionUUID->"cdf8f129-4c00-4104-a9c6-\
7252bab365fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"falseNegatives", " ", "=", " ", 
  RowBox[{"N", "@", " ", 
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{
      RowBox[{"proyectedSetosa", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"x_", "/;", 
       RowBox[{"x", ">", "bestFrontier"}]}]}], "]"}], 
    RowBox[{"Length", "[", 
     RowBox[{"proyectedVersicolor", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.802800376062806*^9, 3.8028004021296425`*^9}, {
   3.8028004321785107`*^9, 3.802800433448139*^9}, 3.8028025995802765`*^9, 
   3.8028026913669605`*^9, {3.80428334797723*^9, 3.804283374747505*^9}},
 CellLabel->
  "In[268]:=",ExpressionUUID->"e56014a7-f718-4d7f-8f78-6910d740cb10"],

Cell[BoxData["0.98`"], "Output",
 CellChangeTimes->{3.8028004039805813`*^9, 3.802800434012399*^9, 
  3.802802692251594*^9, 3.802803635751465*^9, 3.8042833265168343`*^9, 
  3.8042833835368032`*^9},
 CellLabel->
  "Out[268]=",ExpressionUUID->"1c9ca107-fd2c-45c1-838c-f88dbeabf899"]
}, Open  ]],

Cell["Y clasifica correctamente el 96% de las especies versicolor.", "Text",
 CellChangeTimes->{{3.8028027227053537`*^9, 3.8028027350104494`*^9}, 
   3.8042833976971865`*^9},ExpressionUUID->"b6cebaa2-2fe9-41c0-bcc3-\
1cc767d4b1e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trueNegatives", " ", "=", " ", 
  RowBox[{"N", "@", " ", 
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{
      RowBox[{"proyectedVersicolor", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"x_", "/;", 
       RowBox[{"x", ">", "bestFrontier"}]}]}], "]"}], 
    RowBox[{"Length", "[", 
     RowBox[{"proyectedVersicolor", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.802800441038167*^9, 3.8028004518283324`*^9}, 
   3.802802601683657*^9, {3.80428337724747*^9, 3.804283379027088*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"b771bca3-3e54-4b67-8cda-07805ce859ed"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.8028004523559217`*^9, 3.802802602179328*^9, 
  3.8028036357973557`*^9, 3.8042833280267544`*^9, 3.8042833854866695`*^9},
 CellLabel->
  "Out[269]=",ExpressionUUID->"5fcf9a8e-25a3-4e20-a846-cadaf877aa19"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 478},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
Magnification:>0.7 Inherited,
FrontEndVersion->"12.1 para Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3b508f85-843e-4bc3-ab8f-7858124eb11d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 351, 5, 68, "Title",ExpressionUUID->"f811a4ed-1dda-47ab-b26d-5f8881b9244a"],
Cell[934, 29, 467, 9, 56, "Subsection",ExpressionUUID->"878fbff7-241e-48cc-bbf9-8690bbc81c1b"],
Cell[CellGroupData[{
Cell[1426, 42, 226, 4, 34, "Subchapter",ExpressionUUID->"9d6dfe1c-d455-4e3c-a524-fcb3fb55436d"],
Cell[1655, 48, 176, 3, 24, "Text",ExpressionUUID->"cc8957ed-65f7-4d62-a228-1cb161b00cf7"],
Cell[1834, 53, 556, 14, 21, "Input",ExpressionUUID->"7395b67e-7643-40b4-8dd3-2b0a1cd40171"],
Cell[CellGroupData[{
Cell[2415, 71, 183, 2, 21, "Input",ExpressionUUID->"f6f470f6-af6d-43d7-8243-e7c4a7132103"],
Cell[2601, 75, 399, 8, 23, "Output",ExpressionUUID->"9494720f-0e48-4517-a28b-ff0ffac145eb"]
}, Open  ]],
Cell[3015, 86, 513, 17, 24, "Text",ExpressionUUID->"c361ddef-ef1e-4480-9a1c-e06b07e798a7"],
Cell[CellGroupData[{
Cell[3553, 107, 902, 21, 21, "Input",ExpressionUUID->"eed92880-b884-4de4-b541-705b3b7159fa"],
Cell[4458, 130, 9395, 209, 202, "Output",ExpressionUUID->"b8b13bee-a0f7-4640-b7c4-08c66d1b8ff1"]
}, Open  ]],
Cell[13868, 342, 339, 7, 24, "Text",ExpressionUUID->"68146d49-84d3-4ace-bb77-b1e4fe18daa9"],
Cell[CellGroupData[{
Cell[14232, 353, 551, 12, 21, "Input",ExpressionUUID->"9ff56fd5-4c76-402a-a017-631b795ded17"],
Cell[14786, 367, 7795, 206, 133, "Output",ExpressionUUID->"7c8b03b2-1341-4bac-a35f-3ab85911b7f4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22630, 579, 273, 4, 44, "Subchapter",ExpressionUUID->"dd636bed-93b9-4220-9a60-5e4108c11405"],
Cell[22906, 585, 416, 12, 24, "Text",ExpressionUUID->"c5aa5806-85c8-43a8-ba8a-f82ab1f3ad0b"],
Cell[23325, 599, 581, 16, 32, "Input",ExpressionUUID->"b0183902-9ebb-4967-8dac-cbcd3d436c5b",
 InitializationCell->True],
Cell[23909, 617, 768, 15, 34, "Input",ExpressionUUID->"1555d2c4-2508-43cd-b199-6c9e1f2e93bf"],
Cell[CellGroupData[{
Cell[24702, 636, 5352, 130, 186, "Input",ExpressionUUID->"561be34c-7824-46af-919c-1ada3e58ffb5"],
Cell[30057, 768, 20587, 440, 245, "Output",ExpressionUUID->"1a88afef-806a-4c54-9c3e-a8b0f4b5efea"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50693, 1214, 278, 4, 44, "Subchapter",ExpressionUUID->"701210d5-3f69-412b-861d-8c6d371cb924"],
Cell[50974, 1220, 286, 6, 24, "Text",ExpressionUUID->"18610b27-0338-4936-91a9-2787416b816e"],
Cell[51263, 1228, 191, 3, 24, "Text",ExpressionUUID->"961891d0-bbdc-4459-b245-53125c54ca24"],
Cell[51457, 1233, 9648, 163, 61, "Input",ExpressionUUID->"ce47d216-cf97-4df7-9c8a-f5ead202b12c"],
Cell[61108, 1398, 229, 5, 24, "Text",ExpressionUUID->"7d1fa5b6-9e0b-47ad-a03d-eba96584f95b"],
Cell[61340, 1405, 15834, 264, 47, "Input",ExpressionUUID->"76cfaaeb-2756-4d31-9414-999e70327805"],
Cell[77177, 1671, 330, 9, 24, "Text",ExpressionUUID->"b2ed546a-273d-4af2-986e-2d2cbf6ec3a9"],
Cell[77510, 1682, 4792, 83, 46, "Input",ExpressionUUID->"f775a57e-942a-4ccb-be45-b5d31dcefef0"],
Cell[CellGroupData[{
Cell[82327, 1769, 243, 6, 37, "Subsection",ExpressionUUID->"688303d2-cae2-4a61-80b4-4ad7e96e846c"],
Cell[82573, 1777, 3503, 88, 252, "Input",ExpressionUUID->"64851f96-0d47-4008-8f78-0059c22ad2f5",
 InitializationCell->True],
Cell[86079, 1867, 294, 9, 24, "Text",ExpressionUUID->"7985daf6-c1ff-425d-88d7-22f2e720bd6c"],
Cell[CellGroupData[{
Cell[86398, 1880, 306, 5, 21, "Input",ExpressionUUID->"acf47c27-cc48-44e3-90f0-711077bba9ee"],
Cell[86707, 1887, 279, 6, 23, "Output",ExpressionUUID->"920f280a-ccf7-43ae-90bf-c969060d19e3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87035, 1899, 216, 4, 37, "Subsection",ExpressionUUID->"32cd12ce-7a45-4691-8af2-d3de594c906b"],
Cell[87254, 1905, 3009, 75, 224, "Input",ExpressionUUID->"f8a34c83-da44-4fe0-81af-f28f8f29df79",
 InitializationCell->True],
Cell[90266, 1982, 537, 11, 40, "Text",ExpressionUUID->"41ae3b63-df4a-447e-810c-44bed32cc76f"],
Cell[CellGroupData[{
Cell[90828, 1997, 7761, 186, 282, "Input",ExpressionUUID->"4834eb67-c556-49f5-9b88-46228873e45c"],
Cell[98592, 2185, 42866, 891, 366, "Output",ExpressionUUID->"4eac62d2-be5b-4174-aa3c-1c81bc3f5618"]
}, Open  ]],
Cell[141473, 3079, 336, 9, 24, "Text",ExpressionUUID->"ea502263-2fe6-4929-805a-5b651905b8a3"],
Cell[141812, 3090, 829, 24, 34, "Input",ExpressionUUID->"63ea7d37-903f-44e4-990b-2fd5775d8e83"],
Cell[142644, 3116, 387, 9, 21, "Input",ExpressionUUID->"00927d76-713e-4375-8c4c-92a591bd4c74"],
Cell[CellGroupData[{
Cell[143056, 3129, 5404, 136, 172, "Input",ExpressionUUID->"7e70f6ce-615e-4f00-b0de-257abcfc8943"],
Cell[148463, 3267, 50429, 911, 242, "Output",ExpressionUUID->"5d4a3f39-a5e6-4bc8-9763-b8f619f413f9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198953, 4185, 337, 5, 44, "Subchapter",ExpressionUUID->"abc58d52-ba0a-4ce4-8ec6-1092a7983029"],
Cell[199293, 4192, 39460, 655, 158, "Text",ExpressionUUID->"db1f2ff9-ca0d-405d-b40c-871c32aadf02"],
Cell[238756, 4849, 2401, 66, 156, "Input",ExpressionUUID->"320d0aa3-00ef-4eec-98ab-d8c829185192",
 InitializationCell->True],
Cell[241160, 4917, 186, 3, 24, "Text",ExpressionUUID->"fe26f787-d315-4d26-8cd2-14fa1721a257"],
Cell[241349, 4922, 1066, 23, 48, "Input",ExpressionUUID->"b8435041-9804-4a0e-a500-162a67f0e5ba"],
Cell[242418, 4947, 254, 8, 24, "Text",ExpressionUUID->"2d0944ba-80a7-42b9-a02c-4e332a3aa763"],
Cell[CellGroupData[{
Cell[242697, 4959, 264, 6, 21, "Input",ExpressionUUID->"06ba4c6f-c386-4b58-bfc3-6d8ad8842a6c"],
Cell[242964, 4967, 332, 6, 23, "Output",ExpressionUUID->"2382433f-8fa9-4cc2-8c59-7de080503093"]
}, Open  ]],
Cell[243311, 4976, 185, 3, 24, "Text",ExpressionUUID->"7cbc010f-fa53-4b27-8d18-94499f8e0847"],
Cell[CellGroupData[{
Cell[243521, 4983, 624, 15, 21, "Input",ExpressionUUID->"807c00fa-8726-40f7-9736-db8ef0a9b63a"],
Cell[244148, 5000, 1085, 23, 23, "Output",ExpressionUUID->"b6924441-8b96-48cf-9a1f-8f0550bd6643"]
}, Open  ]],
Cell[245248, 5026, 266, 6, 24, "Text",ExpressionUUID->"3cad3358-af4b-413b-8fe8-3e589f1ff7dc"],
Cell[245517, 5034, 11939, 284, 307, "Input",ExpressionUUID->"6a4ef61e-0f0e-4375-b385-fd8d51a6cc44",
 InitializationCell->True],
Cell[257459, 5320, 444, 10, 24, "Text",ExpressionUUID->"35203600-43d5-481e-99aa-51f44850bf2b"],
Cell[CellGroupData[{
Cell[257928, 5334, 289, 6, 21, "Input",ExpressionUUID->"be8254b5-6805-44c9-b5ad-a9d4a431f465"],
Cell[258220, 5342, 637, 14, 23, "Output",ExpressionUUID->"a5e934f6-411e-4a4f-befb-a62cafc9f362"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258894, 5361, 260, 5, 21, "Input",ExpressionUUID->"73ec3659-192f-4c7b-b202-290971a77527"],
Cell[259157, 5368, 264, 5, 23, "Output",ExpressionUUID->"d99561f4-80c3-4da6-8dae-e9abeb7a8338"]
}, Open  ]],
Cell[259436, 5376, 301, 6, 24, "Text",ExpressionUUID->"b81a0c2d-8798-4a89-8c4e-9004792fe220"],
Cell[CellGroupData[{
Cell[259762, 5386, 1133, 29, 62, "Input",ExpressionUUID->"1041c9f9-5766-41c3-9f66-09d88bc6913e"],
Cell[260898, 5417, 327957, 5831, 229, "Output",ExpressionUUID->"7774a327-3305-4d68-a83c-12321c0aee24"]
}, Open  ]],
Cell[588870, 11251, 512, 9, 40, "Text",ExpressionUUID->"831566e5-90e2-437d-bc89-0c37e6783253"],
Cell[CellGroupData[{
Cell[589407, 11264, 228, 5, 21, "Input",ExpressionUUID->"d7822e1a-4722-4c19-9a35-8a66fbaea761"],
Cell[589638, 11271, 354500, 6642, 1482, "Output",ExpressionUUID->"07ff8d38-904d-4fa4-bb2d-591dd8f7ef15"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[944187, 17919, 379, 6, 44, "Subchapter",ExpressionUUID->"fd3bbe43-167f-4bc3-b556-bc28177f7980"],
Cell[944569, 17927, 270, 6, 24, "Text",ExpressionUUID->"18de3c2b-dd2c-4d66-be62-5a68a8c58785"],
Cell[CellGroupData[{
Cell[944864, 17937, 840, 20, 36, "Input",ExpressionUUID->"edd18de2-5c59-4c46-b412-0b45d50d5ec4"],
Cell[945707, 17959, 388, 7, 23, "Output",ExpressionUUID->"e96d97bd-9031-4010-9561-e10152543dbe"]
}, Open  ]],
Cell[946110, 17969, 287, 7, 24, "Text",ExpressionUUID->"5ce9b19b-7b82-46c5-9401-194fe5cf754e"],
Cell[CellGroupData[{
Cell[946422, 17980, 725, 18, 36, "Input",ExpressionUUID->"2819aa47-44eb-4039-a7e2-a4037f9a525f"],
Cell[947150, 18000, 283, 5, 23, "Output",ExpressionUUID->"dfc1241c-04ab-4ec2-b64e-f28315e32485"]
}, Open  ]],
Cell[947448, 18008, 321, 6, 24, "Text",ExpressionUUID->"cdf8f129-4c00-4104-a9c6-7252bab365fb"],
Cell[CellGroupData[{
Cell[947794, 18018, 796, 19, 36, "Input",ExpressionUUID->"e56014a7-f718-4d7f-8f78-6910d740cb10"],
Cell[948593, 18039, 279, 5, 23, "Output",ExpressionUUID->"1c9ca107-fd2c-45c1-838c-f88dbeabf899"]
}, Open  ]],
Cell[948887, 18047, 231, 3, 24, "Text",ExpressionUUID->"b6cebaa2-2fe9-41c0-bcc3-1cc767d4b1e2"],
Cell[CellGroupData[{
Cell[949143, 18054, 721, 18, 36, "Input",ExpressionUUID->"b771bca3-3e54-4b67-8cda-07805ce859ed"],
Cell[949867, 18074, 254, 4, 23, "Output",ExpressionUUID->"5fcf9a8e-25a3-4e20-a846-cadaf877aa19"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

