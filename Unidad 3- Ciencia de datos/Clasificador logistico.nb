(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1224743,      22545]
NotebookOptionsPosition[   1218346,      22435]
NotebookOutlinePosition[   1218777,      22452]
CellTagsIndexPosition[   1218734,      22449]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Reconocimiento de patrones: Tarea 6", "Title",
 CellChangeTimes->{{3.791044082742649*^9, 3.7910440964427156`*^9}, 
   3.793570498856371*^9, {3.798737344351436*^9, 3.798737344572486*^9}, 
   3.800716631509065*^9, {3.8027914137740817`*^9, 
   3.802791414188933*^9}},ExpressionUUID->"f811a4ed-1dda-47ab-b26d-\
5f8881b9244a"],

Cell["\<\
Carlos Manuel Rodr\[IAcute]guez Mart\[IAcute]nez
3/07/2020\
\>", "Subsection",
 CellChangeTimes->{{3.791044108729664*^9, 3.791044125236742*^9}, {
  3.793568513434387*^9, 3.793568513794141*^9}, {3.7987373544042645`*^9, 
  3.79873736682662*^9}, {3.8007166339778585`*^9, 3.8007166388199043`*^9}, {
  3.8027914172359886`*^9, 
  3.8027914194165435`*^9}},ExpressionUUID->"878fbff7-241e-48cc-bbf9-\
8690bbc81c1b"],

Cell[CellGroupData[{

Cell["Cargar base de datos Iris", "Subchapter",
 CellChangeTimes->{{3.7910441307642603`*^9, 3.7910441355342293`*^9}, {
  3.802791442617474*^9, 
  3.802791446191646*^9}},ExpressionUUID->"9d6dfe1c-d455-4e3c-a524-\
fcb3fb55436d"],

Cell["Carga toda la base de datos Iris", "Text",
 CellChangeTimes->{{3.802791652984005*^9, 
  3.8027916587607203`*^9}},ExpressionUUID->"cc8957ed-65f7-4d62-a228-\
1cb161b00cf7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"attributes", ",", "rawDatabase"}], "}"}], " ", "=", " ", 
   RowBox[{"TakeDrop", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<iris.csv\>\""}], 
        "}"}], "]"}], "]"}], ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.802791467895279*^9, 3.802791546244971*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"7395b67e-7643-40b4-8dd3-2b0a1cd40171"],

Cell[CellGroupData[{

Cell[BoxData["attributes"], "Input",
 CellChangeTimes->{{3.8027915475111494`*^9, 3.802791548226234*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"f6f470f6-af6d-43d7-8243-e7c4a7132103"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"sepal-length\"\>", ",", "\<\"sepal-width\"\>", 
    ",", "\<\"petal-length\"\>", ",", "\<\"petal-width\"\>", 
    ",", "\<\"species\"\>"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8027915484635997`*^9, 3.8028035902968388`*^9, 
  3.8028036322043085`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"9494720f-0e48-4517-a28b-ff0ffac145eb"]
}, Open  ]],

Cell[TextData[{
 "Selecciona las clases ",
 StyleBox["setosa",
  FontSlant->"Italic"],
 " y ",
 StyleBox["virginica",
  FontSlant->"Italic"],
 ", y toma solo el atributo ",
 StyleBox["sepal-length",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.8027916639591837`*^9, 
  3.802791689197835*^9}},ExpressionUUID->"c361ddef-ef1e-4480-9a1c-\
e06b07e798a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"processedDatabase", " ", "=", " ", 
  RowBox[{
   RowBox[{"Cases", "[", 
    RowBox[{"rawDatabase", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "\"\<setosa\>\""}], 
       "}"}], "|", 
      RowBox[{"{", 
       RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "\"\<virginica\>\""}], 
       "}"}]}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8027915501742277`*^9, 3.802791585151453*^9}, {
  3.8027916243735027`*^9, 3.8027916411238623`*^9}, {3.802791706957723*^9, 
  3.8027917217972355`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"eed92880-b884-4de4-b541-705b3b7159fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.7`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.7`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.5`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.3`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "\<\"setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.1`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.6`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.3`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.2`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.8`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.7`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.7`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.9`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.6`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.7`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.2`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.2`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.1`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.2`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.4`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.9`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.1`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.7`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.9`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.9`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.8`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.2`", ",", "\<\"virginica\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.9`", ",", "\<\"virginica\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.802791552813859*^9, 3.8027915855184703`*^9, {3.802791632633701*^9, 
   3.8027916416064467`*^9}, 3.8027917086874228`*^9, 3.8027917460348253`*^9, 
   3.802798915794207*^9, 3.802803591180543*^9, 3.802803632254174*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"8ba207d0-42c5-40e9-b57a-177636eb7b46"]
}, Open  ]],

Cell["\<\
Se termina el preprocesamiento cambiando las etiquetas setosa a 1, y \
virginica a 0.\
\>", "Text",
 CellChangeTimes->{{3.802798426229974*^9, 3.802798455615406*^9}, {
  3.8027988819748077`*^9, 
  3.8027988848751984`*^9}},ExpressionUUID->"68146d49-84d3-4ace-bb77-\
b1e4fe18daa9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"processedDatabase", " ", "=", " ", 
  RowBox[{"ReplaceAll", "[", 
   RowBox[{"processedDatabase", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<setosa\>\"", "\[Rule]", "1"}], ",", 
      RowBox[{"\"\<virginica\>\"", "\[Rule]", "0"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8027983850854063`*^9, 3.802798422561181*^9}, {
  3.802798888906999*^9, 3.8027988912508507`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"9ff56fd5-4c76-402a-a017-631b795ded17"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.7`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.7`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.2`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.5`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.4`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.8`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.1`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.6`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.3`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.1`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.6`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.9`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.3`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.2`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.8`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.7`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.7`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.7`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.9`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.6`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.7`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.2`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.2`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.1`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.2`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.4`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.9`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.1`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.7`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.4`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.9`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.9`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.8`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.7`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.3`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.2`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.9`", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8027984150745583`*^9, 3.802798423643285*^9}, {
   3.8027988916507797`*^9, 3.8027989179927635`*^9}, 3.802803632307059*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"f8099c39-6e96-4bea-bdf9-85c9259d01ac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Propiedades de los datos", "Subchapter",
 CellChangeTimes->{{3.7910441307642603`*^9, 3.7910441355342293`*^9}, {
  3.802791442617474*^9, 3.802791446191646*^9}, {3.8027987831976757`*^9, 
  3.802798788144858*^9}},ExpressionUUID->"dd636bed-93b9-4220-9a60-\
5e4108c11405"],

Cell["\<\
Histograma de la longitud del s\[EAcute]palo para las especies setosa y \
virginica.\
\>", "Text",
 CellChangeTimes->{{3.8027987915011497`*^9, 
  3.8027988116477184`*^9}},ExpressionUUID->"c5aa5806-85c8-43a8-ba8a-\
f82ab1f3ad0b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"onlySetosa", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{"rawDatabase", ",", 
       RowBox[{"{", 
        RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "\"\<setosa\>\""}], 
        "}"}]}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<setosa\>\"", "\[Rule]", "1"}], ",", 
      RowBox[{"\"\<virginica\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"onlyVirginica", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{"rawDatabase", ",", 
       RowBox[{"{", 
        RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "\"\<virginica\>\""}],
         "}"}]}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<setosa\>\"", "\[Rule]", "1"}], ",", 
      RowBox[{"\"\<virginica\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8027991056347322`*^9, 3.802799119522622*^9}, {
  3.80279917323732*^9, 3.8027991857883124`*^9}, {3.8027992206863785`*^9, 
  3.802799224901825*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"1555d2c4-2508-43cd-b199-6c9e1f2e93bf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sepalLengthSetosa", " ", "=", " ", 
   RowBox[{"onlySetosa", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sepalLengthVirginica", " ", "=", " ", 
   RowBox[{"onlyVirginica", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8027986917754188`*^9, 3.8027987424343123`*^9}, {
  3.802799123047363*^9, 3.8027991331778965`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"4d911725-061f-4a3d-aa5e-e6b846a35e83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sepalLengthSetosa", ",", "sepalLengthVirginica"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Setosa\>\"", ",", "\"\<Virginica\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.802798744019275*^9, 3.802798755497907*^9}, {
  3.802798815414282*^9, 3.802798827774876*^9}, {3.8028007403491983`*^9, 
  3.8028007473583107`*^9}, {3.802802401518521*^9, 3.802802402030165*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"73d8e12d-1d83-48c4-977e-0fbb501d22b5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxde3c4FW74vpVEirMH5xypaBotNJ6HT6HMllGIiqQkyWiIlIyESPYeRUhm
RZIyso6990qSRAuN3/ld1/f6/vE9/5zrvt73fZ77ue/3fZ/z/nFkTjocshbg
4+PbJ8jH9/+/67oNz2nXrES+//k8FHqtkLVT8n+x0XLZoVaUxHtjDyZtTusB
leQT8nufJOodX9YfdsgAOpif/lutI4mBa5df3JdtCBGyBt91DCVRYdr9Xemb
g2CyIS/N6agkfgtpum00egjoW6gm0cckEZ/L/XpKOQLdateWvT0hidZmwrOO
pkchSmPg5eRpSdzPNHqimWUExw/8d55gJ4lhos4PewgmwDz0SFrNQRL7fLZv
HvI3hV5TMa7VZUm8nJH+WpRyHGKsHDz9rkiiyV+vzSsKzMD8bIvSsxuS+N5t
WX6yrQVIO+4Y6bwliUT2trpymiX0u0U/4POTxCStTXM7RKwgzvPfPvlASXQc
v7JcQvAknPA99dMglJdvstcqY9kp4ARXPXaNkMQtiZZRNlKnYTB8w7H4WElM
W+nmm7LTGhLjg8SqkiRxsXrj97dnbMDq0VzJ9CNJrDlqbrs68Qysemp8gZIl
iVVBhOnVE7YwXFjM3pMriXE3vnfK7raD5FJ2k3WRJO7Jm715I+EcnKq85XWv
RBLrK5hL7hPsYXXDhy0FbySxULpnsSD0Aoy26Yz1Vkoibfl+hizhIqT2PX0o
VCeJK3L7t+gOXwSbMaL2xiZJPJhzwtnzpSOs/ew6f7idx19ZLWci6hJ8+NaT
ca1HEjeY927JvOUEj36DWfIgz681wikzly+DrVCKeO2YJIbzazR0XXAG+eUi
r2cnJZHkHnfDz9EFPhLPX2TMSGJJ3bvDbHdXyGA2ymh8l8QJU/+Q5/fdwE52
a8vZBUm0N5aed3h6BdZviLh9/58kHlOdvm/efhU+Kf/e9kKIgMSaK3ceCl+H
TDXLD4PLCBhqSp/diO5wXuNdhMhKAp5dz1egcOsGbDogf0CRRMB1TYFaGVwP
+HwwYNGYTsA7Efz23SGekG06k+nBIuAyM3FWmsZNuGB1xOKRLAHDmx2q1v28
CQpnn6/kyhNw06RWj32OF8xclHrzYxMBr6++Z3zhwi3IcfO8xNpCQOFv15et
UboNjp6jspoqBLTZ8eOq36/boOSr3Wa/m4AK+c8Hg995w2xQ5p0wDQLm9ycs
2xx2B3LDJVReaRFwSu2X/kE7H3CKv/xxVJeAzS6z3hP/+cKWR51Ryw8RsGCd
w2y/jB98y96lu9WYgPEvqTulhfwhvzDhz3EzAvK7z1j4TfqDc6nQ01tWBFzp
4pQp3HYXtlfaWj6xISB4HXjp/DYAftTXSbacI6Bu6Sur/IJ7UNSm+HbhIgEl
mJMvY58Egmvfg8urXAh4eq6ZIZoaBCpjv9YcuEZAA5kcvw+GwfBryqzD0ZOA
E8nVa8Yag+HFtzLfSG8C7tYxVbE8dB+u/F6t9safgEF6RUM72+6DmpDfp4kg
AtaTV7tYmYbAgtjnGIkwAl7y7Pub3x8CxcSD+ipRBIw+V6tKtw6F68yCfyfi
CThd9jfBYSoUdsnSn/mkELBM6JBTxOUH8Ge9+8mn6QT08dhYeunPA3ilPETs
yCag+BJb2947YXBDbV/F3zwClqPJnlyJh7BHI91l7QsCPjX4+pcb9RD+7ReX
1y8l4Ox+UTuJNeHw+qBjl/NbAn7dWmSg9zQcPE3b/GOrCWidnZ9wQjUC0Ep1
V0U9AT9f6vdgv40A/rOxn6eaCej34vGR07qRUH6RP57UyeOzLbRfqC0SvNys
DXf1EfDvubv7O8yi4D/P9/ynhwnI90n5v2cjUSDouynv7gcCWvx6dez62Wh4
F3T/dN4UAbUmxZtmPkfD7fDv5J6vBKQF1g2MXIyBffGmVQI/CbhzX/5N5dkY
WPLoldv63wQ8qMA98swxFiqzZdYf4iei5NPgZdu+xMKdQu+eK8JE/Lp9+HqI
XRxolX4MSBQjIiErvDluJA5EKvX2vJcgYqOoSrDCsXiorn/2ZYZMxOP/CT9n
NMSDXxs5kcYk4ns+5qVodgLs77tyCDlEPP+U+SzLKAFEx/oEbdcQMV5RQE4x
IAFqptQLgtYTcfnZLKOVZQlw91uqTZECEQ3O2exTmU0A3d/LaANbiahxeL9v
xKpEWC504b2wGhHNRm4dZB1MhHqx5qubgYg6cifcn7snwj3i9o1Ge3nr3ZfF
Gz1OBH1mVJ/7fiKuu08R/9iYCCtk/wam6hOR5mu+ePpnInDXn8T6w0Rkzgzm
FTCTIEi58us3EyJ+/ndAonF3EhiqrU+WsuCNh8gVPTZPAgmNwCN7TxFxKnfU
c+u1JGjaP7vkvC0Rd88e0T37MAlCDhoVhdoTcXS3jMiep0lwyPSlbfElIm6s
fVycUZEEBCsWY8SViG+J2kGPu5KgxdarVtSdiDvc+VqVPiXBg4vj15W9iHix
56qoxkISHHE7sPmYDxFtYk98bBNOBrJn9sDNACKuZ/Kd+iSRDG0+hPvp94k4
sFov4yYtGR4GuWg0PSTiiiTqjkjpZDAK7577FU1ElbKI91s4yUCN35PKSSSi
6RjYH+HhzrQkI+00Im7Wrbj6jzc/IltY5OITnp8fPCPV6MlgWmj3IjyHiBe6
lpQtJyQDvbTB7nUBEaVl7z3yEUmG7gplqQ8viVjaLxOe/DsJouof1q8oI+KS
vGhRp+kkON62cGN7BRFl6mUeCPQngVSfhaJFDRFVp4YzTtQmQe9o+ZA3l4i9
ry6IRhYmQczU2tCsViKma9/ILo1PAvNv/nvbuogYJCjVMHQnCVi/p7//7ifi
Hj+ldtL5JOgXPPxo9SjPD4Obp84ZJEG8WJGJ7kci8u0h7lpQTIITRKbo5Wki
GpkytTskkoDD9CiOniMiZd1Jf/qXRBhcNXL+7S8en6fbaV21iZC4Xov16Q8R
966elVB4lAgnlZ9wCYIkJLWSw7bdTIRVaitvqomQ8Fuq2KulxxJhWN1J+aQ4
Ced+3g96o5QIyfs7RvwIJFz06fnpIZIIpw/uDHtGJWHub7MUq/4EWG0ar9kl
RcKvz9EhIC8BxiwFf/GtIqFMjfqTlb4JkGp7Jl1ejoSzT1LtiWYJYHOx9pjh
RhKKZn32eK6QAGvdFJa7KZHQ/NhHQ45gAnzwCH0Vv53Hz/laS1dmPDz2+Xmh
aicJQ3SrK24ejgfboOOcL0hC57WGuTcW4kA+/HUTRZOElIijFdSkOPgYJ3tr
jw4JIw9/WBp2IA4y0ny22hiScPnXNQfgWyzYZX8au3eUhA6uL8Ut42NhQ6FB
eMExEg7J+F5U142FT6/ytPtOkFCyN4m6eTEGMiuoC0LWJDT6GsJwzIyB8/XX
nmy0I2HEsc/TRy1jYFPbgNkRBxIeFNU6Ik+Ngene/1Zcv0zCjx6+uLUpGrJH
H71OvkLCT12pdRWB0XBhSsyx9gYJ1zl+TN5kGA0K3xxWzd0iof2S0pel5GiY
WWxpYfiR8LXbptuZA1GQI6jirRFIwioSxdcwOwocxWK224WS0KkTb/+4GQVK
RL6J+xG8+q4c+/LxWBTMMk5HvoglYZl/3ISzahTkrqo+MJREQrEnY3Jj0lHg
tH7jb5HHJLy7lTB9UyQKtioHZylmkfC3Yfv3sPlI+Kb6zcIkl5fPs/603ddI
KFA3kfAsIqE+Y6REayYSnPeXvHlUQsLd2X/rnX9EwvaDHCfuG54+NdOPdgpF
wQ+T26t/VpJwXt4/YIAeBUWWE22sOhLmif8bStsRBW62uj6aTSR0NNBe024e
BSoXc1QutPP8O/e6NycgCn65kibDekh4dbzc/8q7KHjh4Rb9apCEAfq2CY5L
ouGqT6/u2BgJm/LuLf1iEA1qQfh3+ScS0veultqcEg2LD1Oebp0hYXFxCKgK
xEBxnIiV2XcSLr1FK71gFwPX084Tbi+QUNGzTlC0LwZ2ZTe+ffKPhA2/b0jv
OxYLfwq2OrcIkZFIYz8xGY6F0lcRaxeXkTHg+o+ma85xcKPid8eqlWRc21C4
eZQYD3vqLf0OkMgoRT9aVfEqHv61vlO7RCdjp4LJjXTVBCjrlZ+KZJFx3yO+
PRZRCeA5GhD7RpaMP5cui6DxJ4L61Iz+R3kyXpRi07/YJwL/tyN8kpvJSB6P
Nf85mAjli8+fqWwho1NuxzLNY0ngJSh9ylKFjJwjWuXTvPv2P7GbJN/dPL7x
GbJClskgRByreKpBxh3NIsXhU8nwjrHftUOLx3/94z8vPFLg9qos+X+6ZDTc
cCrmDj0V9q2X7F57iIxBB2Rn+F6mgrCy8119YzKq//pSvc4qDSpVu3a5mJFx
U33uHHXlI/BR3z0da0XG9rdL+drfPgKt/YnxFTa89ai13d7jMYgcXHLw8zky
vt+cETSmng7VJmcFyI5k7KoNyN4nlgF+lvV5u1zIGEPubA/pyYADtkrWp6+R
cYl61Hhj7hMQvRhGCfAko96vdn2B+5lQ4zpfledNRtK1iOXyLllw18P8So8/
Gf8t0UlSP5kNuj5v1gsGkzF+43lJvaNPYXnQmt71YWSUE9S1S5bLgfqHfvcO
RZFxmv1vivQ4B+7Ffd5zNZ6MOxNWv/654Rnopx2cSUwho2gb3zutvGewIrsg
8X06z1/1Ekm+PbnALaAf/ppNxityiV8YdbkQ/MpdiJ7Pq0dwPSvCPA8MK4YK
8AUZCSumVtrO5oFE/b4ztqVkXK+U5HjTPx+aWtNpwW/J+O7R4Wv9awogpFe8
pqiajIspeML5XQEcGnW8NlDP84f0yn2nTSEQp9o2Lm0ho0HzX+s1YkXQMqfa
v7mT56fk8Y61eUXwYDE2yKiPjDfHfpQrWzyHI4IC6jeGybiQNK23c/kLIIvZ
zKZ+IGOG088WpVcvoJ1Qk1w/RcbJnTcmhR1fwkPG5qPfv5LR20fzdIZcMRiv
ChGW/snzc/DuUbGhYqCu/1G09zcZzwY+otFiS6BT6djZ8/wUfKe363Dp8VcQ
oVrKeCBMwf4tHxcnpUrBVH1VXbEYBXefv23pP1gKjP133EckKPiY1r/RN+01
dBtObhajUNAicMmLMzvKIMpEf1CZScH7wUzj1JgyOG6Ze/8Yh4KV+jcmvwq8
ASlbyn9eayhoHsXZqGH3Bnodrn5LX09BbXJNhH/zG4h17U9tUqAghSns8npn
OZh7aBjPb6WgcKFhR2tqObB80kRk1Cjo88IjuVTiLfQHir7UBgqyuqyjLl5/
C/EPL5y7uJeCdXpZx/on3oJlXLNUxH4KHjj24czi0XfASdve8FqfggLF9YrF
b9/BYFaUx4fDFNzZkEuWVK6AxIK/iitNKZjBJ+0wk1ABJ1+dHN5uQcGftX4P
dCUqYVVFZajFKQoamxwZoXlWwkjd+n13bCnIH1FcoT1TCcmtgT+y7Cnoe1Xw
JdeyCk73zj5qu0TBuYRM08SmKlg9amT6x5WCNtWvLJ9pVMPYp5eia9wpGPaV
XjCXVw1pc6wSXS8K2i3+WXZyzXuwWfSyv+xDwULqpxfjD9/DWsEPrJgACraG
LmhcFamBD6I6jW/vU7AqeBsf4WoNPCY8vfnpIQXlN87Tkz/VgC2DuIUYQ0FR
pZwVsua1sG6V66haIgXnc76+8GmohY/resJOplGwW9nzeBXUQYYSaPk/oeAS
P9m4zpw6sFNN/vUsh4JPjhvH5crUwwb1pRldBRQ86VQ9oxtSD1Pa547zF1Ow
pTXqcbxAA2QacpevK6NgaNUl8+RLDXDeZEupYQUv/lc1pYPDDbDJMtzBrYaC
KysT25IOcmH6zCIngUtBwUjt+yFlXMh2ONFc1UrBj3YGSfeojeDg+vbWly4e
3zmlHTH6jaDgIbeNOkBBff0xqpN3I8zcuTu+Z5SCX6YFCiVKGiEn8Eu4zUcK
uvCf6L882wiODw/vD5ym4N+1dy/HyDeBclzRQsEcBUsMlKZ8LJpgNpWZ2feL
gvEPXYV2PGiCvCwP8yV/KWg10dCW/r4JnApGVmwSpKLRtavNg3+bYOsrrbIj
IlRMle+o7N3SDN/ePXG8Lk7FSxutuuJsm6GgbqVsCoGKEn9c/OVjm8Gl1am1
lkpFV0pn3rWmZtje2+E9J0VFekW/T9SSFvgxsnMHcxUVizdcDvZRbYGiT/ET
GnJUDJx5lbXPvgXc5gSj7DZScUHRm9SZ0AIqi2d0QpSoWBhopKvR2gLzAnW/
X2yn4gqL45t8l7bCC1HF7KGdVNygPNWXpdYKVwkPTixTp+J3tT5ukX0rqDF+
SShpUjGe5f0qI6EVFmXMyk10qOj4bmDxbksrlKwrc/I0pOJPTbVnVsJtcF1p
9ZrHR6m4cbS1YbNqG+xS9W3nHqNiC+uD7cK5NviDUz4/T1Dx7H49h5q4NijV
NlRlW1PRcLWSYGpTG9wwzJ/UtKPil2+Gl4KF2mGPCS3mggMV31qsUA7d0Q58
ltf1Hl7m1Reh1Z1n1w5lZwb/vrpCxX3cP+z52HbwdNibM3aDivef1nLPNrWD
uutjK/HbPL2NFaqXL+kAAY/lxG1+VAwVejI3odIB5XcuvjMLpKItvUxjiX0H
eAW2Ot8OpaLz1upU28QO+O+hilxmBK9ejRxhRnsHCMXFdLbEUnE8JlKDI9YJ
71L5/BeTqBh53lrWCzvBO+v0TtnHPH4Zm001XTpBs6B66kAWFe9BkZNTZicI
v9oYdymXx6e1rmflSCdUvgs2iCqiItAz6mQYXeBT942vvISKq/aa6j092AXa
rSa5H9/w9C2UWl/q1wUivSWnJKuomF42/PlweRdUj3DIqnVUXOv1vsd5sQv8
Pt2utGyiooDo8wn5bd1wYG7C1bediqLlkgWODt0guqi7LqeHiqr6fneOZHRD
rcCz7o5BKjr8oWq0jXVDgCg54N8YFY9xLNb8lOkBXcKV3XKfqKj7U9njlUUP
LGf0TevP8PR19dHaENMD9TLqCS7fqXgy2vmQRncPBK5LPRi3QEXP89Z6QvRe
0FdaJlj5j4pafh9PXzLphRWq9vmfhWjItP0P70X0AhebrMmiNAwx2fLnSFcv
BGtvo+5eSUPdZ7SN7xl9YGgYWX2aRMNRB5u6CbM+kDT5cyWATsNK98ng3Pg+
aD5htSGfRUPn4DDW6pE+CDlT0dsjS8OLJWZ6anL9cMhhXaDgOhq2JUmIzp7r
B6LrPdiwmYYT02Cs9awfWm98nTm0hYZrJEmR2372w4M7R5OuqtCQrH/9QdHu
ATgS+OJw0m5e/oKqC1W3B4D8UHpJjQYN46VzsizqBqA99mbhVy0ats98Yu4U
HYSHqWNn6Ho0tJ/tW39r8yAYZ+2nqx/irXe6Zyp4eBBoBVk1tsY03Oh+VrHI
dRA6SySvB5vR8HlB1KfImEGIeOe86bkVDS3jbK+nvRkE07qu/gEbGv7u7/Lv
GB8ERuvu4KXnaainHeQqt3wIunsS1RUcaSj/q9M8WGkIokaWzBm50FCqR4iy
3HgIzD6dTblxjYZ+oWM7HlwfAqm5+qNpnjQMVBJLX5U0BL0LSksbvGkotMAd
fVo1BLECD59/9+fx/ZIZvvXzEFiILpyVDqah9jPLunTCMLAIFsx9YTQ8+env
EhGVYeinl9edj6Jh+p7UKC3zYYiXWXvjQTwNiwgniyy9hsFynb9CSQoNjwnu
O63zaBg4StODI+k0tFB+6PuvdhiGVA6FiD2l4aFYpS+XZ4YhCQv/25JPw4Lz
gjrJpBE4qc34fuwFDVuXJe30UhmBVYY30rxKafg9SeDQMrMRGDEeNs54y+OT
tJes6DECKSc0lzVX09D7evDS6cQROH0m4+V8PQ0DmMJP1N6NwGqHFedlWmi4
lVx0R3x8BMZcLknv76RhxuvHGyyWjkLajfaGi300vCzXrbpafhRs7qh5RgzT
8F3Hfmtj7VGQC4xTKvtAw/9yt+d/OTMKE2ECIx+meOPEJSWjd0bhcazNg5Wz
NFT7EvNgc+oo2KbW7Nvxk4YE8c0+FeWjsC5r80+L3zR80b/0R+LAKEzmhzy+
w09H/sb8yyWLo5BR8sM0W5iORkF368SpY2D37phYuxgdQ43Z/EFKY7ChrrTk
jwRv/uG7R1R1xmCqZdWFNRQ6ZmuF6QifHoPMnjtsPSYdj/UkP/tybQzsRyYb
L3Po6Nx/O+ZLyBhs/qTvFbOGjvNb+C7ypY/B9Gzulnfr6ShC3jokVToG2QuU
sU8KdAyOLZqH5jFwELj2kLiNjh9eezKsx8ZAUXRAa6caHZ/P+v/1+TkGM5L/
zZ8EOnqv3vUqRWQccuiPMvz30vFCsXddEW0cHGXEzHL309E+7bVAqdw4KK9z
EO/Wp6Ohxq7e/G3jMKvYUsp/hI4F8uKekRrjkKey4+I6Ux6f8A6ynf44XMZo
mYMWdHxz5tzyNabjsFX7X7PbKTrSi2U2vz85Dt8MTt1OsKWjlEB7xtFz41Bg
XLWt2p6OJc2F1JpL4+ByYsOHL5fo+LWy5sLaK+Ow/UxQBNWNjpvn1q04d2Mc
flyY2w/udJSvmyqM8BqH5y7GizZedPwR13Q3x3sc3G4UZwb60HFQJGplvs84
qNxhWxQG8PxYs0o21Xcc5u/dWtl/n443HLcI3uHhl2EfypaE0/FEClnTlDf/
aqzOpU0xdBwWHeyU4cXbmfpU9mgiHe/IBf4evjkOi5nEtutpPJzQrZHgPg4l
+a53Up7Q8WHxiL+52zhcL+nZUZdDR5WBmD8sXj2738HHuQI6qlVIiH60G4c/
tclRzGI69qq4WZXx9ChtWar7Xxmvfpt1c+k8vW70nPtjV8HTd/LURIbBOMAI
Nzukho4HJv/EV+8dh3+TWyxfcumYnvYjXUR1HMpmwyWHW+nos2yu/OLGcbi5
sFi+rJuOKeWPucLscVAXsLysNEBH/chdnY0S4yAg+m6N6Sgd18ZGCLbxj0O5
pHyH50c6/hopDaHPjsEteoDv42k69nhI96YMjcF/MjOqjXN03GU4oeneOAZC
6458+vmLjh0a7prpvP33TvF5DPsvHcvudBxVyBwDbxUpfS1BBo4xKHPkyDHQ
RM9/F0QY6CzEiD7lPQbC2qM5D8UZGG+EFSzHMagy0D5ZSmCg4opdA3pmY+Bj
nEkcpzJQ75Ln4Z+aY6B9QqJCXJqB3MOpiTK88yRy5rLLtlUMZM+fvtvMGIP3
FzrlzOUY+IXjfkFCaAz8XHZ13d7IQJ3dQQZDU6Nw4EaCf6YSA8OuU0g6baMg
ekdoV+t2XvwgT4/Dr0ah9p7t58WdDFzac0ORj3f+A8Lq4mTVGXh4WUicUcAo
6MYqGupoMlA2oolq5jQK4qkP+J10GDhfMVNKPjYK9Zm/cqMMGXhp4qafL45C
YL7Z6fKjDBSfdtvzYu0o6JeUkSeP8erz+Hw5c/korHy3ukrSkoERo1KhNrMj
wK31dVO1ZuDmgCf1nzpGILhlap2VHQM/P18jh69GwLDHsMfXgYG0+FKHM0kj
IDmSH5BzmYH/RnT3WfuMQPMkbU/nFQY2Kd4i7j4/AiGz17/8u8HACnXm2VnD
ETi8MJggd5uBkZQX4b7bRoAosO+QgR8Dz7RLSvIzRqB1WbqgayAD5Va46p34
OwwPJMUL4kIZaPbd7X3q8DAcpTvaVEYw8Npp27b2ymEgy7RRp2MZqPBn4eG3
jGFol1d9T05mYP16mhh/0DCEK8Ze3f2Ygf2ZtUv/XhoGYxX+jdZZDLyiemzP
Z6NhoKF1X0AuA5MeuHAa1YahU+t9YH4RA3OaTyk+Zg1DpMEm7C1hoLzA+e8u
AsNganz/q2A5A9v5DrjsHh8CxonvSRuqGJjZdpj7+z2vn9qYHjlcx8DqD0HC
hVlDEH3h1ZJrTQz0/Gmwwu4+r5+6yBQltTNQ4B23iu7M66c3vG1rehj4362W
JZUmQ9Dn/ZE+O8hAIUuNIIddvH56T6+WPs7AfXtfyFA5vH4a9uy6+icGqusT
Lr8SHAJWLHnz2RkGtp7tUzn1YRAGUq4MBH9n4M70Ss6y2kGIz+wLfr7A81Pq
Q+/T7EGwzFfXGPzHwG7xPxyTkEHglKTOLV3CxCWlvqkCLoMw9HZZqoIoE9d1
16zLMR2EpFp7I+OVTFTYnORstXsQTrY0LfUgMbFZTfM4VWYQZHu2vUijM/GF
p15Is9AgjAxH2jWwmJjcn+4g3zQAKZN/mD9kmbgtP7H4ZcQAnJ61qpdex0TJ
x/Ot5pYDsGah4sa+zUx0Xr8wQ5QfgDH+9Yr2W5gonVV7ZuBLP6QtCxx6oMLE
rO+pBeVF/WAjORtSspuJH7amXivz6Ac5utHeUQ0mGqbv9ezR6ocJzsvvYtpM
PEn1eEqR6IfH8qxHW/SYGOb8w8G5sw/OKnqZHD/ExCN3VBIWEvpgncr4slvG
TLy7zds8/WwfTMKB4gwzJvrkbLX2Vu6DDK3s881WTHyu/OlIyGIvnDMgsBZs
mOjk7PGx5V0vbDB24cqcZ6JKQdtvvcBemLLo9tzvyEQdkcu3hHi/VzNt9ig7
ujDR36TVb1GmF+wvJI1EXOPpk+GmtGOqBza7CIeVeTJx8vuSey8Le2Da3U5z
wpuJmqyEl3dv9sBT74afK+8ycUOtV2+2bg843FNO3xHMxN1n4p7J0XpAMezh
sRNhTCzfuS9kYaQbZmIWxHyimEiZMGnfkNMNz1IsXmXHM1FbZ3/T6+vd4JhZ
fqE9hce/XLDh5f5uUM5fy/mbzsRzrC5RGWo3zBb7N615ykTFF5YFP0a7IO/t
tJdePhN7Vp7gNdcuuFx7aKvzCyb6qRbG8nl1wdaWwrGYUiYSPWxKd/HeG9+7
GeHv3jIxSjVV9BenCwqGb2hPVTNR69dKzvavneAyOTxPbGDi4Gv+ywtvOmH7
rOaTnS1MLOGTMNQO7YSf8xlmpzqZmJeU37DKuhOe869ccbePiVs01ncG7OgE
t2VOr3OHmXjnggfbT7QTVCU7LnZ/YOIc81Ymvb8D5mk7Vwl8ZuLDfJMo9dwO
eMmJb1k3y8ToTK1EAZ8OuCov6H3wJxOnFUXOWZh1wE7FM9uv/Gbi8Ms37kbK
HbC4o/ZDAr8Usn/sZU2JdEAJKERWC0vh3splBpzBdriuFXpgRkwKPye5c+eK
2mG3wc9FqqQUPnyQzDwT3A5/jY5nAUUKX2cIn796th1KLV5bnGFKoaj+v4JN
/7WDh42sRBBHCkfNdTI9pdsBLvi8KVwjhZ2hv15f+tUGfC6fLvWvl0K5rQky
gq1tUOZusFpYUQr1EmfLFXPa4KZ3XtumbVK4+lewyUJAG6jfo/ocVZNCD3tl
Mwu7NhAIu6biDlLoU0JYeVy7DcpjBj6m7JXCI4Fp16fXtsGtlP+i6/ZLodHJ
EHcK7729N/OR7jd9KRw+35HFHWsFoXyxv8wjUihyYbiAXtkKFcUOT/8zlUIX
LVL7TForeL9tsTxnIYW+dwMUD/m2gmbtDkLoKSkcKY5rVbNrBeGW6LcvbaVw
SQ2l4JFuK1R1/7s8bC+Fkvu8M8MUWsFn+NRaUScp9BJ6dJOf2Arak1UdSm5S
+OTC8KcPP1pAZHaDn6m7FE6Ytobv62mB9/NBaje9pHCt/fgGalkL+PN/+/TY
RwprWyZ0TVNb4MAyk9jGACnMX5meJHK3BcQkS/R/3ZdCSp5Hr4xjC9TSOHyc
cCn0bGkoSDRugQDO7WdaMVKoQDm3cHtPC+jKT5x0SJTCIr2P/tVrWkBcUZcU
niaFva9rLM+Kt0D9jpyK0idSmHLQK+T092YIBJLreA5PXwOb3UV9zaCv5Sa/
olAKOwQOfTOvbIaVBr1d24ql8IcVWdXkaTM0GuFd8zKe/99do5MimiHYImWX
d4UUhnJcf6l5NcNBG5HpzBopvKJYbM4+3wySF87Ht3Kl8ALhj5i+UTM0Ozca
/m6VwsNR7CsV2Awh7lsFVndL4X/S8wdvb2iGw94ReToDUigUWnPNj9IMpHu/
TzuN8vRvsyK38jdD6wNLSvRHnn6/R11PfW6CBzHvqsqnpTBbZ9+OHV1NcDRF
/srkHG/cx2SVQUUTUDID1hPmeXrxR2g8edYE7XkzPap/pVB1rXePTlwThBcf
uWclKI3wNO+s0t0mMH77fI+fiDSqbbqaaObWBLRaqZkccWkMm99v32DdBJ3N
nomdBGnUZ+R88jncBJHdo4f4aNJ4fWf7Rn/1Jjg2rC0kLy2NjsfsLNoVmoAx
mVlgsEoadzkGZTuwmqDnq8QZVzlp3D3/7Y+ReBNEz1+mxW+UxpU9XM3A341g
xt/1vlJJGqkxrSnUqUaQWrb72vR2aXyWvubg955G6JNI3EjZJY0R55bEratr
hFjakv7d6tLoRT44W1jSCBacs0HWmtJ45sr7d/FZjcCSr8d7OtL48oRC+Hhc
IwwoKM3mG0qjopzq13vBjZCwIyy596g0BqScOR7h1QiWMH9E6Lg08p8tMxVx
bgQZLXPhjZbSqFrqZDN4phGG9N8UHbaWRrvKy1OrjjdCktGas9fspHGZtqhG
s34jnLTwYyQ7SOPjEovkGY1GkLX5XFtzWRqZeymbPHc0woj9QffZK9LIkP7a
7rWxEVKcCzYzPKSx8/zWnfMyjXDanT6oflsaSbcHzoxRG2GNt/v9s37SGFkv
3KOzohHGA4Y07gdK42JcjN2GJY2Q9mDft+eh0mjlNUIUnefCmZj01MEIad57
b0dL7gQX5FLEjUXipLE4Qmf8YBcXJp44iigm8/x5MO/3oYYLj/PaXhg/lsZG
tb3mTq+4cLZY9ZxHljRqCmsf+5bDhfVvY6Ue5Uqjw8cqrm0qFyZr+BsaiqTx
l5vZ8YYoLmQ0W3v8KJFGo296ozL3uXCu+70iq1waVwVywk/4cmHj8KbhfVXS
GBrcNeTlyYWpj/dD7euksXqDoOOdK1zI+vp9b1iTNJInnDadduKC/bzpj5J2
abzS06dGvsCFzfylj0Z7pHFmWP7n/bNcmBZZZbp8iFfPrqiFJmsuPJW4I7p1
XBpvPNcxfX+SCxdpk8XHP0nj8dfXlRwtuaDI0be/NSONzyXz/N9YcGFGLpf1
5Dtvv1ceHXlizoVnCpTG5gVpTAl7QV3Nw5d2XL258I/n52c0lOZhZehXXrWE
hVHBzKX+PDynqTG6X5SFOFSxwowXL08/LcxxJQvpWzUib5/gwmUjUa1IEgul
epbgN17+rRYXfpXRWShfFLI8msfvu3Vz+gSLhdL2BTdtT3Oh0H77cYnVLNRL
OpGqY8MFF+eo5SrrePnmSWJbbLmw3f3vqxObWaj4abB/uR0Xft4+6eCzhYWi
v2tmKs9x4XlAJeepCgtPHy4t07fngtuD9c3tu1m4R6nL/z5PP9WYwFt/NVho
Y0Y7ct2BC/PJs1vXarPwxZ5DPxd5+OUTo3E9PRbOno+wWeDhq3kvw50PsfCB
PzfWlod3FrP2xxqzsPXw6ztbePF+l3stvDPjxaOVrdA8z4WSmvEnU1YsnBIy
WHaP58/15gPmpDMstBPb4/id58/u7uwVu86z0D3rsst5Ky78HSKUnXJkoalb
+N2B41wo/ejieNeFhfzb/Jx2HeWCx9fuVXnXWCgj9ELfUY8LML+ntduThcuG
FB+f38sFPv5kb4E7LDQxMfGSVuNCmcjSHevvsrAv9sQpp81cuClxbuJgMAuD
I7SsLGS4oEHjRl4JY6HE3LVNXAIXBDhbdBKjWPjozTd2kQAX3sqF/66OZyG1
r01d5GsD3FJYzJpJYaHOYy/jgr4G2LvjxAlaBguVI6Qnn1U3gBC8lcCnLHzo
fs5w9lkDVGjKlZ/JZ6G2OrHoXGQD3NG/6xT0goUnr2yRJ3k0gKbRl9VFpSys
W9AKGT7ZAMIWh9v737JQQOdYQ8PeBqiyLvIRfs9C8Si31KbVDeBrz1Td3MDC
mjyHtlGBBtB29pg82sLCC5wKkuBAPSxzH4l272Sh/eUvZPkX9fD+tpZeah8L
ZyJr/Qzv14N/wJO/dcMsdEvRl7l6ph4OPFiZ8+0DC629Lwcm76wHsRgnK6nP
LLz/4vztOvF6qEvuIOydZaFClXDR9746CHiy8925nyzcy7Tq4mTWgW5evHPo
bxYK3e2LNnSrA/FiQblifjauOXsi3VejDhrKz3QOC7MxsbIjuV60DgJrav1E
l7NRgbiGs6apFgyaFXYqS7Lx7YROYlhYLazsDp0ypbBxtenK0LUmtdA49DP2
JpONpORLmj20Wgj+eNwgncPGR7uOfK7sqIGDX1/zNa1h49Id1n+nH9QAYV42
99d6NoqPThaaG9ZAM5/vKY4iG0crxjJYojUQIjJF0t7GxlCvufV7yt/DYQnD
Sgc1Nj75Y7Hzvdt7INHyXcOBjfonm/zrN72HVjZt3eu9bGyMzLI1HaqGMLnr
3eP72Xiqhl18LbQajioM3l1hwMYrQZPf/ttbDZQde3dvP8LGlLRF0fK5Kmjf
83ja3JSNh+qazgonVUG45vIEbws2HnF9NSljUAUm+hcPZp1iY5K48Ps1i5VA
M2oVaLNlo7z4n4eyaZXQaa6S/9uejWNXRbZsMqyESOsY69VObPR/nlVyZL4C
jtnzUXXd2LjxUapfZmIFMJxPVzu5s1F4WktAa38F9FyvvhLtxdPb99Tw1pl3
EH1744a3PmyUScvddu/hOzALCO6dDGDjxRNapyx3vQOpB9/uEULY+OXFAcU3
Q2+hL9oE1MLZeM+OYFp+5y3EJZfMWMWw0avQ2Mdlw1uweMJJ8ktkY+CWPO0Z
bjmw824ffpbGxoOcU0s0LpfDwMsJoa4nbLwda/XTnVYOCeW6hXzP2GgZx5Up
LHkDljU5Z+QL2Yhzz7V/W74BmWYS3bCYjXfMtn20WvIGhrvcalzL2PicPan0
K70MkoZ6r8VXsLFY9ssiV78MTn7ETVU1bHTW3eo79+E1yH5N6Z/m8uo/fHq/
2JbXMPpLJJjSxkb3B/R4YY9SSOGzV9/TzUbD65skhepegbVI06z1ABvdkoPV
ZRivYI3EtpR7o2zUvv9f3pWzJTBOjTxa8JGNIcmb1da+LIY09h/hvmk2zowo
P9ZZXgxn5KyeC31j4/kXxol/TrwEeYWKsxvn2XhdXav5SMELmNi+jnnkLxv3
7Xzebrv8BRyJ1xx/xc/B1DalbYbWz2Fr8q/Sg0IcJBVEHueUFQH5UUb4mDAH
Lxb7xHyWKoLvGWYXryzj4LOoY5tqrxVCW/aK/eLLOahauXRNbW8BFOaWySSu
4GDVZMK1v1AADwsvLWyV5GBfnq+oc2o+uLxc3VJN5OBVA8N7u8Xzwai0/YkZ
hYOTrduTrV3zYEe57+0ZGgcvOP7XND+SC9RKNfPbTA72L5m7veRwLvx8P7WN
xuJgba4jNfTdM+isj1uRyeFgwROTpicqz+B5k+EHkOWgbtDEtPHTHIhoEyhr
WcPBFw7PU+Lkc8CtKz/ijDwHF02T9y/f/xRM+2wcF9dzcOqmlbacZjaoDtEO
BG3iYOg+zTcPtbOAPlazSlaRF2/ym56VYSYsTFxfLFTmYEsAI++u+RPontrc
emAbB8m+i59pFzPg5cxgZv8ODi6tctcQ9U2HqG8h3pfUOBhmmLj/ROpjuPZr
r4Xwbg6W5prwUaofwfHfP7ZHAQeXGOa1r59Jg5186Ss3a3BwYl7ndYR0GjCF
jk+82cvBO0+n95gapsLvpeJvjmrx/Km3vX7aNwV6xV5HftzPQeolV8NnFclQ
stLxkrsuB0+erD66TSQZYoiyOpIGHPwhJzA/apAE7tQ22dSDHNQsr/bNi0kE
c6bPb5UjHPQryN8XOp0Au9mqbXVGHPzdrnzJeV8CsGQ/ZVmacjAvWLU2WCMe
/q6NvfPtOAdXrW4uXhCMg/71Bid8LTh42G7lczFuDJRu5leRsuLg0L3sVVHJ
0RCvnCeRc4qD/pZhNp43o8Bju/XH/2w4KOIpnh5uGwkn1KjlHbYc3Hvo1niR
SQTgnvdR585xUNk8acXzg+HA0bjm9M+eg4p7KtgXDj8EPs1NuqEXOeh+NUf9
qXkYDO4fWC3nxEFfo+ABg4sP4I3e/T8vnXn7q1r5jezdUEg8+F+7vhsHN3u4
yv7NCoGbR79nD1/loGTjDPdZ532wMn3k4+LOq0/x2RZJsfugYW5qKerJ208Z
6s7Te4NhlZWYapwXL/6368Qdy4NAwPqVpLI3BxvcFUJaY+7BsK3DZIUPB0Wz
PwqY7gyAt+dl3pr6c/Dcfiei7Qd/SL7YEv05gINrD5Qn3knwg1uXvS/fDOLg
9HrrpNs2vnDabYceOYSDnaIaHZKqPrD3+sc16Q846CGpIltMvQOrPaP/7grn
4K3Dwv5rBbxB6LZeR2MkB9k7znUt/LwFYz7/np6O4em58VT5wC8vqLj7zPdX
HAfDS8pn3IW8IDXolFVAIm+/2G+R8WDchDuhZDVOCgd7vaO3Bap5gk14FSE/
jYNlH2eDsqtvgGb0lU9a6RyU/+HqulLBHdbGb3jX84SX77F6dMyja7A0uS/G
IZuDB4e19hYqXYUPaUHOgs84OOZJTH1d5wZVGer64XkcvB/D+spyc4XH2XNr
NxRy0DnxoePuLS7gm5v6r/Q5B7dPPAz3+XMZbAuNOw8V8+6Lmlkx+3Yn0H65
7Nn4Kw6qBKeVWL66BOtKi/2ulnHwSm+V4+tnjrCs3P7kirccdAjYUrc57yJ8
rGDvTKrgnQ+HX8e1vBzg/fsm4vZqDroSZ+TlCu0ho/7W1PsaDkY10eKF+M+D
f9O2CvN6DnYtPlCYtrIDu7YPsV+5HBSvQ6n5Dls40BXp4t3MQb0tXU7qJ8/A
hj4dA3ob7zyWkcUm/1mD2NAfuawO3n12f+SSVM5p+DT6lE+9m4P0jOlPIpdO
Qd2EVVdrLwdzldKMx/eehMwpYq7tAAeLTnxYOytnBQEzFf6/hzho+uaK5kWG
JZz/5noqeJSDX9PEiUY7LEDv17pdqz9wcG7PudXjR81g0+8e0vOPHJw5stpx
T9AxEOcL/KwzxcMhDQO0YROYFsTKgWkOFj6xPLpTzxgals7GOX3lrRcPvOrK
PQrZYimuS79xMH+o/ZbSmSMQuNLIMPoHB713/wnZTToMF4gi6xTmORjP7vii
2HYQDKgv+d8ucvDvvw2Dc48NQYF5vtvoLwd1RFalsKQNQILNypvkk8FW6sru
jaJ6MLOq8e4NQZn//X/Q/8X/DxttmvI=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.8793323181606763`, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.8793323181606763`, 8.506824845464024}, {0., 
      1.2393117414784056`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.802798756112254*^9, 3.802798828648036*^9, 
  3.80279913645185*^9, 3.8027991880504913`*^9, 3.8028007479976096`*^9, 
  3.8028024024290853`*^9, 3.802803632958767*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"34dd0a74-476a-4848-8cfa-33c04854fe51"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regresi\[OAcute]n log\[IAcute]stica", "Subchapter",
 CellChangeTimes->{{3.7910441307642603`*^9, 3.7910441355342293`*^9}, {
  3.802791442617474*^9, 3.802791446191646*^9}, {3.8027921416957283`*^9, 
  3.802792154126571*^9}, {3.8028009223280935`*^9, 
  3.8028009304101396`*^9}},ExpressionUUID->"c3fc7021-3592-4466-afc1-\
d940ee6b6384"],

Cell[TextData[{
 "Se utiliz\[OAcute] el algoritmo iterativo que se describe en la ecuaci\
\[OAcute]n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvWdUFVfc9v2s9/3yfHzXurH3hr232HvB3ohd0djF3lDEigUbNhTFWEgU
e48aCxpjxd6wN9RoFDRWxMZ7hX/c92RmzjDCgYPm+q3RxdmzZ/fZ+9p1cnUd
0KLH//N//s//GfJ/8V+LLiNqDB7cZWTL/w8/PPsP6d2zf/duHv2Hdu/ZffB3
Xf9fGMbh33D88fff8YQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBCSBrh///6UKVNSx6/Xr19PGD/hzZs3qePd
186+vfs2bdzkdGc3bNiwf/9+pzvrKuLi4rZu2Wp9PXv2zNXB/Mp49OiRdZJu
377d1WEkhBCSdnn58uUPP/zw6tWrVPPx5s2b/fr1SzXvvl6OHzs+ccJEOzZn
TJ9RoniJDu07mN49fPhw3Tp1c+fK/fjxY2U4xm/MiRMnnBNQV3P79u2MGTJO
mjRpx44d4eHhc+bMcfsfN58RPuEJBAUFZc+W/cCBA64OZgoC/bxz507nurl6
9eoC+QsELwzes2cPkrFP7z5I1aVLl+JvdHxGjRqFn7Gxsc71lBBCyDdD165d
U7/xnT179sIFC1PZ06+L6OjomjVqvn792qZ9X1/fVi1bObp7/vx56IE///xT
maBPUatmrW9jZC/ieMSE8RPUz5MnTyKyEEjKJGxV2Lp161wRtJTl3bt3eI+G
DR1WpUqV1q1bO9fxefPm7dq1S/1cELQAqQoxr0wGDhwYdTfKuZ4SQgj5Nvj9
99+bN2ue+v5C3hQtUjQmOib1vf5aGDVq1OJFi+3b95/ob6Ewr127plOYYO7c
uaNHj056ENMM27ZtCw8PVz+NChO6KCgoyBVBS1k+fvwYeSny7du3vXr2crrC
HOM3Rju1YVSYSOFvZhicEEKIc+nateuOHTtc4jUUEdosl3id9omNjS1UsBCU
g/1HkqAwX79+XbhQ4bi4uKQHNHkcPXrUKUOL58+f1y4AMCpMxPHgwYPJ98gp
LApedP36dee6mRIKc9/efdqfRoV569atmzdvOnocCb5502bnBimFCJwV+ODB
A1eHghBCvh3Q7GbOlFnbNIMhg4d0aN9hzZo1586dmzt37oTxEyZNmvT+/Xtl
AeJn/vz5Y/zGzJg+Y/To0X/88Ud8wopB/O3n5zdi+Ag4i8YIFmCyd89e3A0N
DcVPX19frV+7du2qXat2asX1KwOyv17dekbzPXv2ICVnz549buy4DRs2aG8Z
FSb026hRo2A5MDDw119/NSpMUKtmrd27dzs9/HY4c+ZMv379Pn78aLx1+fLl
U6dOXbp4KfLfQElGREQ8ffrU2mWjwtRy7969w46JOB4Bf9+9e2czFlevXrUI
qukoPd6g7t26O3d+2Y7CRHiQ5pEGzp49i/fXNCO0GBWmtV+DBg769OmTzfC7
lufPn6OvrasJCSGEJJmLFy+WKF5CZ/jq1avq1ao3adxEtjCjjYAIgciUu1CP
LVu0VBvPw/eFV65UWQbB0DqjAZKRIjwF8aA2nrx8+bJSxUpoc7UeQe1kzZI1
0Xbtv8n0adN9fHx0hoGzAgcPGqxabX9//+HDhqu7OoUJVYmckmWc0EtwzVRh
Dh0yFDZTJA6WQJhVqVLF0SpTNPf58ubDlSN7DgQbVzq3dGKCSzshboq1wgxe
GCzuZMyQURxHP0tM8ubJmyVzFphky5rNs5XnsmXLEi2ffXr3kWdz5sgpruFS
QdWuY9Ty4MEDRN+JksaOwixcqLCECvHVRRxXont27CtM6G3UIV80Ap864JWR
iGfKmEl3CwWyZo2akJouCRghhHxjbNm8pU7tOkZzNFUQJ+rnoIGD2rVtJ3+H
hYWhJdW2HWVKl/n111/lb1TRY/zGyN/efb1z58otpxJFR0drN2IIUEqo6u/d
u+e8CH07QDDMmjlLa3Lr1i2oLPyvTCDPIISOHDkiP7UKM/JSJNL28uXLynJE
RISpwgwICPD29k6ROFji4eGBspSotQ0bNijNZt9xa4WpqFe3njiuO9ngwoUL
KPNyq369+to0t+CXX36RR5ApduzPnj0b74jR/OHDh0cTwzjE+kWz5Cp2Xbp0
sflIvG2FKX3SlDhiK/lYKMz4hHWnqvoihBCSHNauXdugQQOjOZqqgQMHqp9o
j77//nv5G01SoYKFFi9arK7OnTqjbZW7y5Yty++ePy4uDkpmypQpaMHDVv2t
IoKCgq5evWr0KGOGjDdu3HB+xL5+vLy85s2bpzUJDAyEwtRNOxYrWkwNY2oV
5qRJkzJnyqwdf3OkMANnBXbv1t35EbBk27Zt6IzYmUJ1icIU2rZpK3dr16pt
Z6T9SxUmXpOiRYqePXtWZ75r165+iWHMx7SjMNevX+9R38O+s6mJtcJ8+fIl
ipnNDgUhhBALduzYgYbeaG6hMHv26Fm2TFlHDr548SJ7tuxbNm+ZM2cOWqKf
Qn/y8Pi7rdG6pkCrjaqeC+xNgYqYPm261gRSEMmlU2VFChcZNnSY/K1TmFDv
WpuOFCY6Av3793dy6BOjVs1aS5YssbYTHR2N8omSo2Tbzz/9fODAgZiYxM8f
cIrCDAkJUbPekMQW7iBIO3fuhNRXU88o+fv370cUrAPg4+PTtWvXRKNjB5sK
Ex26TRs3NWzYUIJavVr1devWHTt6zM5uL5sKs3KlysgprcnBgweXf0a3MODh
w4fqlnbI3elE3Y2CF0giiXiG9BnEU920eI/uPdQLRQghJMlcv349T+48RnML
hbl3z9706dJr9y+g6j58+LD6icYaOmfwoMHxCUs6c2TPERoaajofisYub568
XIdpyty5c3VTqDdv3kTKa4e8/vjjj0wZM5nOkl+8eBHN6J07d5Tl48eOmypM
dBmCFwanSBwccObMGYTk/v37pnchoVFgoP0Q2bp16ipJkDVLVl9f3zKly0C/
eXX22r17t0XJOXHiBB5JdBbeWmFCoCqFuSh4kakLYavC0IdCUKGZ27Vtp8bH
Ro8eXb5ceYj8jh06Qid/+PDB9HFkCuxAZVmH0w7WChNvor+/f7my5RDUDu07
VKtaTYJaqWKlAQMG5M6VG2/iiOEjdCuldQQFBeER6yE+iFV48eTJE60hhJyj
lJw/f766FRkZaS+uSWH79u3KI+2l29SPzEKVhZ5yyoWEEELSPlBo165du5MA
5Meli5dgePfOXZjjfzQEV65ciYr6Z78q/kBdCpu3b99Whmj4oDAfPXqkdRaN
EVpeNEOy2BL/o5VEW69Oxhs1alT7du1lPy9EzsiRI7V7e2WsbOPGjfIT7VfB
AgVNNxGgzoc7zk2TtMC7d++QF8gR5AISHNkhu4YvX76MTJGsQWP6119/iX2Y
i2X8r84/P3jwoHGJbMjikObNmou8RyP4ww8/qNWtcXFxkEm1a9VW2RQQENCm
dZuXL1/ib7T4yFDkC+SoTphBbJw7dy6l0sKMyZMn16hew/QWtFbjRo2l6V+7
dm28YZYcJVbGcnF17drVuBxx1cpVKJBIJWhRFFqU1Tlz5jgKibXChMhXOsSY
REjSFs1byN2fQn+KN8ySI51l0A8XEt90kBByGi+grCRJMnAZLyDSrXq16giV
cX8NdGzJEiURjAL5C4iG1M2SP3/+vFPHThZaesqUKUhJ5BpSFZ1N/L1l8xbT
wIwdM9Y4RY7gQXWL+7rjDlQaVqlcJckpYAebChOplyF9BrWwnBBC/pugJleb
YdOnS585U2YYoqVQlTn+UE2nd19vValqJ+aGDxu+bNkyrbP+/v6TE0ALG5/Q
zk6aNAlNDMyVnf379w8bOmzihInTp0037odF+6Xa0wsXLsyfP980/AMHDvzx
xx+TmQhpEMgk5AVyRFIbeYR2HNIIhmi81ESq+qZz3jx53T5vlxZZFZ+gT0qW
LCknQWk5c+aMr68vhCVa+UOHDinzkJAQZNPUqVP9J/5vNkGmjvEbA4kVvDD4
xIkT6Cl4e3trxdKDBw+KFC6SysPI6FY4+mYoJLEkhep6mK7DRMkXQ9PVF/ax
UJhQGlWqVJG7QwYPMT7r5eUld9WeONN1mNC6YtirZy/TMEAGJ/PQe7yYyPQp
CeAPPz8/7VIKdGQKFyosYVBf0TKuw4TIVBvM169fn+TAQECazjJLB0dKvjpA
4M2bN8rTlD7QQBaHy5cupW78MwHj8HLpUqXRi0nRwBBCSNonKipKlEz1atWV
IRqL7Nmyw1D3EZM1a9bkzpVbNzt56eIl080+KQ0al/LlystOc6cD0bt3z949
ttHO8juLJUuWSFsWEBCgDLdt3SZKUndONeQKxJVupHfWzFmzZ892esB0XqT+
l25KliipW2IqRByPUJ0gJXJMFeb4ceOVXEnOVy+VwoTQkrmA27dv441Ax6dG
9Rowd8/nDlVm3JEkn+CUS605NFWYyH3V0TA9m6hP7z7acxucDrJYBVXNVpju
9KlTu44YQvQm2buCBQpKz1THpo2bVDDUJx7w6inD1Pn6pPVOH6F169apv/eN
EELSIGr1l/bzbTVr1IRJubLltI2jV2evkSNHGl2YOnVq6n+yedzYcckZKrFm
586dEGytbWM635pMZNMTcqFI4SLqvPoHDx5IZvn5+Smbr1+/hvL/7bffdC7E
xcW1atnKOIzpLB4+fIjOhdMjbg2SBdFHZ8d4C8JD6Q31LRhThTlzxkxlMznb
Q5TCLJC/QIPP5HfPL4ZVq1Z1JHvCw8NVANRqT1OFKWsX5Tpz5ozRKcQFvic5
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
fwFPoQ+l2xKVaHgSDSSCgTRHHI1bGm26HJ9wXhmCpz2aVSwgsigtppslCSGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEKIHcLDw53u5o0bN+7du+d0ZwkhhBBCSNpn0qRJBw8eTNTahQsXFgUvmjp1
qundV69eLVu2LHBW4Pnz58Xk3bt3gwcNjrwU6cywpmE+fvz46dMnV4eCEEII
IcT1rFmzZv78+XZsRkVF+fn5uf2Pm+nduLi47du3Z8uabfXq1VrDli1aQnw6
J6xplWfPnu3Zs6dO7Tr439VhIYQQQghxMffv3y9XtlxsbKxN+4cOHXKkMIXi
xYprFSZYunTpoIGDkh7ENE94eLiPj8+WzVuQMrt27XJ1cAghhBBCXIy/v3/I
4hD79pOgMOPi4sqWKRsTE5PEIH4lvHr1yqbCfP/+/YkTJ1IhSMkn4ngE5/0J
IYQQ8kV8/PixUMFCN27cMN66cuVKaGjounXr/vrrL625qcJ8+PDhzp07RY0Y
FSbo379/8MJg5wY+rWFTYSLNBw0cdObMmdQJVTI5cuSIr6+vq0NBCCGEkKRT
r269hg0btmzRUnfBsHat2u/fv3e6j7du3cqbJ69ukCo2NrZ7t+4hi0Oio6Mh
Pvv26bts2TJ1V6cw375926d3H4iQ8+fPHz58eOTIkXDQqDCXLl3q1dnL6eE3
ZdPGTdWrVXd01aldp2mTpqNHj/71119fvnzpRH9tKkzIS3jtRH+dgihJAXmq
vbVx40Ykl6sCRogFqLss3qZTp0452pboCLzFa9assfDu6NGjU6ZMmTB+wtYt
W3VviuLJkyeoM8eNHTf3/2/vXLyiqNs4/k8sclMB4yKQFygvyKUTUEZeIQlN
UES8oARqCSSCgqLHVBDBGxoJanTU0FjCkMRMDUVBU7wEUUhWuqICsggclPeJ
3+u8887szo647IJ+P2cOZ/f5zc48O8w+8/3dnt/WrbW1tfyimpqaV2fmIwCg
73Dw4MGvu5k0cRJpFdreG//e18948uSJ3s9YWFjo956fwLhwwcJViau4tx0d
HSOGj+CEk0BhhoWFRS6O5N6SOrW0sBQrTBKfbmPd9Ou8NiiGsyvm6eHJLiOp
Su4y7t27d8mSJUNshpCd/h7Yf0Bf55WjMHds3xE8M1hfZ9QjO3fsZNeKtqam
JkHptA+mfXXgK6M4BoA2mpubZ8+aff7ceW2lLiNdhjoMlXk0tVpNgtDe3v4N
1zc07tDa2hoSHOL9tveFCxeo6r1g/gKKaXV1dYLdjh8/bmNtk5mZefv2bVKh
dMD09HSutLOzk5Tn4cOHZXoFAAD65eOPP2bP+nnh83r1RLm5uQH+AXzLP//8
YzrAlJQn30gacsrkKew1X2H+/vvvJgoTZYGSv7PVYCuxwqysrLSztdOz97og
XcQu45w5cwRFDx48oKcPK12xYoX4s9ODpvt4+0hsMctjBB/RqTDppPS8o4v2
4l9N70grTBLtVMt46RMCgH5EY2Mjxa6LFy9q2yFiYQTdzDIVplKp3Pj5RqqK
0ke0KcypU6ZScKu/Vc/eUtX7La+3HOwd+CPMT548SfGTH1K++eYbOmZaWhr/
UHGxcYcOHZLjGAAA6BeDKcwD+w/4T/XnW86fO0/npTjJN0ZHRw8fNpy95itM
2o1eC9oQNCpMehA4DnXUr/M6kVCYxPZt21npAJMBv/zyi6BUrVY3SSKefa9T
YSYnJS+KWPTi36s3kFaYxIcffpiWmia2A2B46Nfn/bZ31q4sbTvk5+fPnzdf
vsJkI4Xox6tNYf70009U9MmyT/hGph75HfF+7/mRpaGhgb8bHfC1Ia/xx+S0
tra6urr+UPKDHN8AAP2Izs5OSwtLiS0wMNDwXv3111979uwJCgpycnQyNzNn
z3oLcwsSZlSzXrdunbg75sU5deqUh7sH30KxkU569MhRvjE0NJQcY6/5CpN8
pgq7QFNpVJjFxcVU39ev8zqRVphKpZLTVFu2bHnx00krzPb2dns7e0Hj8O6s
3dxdt3fvXn5R+flyrog/DlbvlJf/eyLulqONnVQw2z3vq7wRw0fQb6f3PAFA
JikpKW5j3bQNTf/zzz99vH3u3bsnX2EySPJpU5gsmOTk5PCNNTU1ZLSztWPN
+z///DO9pZ+J4LMUf8iekZHBNx7JP+Jg7yDQogCA/g7FJe5hqnHjeoQNQ0dH
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
AAAAAAAAXhH+AyY1AnM=
     "], {{0, 124.5}, {443., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->144],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{599.4285714285717, Automatic},
   ImageSizeRaw->{443., 124.5},
   PlotRange->{{0, 443.}, {0, 124.5}}]], "Input",ExpressionUUID->
  "688b66b5-596f-44e5-9ba8-371dcbb8e1cc"],
 "\ndel libro de Bishop."
}], "Text",
 CellChangeTimes->{{3.8028031198928666`*^9, 
  3.8028031653463364`*^9}},ExpressionUUID->"e96ff8fa-b38f-40be-b0d3-\
713d9f59b76d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PhiDesignMatrix", "[", "data_", "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "#"}], "}"}], "&"}], ",", "data"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ClassificationProbability", "[", 
     RowBox[{"x_", ",", "w_"}], "]"}], ":=", 
    RowBox[{"LogisticSigmoid", "[", 
     RowBox[{"w", ".", 
      RowBox[{"{", 
       RowBox[{"1", ",", "x"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NewW", "[", 
    RowBox[{"x_", ",", "t_", ",", "wOld_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"y", ",", "RMatrix", ",", "zVector"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"y", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ClassificationProbability", "[", 
           RowBox[{"#", ",", "wOld"}], "]"}], "&"}], ",", "x"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"RMatrix", "=", 
       RowBox[{"DiagonalMatrix", "[", 
        RowBox[{"y", 
         RowBox[{"(", 
          RowBox[{"1", "-", "y"}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"zVector", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"PhiDesignMatrix", "[", "x", "]"}], ".", "wOld"}], "-", 
        RowBox[{
         RowBox[{"Inverse", "[", "RMatrix", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{"y", "-", "t"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Inverse", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"PhiDesignMatrix", "[", "x", "]"}], "]"}], ".", "RMatrix", 
         ".", 
         RowBox[{"PhiDesignMatrix", "[", "x", "]"}]}], "]"}], ".", 
       RowBox[{"Transpose", "[", 
        RowBox[{"PhiDesignMatrix", "[", "x", "]"}], "]"}], ".", "RMatrix", 
       ".", "zVector"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.802798224885173*^9, 3.8027982593341427`*^9}, {
  3.8027999551327624`*^9, 3.8027999744346924`*^9}, {3.802801646311592*^9, 
  3.8028016471663094`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"edd5c214-b647-4fa2-b55b-706347c05452"],

Cell["Se comienza con un peso inicial w0 = {0,0}.", "Text",
 CellChangeTimes->{{3.8028031902078733`*^9, 
  3.80280320061106*^9}},ExpressionUUID->"2235026a-4cc0-4c9c-8855-\
1f0dcc7b752d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", " ", "=", " ", 
   RowBox[{"processedDatabase", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", " ", "=", " ", 
   RowBox[{"processedDatabase", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.802792294071384*^9, 3.8027923317692327`*^9}, {
  3.802792430637966*^9, 3.8027924322150335`*^9}, {3.802798105389284*^9, 
  3.8027981171901803`*^9}, {3.802798267149305*^9, 3.8027982680605497`*^9}, {
  3.802798477101254*^9, 3.802798477291787*^9}, {3.802801008803035*^9, 
  3.8028010154666395`*^9}, {3.8028012339684772`*^9, 3.8028012424012833`*^9}, {
  3.802801895646984*^9, 3.8028018988413353`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"0bfd9523-cfa3-467d-8a19-afab3c0527f0"],

Cell[TextData[{
 "La funci\[OAcute]n ",
 StyleBox["NewW",
  FontWeight->"Bold"],
 " devuelve el nuevo valor de w."
}], "Text",
 CellChangeTimes->{{3.802803212915157*^9, 
  3.8028032234839525`*^9}},ExpressionUUID->"a933d300-12ca-44ff-b8b8-\
9d85bb8d1a09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NewW", "[", 
  RowBox[{"x", ",", "t", ",", "w0"}], "]"}]], "Input",
 CellChangeTimes->{{3.802803209927149*^9, 3.80280321002289*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"1a7b7c26-e109-4659-88df-44b7b96247ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10.366166265961425`", ",", 
   RowBox[{"-", "1.7881949742903962`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8028032106382427`*^9, 3.8028036330375557`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"3e592e7e-6262-4f42-8951-b2cba81d9818"]
}, Open  ]],

Cell["Se itera 10 veces", "Text",
 CellChangeTimes->{{3.802803231498474*^9, 
  3.8028032355566187`*^9}},ExpressionUUID->"7eb4b876-35be-439a-bbbd-\
3eb58fe24875"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ws", " ", "=", " ", 
  RowBox[{"Drop", "[", 
   RowBox[{
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NewW", "[", 
        RowBox[{"x", ",", "t", ",", "#"}], "]"}], "&"}], ",", "w0", ",", 
      "10"}], "]"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.802801915102618*^9, 3.8028019443913856`*^9}, {
  3.8028021825829067`*^9, 3.8028021841048336`*^9}, {3.8028023351948595`*^9, 
  3.802802338256674*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"87172767-f5f9-4030-b001-a37e3e293126"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10.366166265961425`", ",", 
     RowBox[{"-", "1.7881949742903962`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17.99598081965982`", ",", 
     RowBox[{"-", "3.13951207343769`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25.8627613590116`", ",", 
     RowBox[{"-", "4.54225093741307`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32.929834922406286`", ",", 
     RowBox[{"-", "5.804137920071371`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37.29840728161943`", ",", 
     RowBox[{"-", "6.582902344976922`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38.480748302064754`", ",", 
     RowBox[{"-", "6.79308791483496`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38.54673582738184`", ",", 
     RowBox[{"-", "6.804789381997827`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38.546925325503`", ",", 
     RowBox[{"-", "6.804822922724385`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38.546925327037016`", ",", 
     RowBox[{"-", "6.804822922995527`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38.546925327052435`", ",", 
     RowBox[{"-", "6.804822922998264`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.802801934774322*^9, 3.802801944698615*^9}, 
   3.8028021846264353`*^9, 3.802802338662583*^9, {3.802803628618351*^9, 
   3.8028036330864253`*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"a02e003e-2bd8-47e2-b889-e2595c2b44b0"]
}, Open  ]],

Cell["\<\
A continuaci\[OAcute]n se muestran las fronteras \[OAcute]ptimas y las gr\
\[AAcute]ficas para las 10 iteraciones.\
\>", "Text",
 CellChangeTimes->{{3.8028032479145823`*^9, 
  3.802803266555756*^9}},ExpressionUUID->"da8d9c79-ab7a-4135-84d2-\
c4c17439aca8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CalculateFrontier", "[", "w_", "]"}], ":=", 
   RowBox[{"First", "[", 
    RowBox[{"xt", " ", "/.", " ", 
     RowBox[{"Quiet", " ", "@", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ClassificationProbability", "[", 
          RowBox[{"xt", ",", "w"}], "]"}], "\[Equal]", "0.5"}], ",", "xt"}], 
       "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotLogisticClassifier", "[", "w_", "]"}], ":=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"onlySetosa", ",", "onlyVirginica"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "10"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.1"}], ",", "1.1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Setosa\>\"", ",", "\"\<Virginica\>\""}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Sepal length\>\"", ",", "\"\<P(Setosa | Sepal length)\>\""}], 
         "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotMarkers", "\[Rule]", "None"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0., 0.76, 0.33], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0., 0.5066666666666667, 0.22000000000000003`],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
              NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0., 0.76, 0.33]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0., 0.76, 0.33],
           Editable->False,
           Selectable->False], ",", 
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0.9, 0.05, 0.], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0.6000000000000001, 0.03333333333333334, 0.],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
              NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0.9, 0.05, 0.]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0.9, 0.05, 0.],
           Editable->False,
           Selectable->False]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"GridLines", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"CalculateFrontier", "[", "w", "]"}], "}"}], ",", 
          RowBox[{"{", "0.5", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"GridLinesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Gray", ",", 
          RowBox[{"Opacity", "[", "0.3", "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLabel", "\[Rule]", "w"}]}], "\[IndentingNewLine]", "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ClassificationProbability", "[", 
          RowBox[{"xt", ",", "w"}], "]"}], ",", 
         RowBox[{"1", "-", 
          RowBox[{"ClassificationProbability", "[", 
           RowBox[{"xt", ",", "w"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"xt", ",", "0", ",", "10"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0., 0.76, 0.33], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0., 0.5066666666666667, 0.22000000000000003`],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
              NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0., 0.76, 0.33]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0., 0.76, 0.33],
           Editable->False,
           Selectable->False], ",", 
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0.9, 0.05, 0.], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0.6000000000000001, 0.03333333333333334, 0.],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
              NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0.9, 0.05, 0.]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0.9, 0.05, 0.],
           Editable->False,
           Selectable->False]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<P(Setosa|Sepal length)\>\"", ",", 
          "\"\<P(Virginica|Sepal length)\>\""}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.802802206319455*^9, 3.8028022838042593`*^9}, {
  3.8028023588196864`*^9, 3.802802374790986*^9}, {3.802803582592449*^9, 
  3.802803583111062*^9}, {3.8028036499376945`*^9, 3.8028037092050257`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"15c174d5-d07b-459f-bf13-fa3a0b014c15"],

Cell["\<\
Para calcular la frontera \[OAcute]ptima se busca el valor de la longitud de \
s\[EAcute]palo que da una probabilidad igual a 0.5. Se muestran las fronteras \
\[OAcute]ptimas por iteraci\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.8028032726175594`*^9, 3.802803275250491*^9}, {
  3.802803398878937*^9, 
  3.802803445704737*^9}},ExpressionUUID->"1c37dfed-9610-4263-9c1d-\
0d075eaec069"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"frontiers", " ", "=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{"CalculateFrontier", ",", "ws"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.802802294565486*^9, 3.8028023257760644`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"3f3b82ab-5757-4b99-a5f6-02e91be387b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.796999999999999`", ",", "5.732094796486849`", ",", "5.693820468171033`", 
   ",", "5.67351006745225`", ",", "5.6659517834226945`", ",", 
   "5.66469163721984`", ",", "5.6646478918741865`", ",", "5.664647818648941`",
    ",", "5.664647818648661`", ",", "5.664647818648648`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8028023009125166`*^9, 3.802802342290881*^9}, 
   3.8028036331931434`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"aea3504f-ebf2-4249-b911-94f5cc9c48f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bestFrontier", " ", "=", " ", 
  RowBox[{"Last", "[", "frontiers", "]"}]}]], "Input",
 CellChangeTimes->{{3.8028025649139733`*^9, 3.802802570574835*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"c20c23cc-3cad-4499-8d10-1b4f83e05f31"],

Cell[BoxData["5.664647818648648`"], "Output",
 CellChangeTimes->{3.8028025711014223`*^9, 3.8028036333297744`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"43d5979a-9246-48d4-8a58-413e84724b2d"]
}, Open  ]],

Cell["\<\
Posici\[OAcute]n de la frontera \[OAcute]ptima en el histograma de los datos \
por cada iteraci\[OAcute]n. En la etiqueta se muestra el valor de w.\
\>", "Text",
 CellChangeTimes->{{3.8028032836799617`*^9, 
  3.8028033156544704`*^9}},ExpressionUUID->"53ab4984-b57f-4b77-a704-\
94b2201374d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SmoothHistogram", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sepalLengthSetosa", ",", "sepalLengthVirginica"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Setosa\>\"", ",", "\"\<Virginica\>\""}], "}"}]}], ",", 
      RowBox[{"GridLines", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", "#1", "}"}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "#2"}]}], "]"}], "&"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"frontiers", ",", "ws"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8028024088798423`*^9, 3.802802474372732*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"ef2ffc98-dc2d-45fd-afb3-383ae30a7d90"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
jaJ6MLOq8e4NQZn//X/Q/8X/DxttmvI=
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {3.8793323181606763`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{5.796999999999999}, {5.796999999999999}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"10.366166265961425`", ",", 
             RowBox[{"-", "1.7881949742903962`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{3.8793323181606763`, 8.506824845464024}, {0., 
        1.2393117414784056`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
jaJ6MLOq8e4NQZn//X/Q/8X/DxttmvI=
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {3.8793323181606763`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{5.732094796486849}, {5.732094796486849}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"17.99598081965982`", ",", 
             RowBox[{"-", "3.13951207343769`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{3.8793323181606763`, 8.506824845464024}, {0., 
        1.2393117414784056`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
jaJ6MLOq8e4NQZn//X/Q/8X/DxttmvI=
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {3.8793323181606763`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{5.693820468171033}, {5.693820468171033}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"25.8627613590116`", ",", 
             RowBox[{"-", "4.54225093741307`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{3.8793323181606763`, 8.506824845464024}, {0., 
        1.2393117414784056`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxdm3c41X/4/0UhFWefk4qIUImM8qG672QllSYqJZEykqRIiAhRaKBkFIUk
IyvZIdl7771nZef3/l3X9/r+8fWP632d8z6P+/Uc99v5g5Ch5SljdjY2NgkO
Nrb//7u0WdtMo5gP2f7n5/9e03daV2VV8OHl8tht4o1GcNn+1T75Oj78nRLq
GCJ6DaJKUoNjmvnwzeDWNyZuJjC1qZlDuJMPa7Y8Xlc2dx2UzJduBPbxoZ/B
9R47Z1NwzRCo5B3hQzXdvq/BW8yhbP2hvW6TfNjps3pHWIUFMPWvvl38w4f+
m+MMbQItwSDWjf32Ih/Wpp218c64BXX/TsvdYSPho9r8XrVvVjC/3dhEioOE
mTcqVSbyboPAibtvhteQ8LeTbQhvszUcvude9oGbhMz6S9l7Vu6ASWgg25V1
JBTa2KwwJHMXvH9Gy27mJWHEbwX9Xzb3IGEi/VoDiYSLxQJKpkW2UMcsff2c
SkIelV5/k533YQHaSo8xSCjb2ddlEGoPgtfHV7g3klD+TIzUvIgDHPZdkcnf
REKDh9XiDRmOcD2NdM1JgIRhzbUO1bIP4Wmn0GtFIRLOPZUR5aY6QwK3bOmf
bSS0Jd9cZ7zkDPXSKivx20moKdh+9vCkCyzqnpUxlyDhmU8+uf/GH4Gg8zVj
sV0kTLRTfPV7zhVUou8Fdu8m4bejDX6PeB/DjSqPkuA9BF+0smudtDs8nX/9
T1eOhP7kfM4JfQ9IFIrZQ9tHwq9KjQU+gZ7QcCTDqOI/Eu5c60c51fkEFq3K
Ap7sJ2Gvx+65N/LesPVNe7EqkJBq5eFcGfgUVPMmltmUifO8uxaqx+MDN4bZ
9mSokDCd+onzhKovPKNQjO6pE+f5acPPscEPvipuC5DRJGGLfLm7Q6sfNBjK
FY9pkTDJxoZj5utzWHqiuhx1goSOGa9uBL54AUJfz0kbnSIhK/PS5/f2L0G1
xeSq4FkS5qX05qqZvwJTDjv/Zh0S5l9k1VQZ+4PPzie/Xp0n4V8x1/1nrgdA
0umgJW19Ei5NK6dz3gmERvvPUusNSBiXoDov6vkalsMzDX8akvCIwWBfX+Qb
EC4tf+ViTMJ/zD9/7CqDQO13R9GB6ySkXGsi0zmCwWzz1OKcKQkFTdUdhiAE
fFXYpZIsCL37NbPF3UMhyZxqaHmL0CtoLN/ZPAyaXoq82mFNwrReu8pa/nfw
L0O+qM+GhEZpIZ0R5e9AuE9tMcyWhN2NEj+4Pd6D+gbd3RftSRjdqRvFUA8H
c/kbV5iOJLzSHk3vXRcBvvr3X1Y/JPSI8G50q4+AZDevn08fkZAtbXGOL/ID
NMe+XdB4TMImydWfXzl8hH91sZKrPUnYunxYTeJ8JGz7l2WQ7UXCtQXXdrfu
jwKN7ZUv7j8j4ezW6Ios0WgwP95VKO9HQucdZt6dtE/gd3d6fvIFCc9XNcef
4ImBlBAOyc/+hB7C2cYbOT9DcyHNwOQ1CRtTLcKPcMfCyrjoC+G3RF4bZkRG
SF9AhLmvsC2E6GPrgwtcW+NAAzTmA9+RMGN0RbqGPx4sTPR2nYkgYa5kqO1A
VDw89zG9zBdJwlTg23FYMQFSUu2fF0eT8P5B+d2D5QnQ0uFd4PaZhMsLKzEN
1xKBjTtkDuNIWBS5n4PC/hVEpON2LiWQ0Dgh9qd/2Fc4optzKTWJhIrd1zOM
lJPg5sMqv9upJOQadq6wG0iC51Hd+ZLpJHx5kpNR45MMqZUzs4MZRL78at5a
KaVA69zqnRHZJHRxWlWiM5wCbEKMS5fzSGhzVHXS+G0qiB4R8+MvIOFnnRvb
Ik6mgaaVQn7dTxI+q4qjruP5BjdfH5n1LSbhrc/R7s8LvsGL3PM7tMpIOPyP
7eIe13RIGzLT56okoe6WdJc21e/QSnbwzasm8iA7we7NkwGrFJ/9cKgjoVn7
2nnp6gzYbhj6V6GRuH/eISD7bSZoPomX+N1MQoFgbvEdpllgmZh7Ma6NhOzN
NhsMFbPhZXO1j2knCfcVzXbHcOZAGntvnmgPCS+9H7nrYJUDbTv+/OnsI/xW
9RcKbssB9tOcEm8HSRgTlFO76mgubLdnXtQZIaHPhoPM999y4Wi4uA9lnITc
52y47kjkwa2S//LKJgk9cqUvWbzJg5czmn88Zkg46Z9s9Wj9D/i26aK4yl9i
X+wW/i/G6Qe0H7a4sDJHwuA5snbTzA9gN3d8lr5I+OnxeGHVjXwQe+mTa/OP
2CdXaBIbO/JBKyPst/QqMtawTjlQzhXArd4EsVEOMnIKeBzvKiuAV+t/nI/k
JGPvrtAvtmqFkC5X+9RwLRlNlI5almQXQvvFvpwt68l42/KWWOl/P4HD7e9M
Iy8ZuU2zFSySfoJ4LJfYSzIZK/661YVJFYFWHev8CRoZZabjOfViisBqWeIp
D5OMKQuLCe5iv8BfVCmnYCMZZY8cDROI+AXpx7RmHm4mo1LVTlc+oWLosNHf
vl+QjPOvbNi0QophdchNvVkhMqoOr4sr2FQC4oVO3okiZPQVdzx/53UJHBv3
zbYQI2Nm1UVhZJbCbcb7afEdZBQa/I9/86tS8D/4VbR3F3Hedzrzi5Qy+H4t
XzdUiox+gT0BVb5l0Pmszuu8DBlHF05MPOMth9Wp/Vl0eTJamBoLbfcuB4mO
2anKfcT5jh118lxbAce51op6K5IxhOzsG/O4Am5L8euqHyCjlUWXd/aqSgjQ
2enFjmRcIA/7LUIlZDjtz8pUJmPrRbozh2MldEYem7JVJWOYZvququ+VsKby
koicBqGv1/zzS/OVsGPOUmdCk4wim2s6P+ytguNbnZ98OkbGSSkhm3fWVWCt
8TzTWJuM5uU2PUfjqyDwVvjk1tNkvPG68W/oaBVkBCZtaz1LxsPKhkmB4tXQ
lVNwLkCXjFNaX/X3GFUD51C956kLhJ6Nh62NQ6thB3kwY8MlMorDkxTp5mo4
8d/8RJEBGePd/u70odXAnSs821yvkrHjY85mh+M1EOi56RxcI+ZfdGfNutdA
ZsIuz4XrhP78eX/nc2qgu+lARrIZGfPTZxtc5muAi/3ExK2bZIw6Ur7dZ08t
7NxhILzLiowZm9oCN9+oBe1TVmcHrMnoqnxMSiKsFmzuu3i8v0vGVccO7/ta
Xwuv37/4rm9HRhVjiua39XWQVRwxznpARqa1wjFF5TromU4WqnUkY6Lgttvy
9+qAa9PPMz7OZHxemin/KaYOdh1udNd0JaNRQdHlwI46OGk2lL7GnYwndi6s
YqPWg82LhbEcTzI+1q5371Gthzff1wk98Cb8V97HoWZbD9k9m8/s8yHjxFcH
NYFP9dCzbrf7tB8ZJUiSUtYt9cAtB+mxL4l5yi9Lqa1vAMmL2mPXAwieyJ/5
wP0NcNL1ylaRN4Qfvy88tDBvgLufb5/ueEvGc0aykwVBDRBU++jxm1AynnT5
ER9R3ADZSy+/nX1Pxl8W2gbr5xugV+TjKOkDGdXTNKtWtjfC2mOpgqWRZHQq
u8zlcqYRJG2KTrl/IuM/PQs5f+dGOBXc5KYcS9z/83wyfGmEewXDactxZNy+
ppXXpbkRgsYWR9ISCX97tg4bcDZBDn2D4J1kMhZY3yF37mmCvgMCp6TSyHil
usKcQ78J1l6TchtOJ2Pw2NV/5e5NsPsZpn3IJGNV2ZYOtcQmOJ1ycsQgh4zG
s+JKlq1NcK/dUGDzDzJeu299XIuzGd5y3jnZUEDGB8r7rnRLNUPubjfX50XE
/DLe+fJ6zdB3zj/1WAkZGV6cFZouzcDjFDnMXU74sd64STSmGaQi07bkV5Lx
9+5TSiU1zXC64pe2Uw0ZfZKUNGCpGWxnmx8p1hN9zzis9VikBYIFR1P+NBJ9
PH/cM0KrBXLVl4fiW8go8Ha3XMidFui35N1i3k7G5ug/VvfetsC6QEFtsS4y
SgZfOyuX3wJSOdKPunvIKGrs19o40gJnBg+lBPeTkW3Qf/w6tRXsSKeHdIfI
yHEhUG9QsRWCFYw200bJ2O5bU3nesBXyDGxOVIyTsbBwbPiHZysMeDx2eTJF
RrEd7jaSCa2wPiEgWfU3GQe5Qod8G1tBuilqkG2W2Je/jDRnVlrh7Kr0TRnz
ZJTaxe6tJ9YG9yVKjt9bIqNZ7/aPhcfbIORkq7PMChnr65YsDtxtgx92Y0lj
qyh4xr/uVU5wGwy++zcQtZqCU+Y8sacK2mB9Md8mIy4Kdonybv072gZ7prce
F+Sh4JHaOIVYWjuc45dxbl5Pwa/6TwXu72+H+8qHk17xUbDIMqnhklE7hJqe
GdCmUFBQ49YRfe92yH9uzL+eTsEbjsr/3Utqh8H0u8d+MinoW7b6+JfWdtjQ
4/7QhZ+CXJF7yKvXdIDMutdfD2yhoJjkyUk7yQ44J/upf06Qgue4PA6Sz3WA
/YXvG5OEKXjpgureEscOCHtUqmUpSsFE2obFqMgOyI9pc9ohTkHFRxeCYio7
YKhmPLFvBwVHMZRSO98BvEsrfWGSFLy/KfyDH7kTZETIGy9KU7BMxYJ0bHsn
6GgJazFlKRhMYSRsVuqEB3dknarlKThdnjvEpt0JYW9VEp8qEO93t2AtGHVC
Qf7ZPg0lCp5qWB/Ifb8ThkevsVYfpCDjUmTuLp9O4KXbHs1GCt45cWfsWkQn
yB7wdLx/mIIf705bp37rBF3jNwnyahR0FV38IlBB8J7G9E5qUPCiZ/nC295O
eJecwfx8lIKXJ5mpMgudUNhWpmlynIIjrwfVO/m6YHhNh4PwSeI6M5LxUbQL
+HZPxredpmDDk7/PXZW6QO7cqt7Ac4R/34WDH5zsAl1HCvOMHgV5IugMH5Mu
cPi4TZPvIgWTr3xPTHfogvflcg7FlyiYuqGcd9XLLij8qxrvdoWCA/s4Cgw/
dcGIgE4PGhF5Gb93vzOnC0jq1xlL1yjYqbK9434DwbO0O5J6g4Lr1DS+yIx3
gV7Akwe3zQn+uqgv3Gu6wTE7KE7SkshfbGvi8qZueD/wuXvQioKblqxfU2S7
4SdfFj3iDgUfz3Mf09DshtF9FRqX71EwXFY9P/RKN5AMOu3571Pwm3zLKn67
bpD3mPpS94CCF65q09J8u+F8PHu3rxMFF6Jb6fZRBK+RStdyoaCBD/8uo5xu
CGcT1eByo2ChYqL7ncZuKBLfa5/nTsHtktNXYycJnrb6F4cnFNx3W5eTtLYH
yHa6XQpPCT/FNmQFC/XA3nc3aL99KKiqeqJHR7EHzv+6rx73nILO8bX1cLoH
nKa87pu+omDGC4FVOuY9ELExOFY0kII1oj+qQtx6oOjQl87ONxTsno3NYoX2
wNiNbOrbYEKPWZ3DhWk9QHleqaYTRsHlU3MdUdUEL73LjhJOQZG7cay80R64
0D39uewDBU2Pxd6hcvXCQ57VnR5RFAzjPuMQItQLETJ0qkoMBVU8dTON9vfC
r/Pb1VZiKage1ZVtotML4y777NLjKXjgbiRf9O1eoMRofLb5SsEkH+reHc96
YV+NXod0CnH/y6vpo9G9cHHRlDKaRkGf3PKt0wUEb9sD1cjvFIyLiBtS6u6F
D0ef2hpmEfpaScyV/OuFYuuQmC25xPuFDgiEb+qD8aC49sYfFGz85TKep9AH
1Pwc8stCCp4saBzbda4PFEarVE78omAaOcmh27oPLtJ67vGUUlCgSnK2168P
nPf//lRQTkEpy0uf5OP74KPRmvaHVRRs/ZbbVlfeB8XeDPL+WgoqCEeUFY71
wUSSmMpsPQWvHnods3ZDP9DaFO4lNlFw54fF4NBd/aCwRvOTRSsFLStssj21
+kFf8kKbeAcFWUovBX6Z94PLWXNSbxcFpYUNMi897YePDg6HQ3spqBzN7nf0
Sz+UfHh29/wABQ/9s3T2reiHybLQaPow0b+ejTd2TxG8v/GtlaMU/M4bTdtO
HYD/BPL4vCco+OxDhrKt/ABcUqtRVp+m4NL2uHBR3QFwudlrw/6HyHvv5abd
9gMQ6f8nKnOWgk172e69DBmA0izOVtsFol/OPWw6eQMw2c/kk1um4F76ydG7
/QNA55NQnlihIO/YudDfPIOguE/R5hM7Fekn396qlBqES5ePRhmvoSLpqGwk
z9lBeOR+sWUrNxX/GzW5H35/EKLiLHhbeajYputNDgobhNIGx0MBG6g48CLn
0VThIEyt+Nw5RaLiae7kho9jg8AQfxe5gUrF43XXOL7ThkBRO7G5iE5Fu+Ha
Ecn9Q3DZ9scGVxYVS9fHGq1cHQLXsFqETVTUHpqQkvIegqiiPuuFLVTcbuq1
nJE0BGWTfz8mb6Xi4PNh06i2IZhmcTff2kZFK8d9mVOcw8A4tHHDru1UfLeg
OxkoPQxKN3bggDgVXfqW7N+cHwYDPyXr9zup+O3aAcNZ12Fw/ab1UX83FTWl
E1q/xA1DdJd+E2sPFSej+3lzmoehfK3l+lpZKt76F7JmB+cITO95CD57qfhI
ZCl5ZM8IMM/73db8j4pHOd8vcVwagf0u7z+s2U9FW66St1ZPRsDg09fGnINU
XK2hDbKpI+BWnb/uwSEqrhP8aKXeOwKfFuoO7lOhooZJWcRn8ihUCA9YTatR
UeKM4q4rMAozmnMRsUeoOBGesP+qxSiwrNc2XteiYonglpH4oFE4EMS/TuQE
Fdfc092pUTwKV37sPNhxkorXgmfLt8+PwuOR/VZvzlCRMcHlqik+BjHU4xFn
dajIZVNWE68zBhVKlxtI56mol+EgpOM+Br+v3uIpvUjo8Ws+SjF1DDZ6Ox9w
v0zFG3keDroDY3Ag6fktZUMqynG88ohljoNha3j4shEV589aeOzVGAf31cn1
aSZUxG3r+SZtxyFmV+HaO6ZUvG/V/7A+ehwqzzTsl7Ig8vM6n9rfPA5/Hgxa
DltScX/oxzL+9ROw8cP8+w+3qXhoY8qjWwcm4GAZT72BDRUfRKs3dd+cgKt/
Nq3dbEtFt8mxgxZhE+CxRXJ/w30q+s+GTvFUT8Bn1YOWzx2IeZ0WHrSsmoQq
ixPvjz2kYnXpd3oK/yT8fWVQx/2IiklL3M+fy04Cf5YVd74bFZ2Di0Vvak0C
9LsoOXlQ8XfWlyFV40kw4n15U9GLipfWflRhOk6Cx94P7/48pWL7kOLNdv9J
iL2UUhvvS8VCVb+zgXGTUP34J5f5Cyr+iGzMPlRE8L40Kor5E3n/qHmgoXMS
NjUMWXQHUrHyo8zhs/OTgCsLYcFBVBT7qrgrjTwFRmLra3VDqCivW6qwJDEF
nie2cNHeUZGy5OazRXkKvtzbrVgRTuSRWnCAdX4KqkPB4slHKvq5qyoMWk3B
7E/tMNVoKs5xH5Tx9JyCzZNXatg+U3HfuV17Z8OmAFnWnBlfqDjmcWtUMm0K
jNH1v3sJVHR1MWkWr5iCJ9dfmcskUfHv5LJbTx/B8/0YOpZCxX5eNkO9pSmo
SUutjvpGxVxz7Qo3yjTMdRatMcog9GyQFTASn4bNa5sVBLMJPVYn+kwcmIZD
e0bMmnOp+PM5j86209NwTW8p5FU+4Vf3gaAFk2l44ryhWvsnFRVlom1vPZiG
uGiBNeuLqfj0TDL7Q99pqK2SUvhZSkWdYwGqIhEEbx7NXCqo+JZLWEM3dRq2
CJ8KOVBN3H80agOzeBqUNa9WzdVSUYpzPOBCK8G7fWd1UgOxf8bFhraOT4PX
G7d9ls1UZLfi5jRcmYb4PH/THW1UzG5snN1ImoHa4cjgvg4q7nUJLj+8dQbm
Kd8qw7qpuHnicHiz1AwIKBVzXOyjYpRt0+umgzOgfLVlL3OQip56v3qUjs2A
idfojephKrpnbs1bOj8D3l+X3z4dI/r0oMGdeX0G4lt4KzUmqVi0ZfNb9zsz
UMexlWP1DBVbst890Hg4Aws79+zN/kPFJsvx7LNeBO+M8o37c1TUehzFjHk1
A4cfnH4rv0jsB9+uUyqhM3A9wqhicpmKBcf1DbZEEbxSG/bPbDRsPFejLRM/
Awm/H8ubcNBwb4OEnlPqDNRvDrwuzElDHnJULVsWwVOJDmrjpmH5BkH1rz9m
QNAivTxwHQ1ThbkuvyiaAZVXJavO8NJwkZ5VE1xK8DJb5fjINPwu73WjomIG
nvaNmRRTaXgveZPR9uoZSNyw8saNQcO1v3f4hNYQPHlSOW6koZaktbdC7Qws
6gutWtpEw8zGX7ITxOtbH8vIpQrQMLm86GUucb/Kl8Mmt4VouCf8ylxs5Qzc
qD/zRlKEhh9J57sTy2bg2T/jssHtNOzTi6dU/CJ42++xRUjQkBnQ/3hVwQw0
HPeQvbyLhkMTsvZHsmdg6e7ra/xSNNSueWP2MY3ghX56XbeHhtFaPTRWwgyo
/vxe6itH6PPB1iaE0M90onTl6D4a2vtJlP9H6PuM2S7DpUjDs4rF74dfzsBX
mDDO20/o65KanuA5A40mbK8dgIZKy4pCvg4Ez4dcqqBMw5+UClH3WzMglCa8
MqNCw5XfyhcDDWdArVNWJk6dhhS2rLcFpwket6qxqSYNdY685yCrzICP9LlA
0WM04nl/fOqB7Awk6ZqUdJ6g4ZRvxtr1wgTvoe2/oFM0dDu2Wi6XbwaWozz3
6JylocFE8uvQpWkQrnpjRNGloW5kEzlmcBrU5mMCys7T0GzP34D+mmkwE8os
9tCnYV22h9q5rGnwPVK+fNiAmCdKyuBf5DQkWXVIrxjSMOAp37Eeon9Nryev
phsTeeA8mbDWbhr+5a4KsLlOw7/WwWZ3DQjeMKVY2oyGjvccXuxWnwZ1isjy
iAUNK1Je39snOQ3mivLSkbdoGPSuPcif2Be+hmpXDa1pmL3WNfXk7BQkP9Hx
33KXhrsCTT1utkxBc+L1X422NCy+0WgxkzUF/5rtll7Y01BAs+9d/7sp2Mbh
JXXCkYZpJY5Ox12nQGPnW0MeZxryzysG77k2BeanY18VPKIh1+r1qf7qU+Bn
n1X08DENazaGxLiKT0FKeMWikicNw93f2bGvJXglnbtnvWjob89+gDk0CSsz
U1cSn9Hw4ne+XcXE/hbZzPHKwo+GVl/9XgpHTYKGCq1I/CUNw7RqGsXcJ8HC
XHSxx5+G7/8Fm3cRz4vnL/fuDn1NnC90R/U5lUlIyVC/cv4tDVfbcQf4CE9C
S6/uS3ooDQ/tXtJ+wTYJbBtMf1a+o+FDgXj5mowJEJG3X/CKoOF0c4iwnO0E
EF+KJdUjaVi762moruwE3HQLNmD/RMMXksrNJ8bH4UXslxeZn2k41yI4JU48
X1Prsgtt44h5UvNGp6+OQ+ty5bxsIg2vDER+yxAYh1Xbu3dNJNFwRrlN6FXT
GIgen7n8KZWG+gFZhU9ejoHm3dUvjNMJ/+1/8H8+MQaWIfTCrZlE37RXu3Gt
G4MXhdvnW7JpuCldhBFTOApp4/t2BeTRcPCIAGeEyyi0MY5cPlVAnCdoUZiN
+PtlFZx/vqGI6Ef39qDSxRHYbmJWUFRMwzER8lHGtxE46vNg7lEZDR3cKlKH
7o6AZerTnVBJQ5mw7rWn5UfgZUfIpYVqot/TO7gv/R6Gb1zxfsl1NHQW2kBl
JA1Dm1Ru/q1GYl+MFQk+vjMM7LrVsztbaBiSVaKVJj8MYg97dgy00XC8lcaT
MjsER6N+67/vpKFE6vcgr/QhuFW5xk+/h9gvBnvvo+MQvJpj5LP6afg27IBq
m/IQfNsqPlszSMPeNfz8ptxD0K7x3w6fEWLeTeG+4+WDwGGlqa85Tvhh9CjN
yn8QxF5f8F0zRcPRqjzGwqVB0Mo1/5EzQ0Px/a/Dn4oPgtWQw1/7vzT0UXtS
tGdmAF6RfST2zdPQtK/k0kjWAKT/F3ZxepGGJYFzsVleA9BxJcEn9h8N0w/x
msXpDQDHk7y866vo6HU0PTVHfADEE2v+bFtNR9+UGaE/c/1wrLlXvIOTeP1q
T/jx4n6wYv974c1aOi5U8keUv+0H/x1cPmfX07FSa+Nfm1v98P0UK4/ER0dr
C8EWFdV+6Lgv8aeETMdZG20OpU39sDpcUdydRkehjUI+OtN9IFFy9IIyk463
Oijk18V9cGzm4rPljXS0UvnusxzeB7c33cxN20zH7bfoHi6OfRBw2Om3tSAd
uZS3TIqc74PvZr5iUsLE/XKJ/3Xt7YPOF+/OD4vQkdcq5+xXWh+syUh8+kGM
jm6HvqT6z/SCRO+PHIMddKxrXqf3uKYXjq+vm9kkScdX5x5lPkjqBWu5/u0N
UnSMdOGctfbvhYCLs3rPZejEvlL4ZGzXCxmu3E+PydPRdN8G6lH9Xuj6vDGH
W4GOgUUf1m5R7oU1dTtmfijSMd7sHFetWC/sWFba7nSAjiYqPTuv8/bCCdFj
eopIR+nlfuWqPz1gfeyS9x9lOvKlHd/E2d4DgTaW2fGqdGxZvkRbKeyBzOCH
02YadPzAPDicGN8DXQV+omJH6bgz0I6TFdQDnOPvdbuP0TH6gma/yOMe2MlI
8grWpqOnyPr6CqseOHGwIEv3NB11ve7P8l7qgTvX6qeo5+g4vH9ZvVGzB14/
GxCp0KXjou/KRyEFgpcyp/PkAh1v2p9o7RTtge72tV6ql+iYU+sUso7WA1xc
m7LYrhDnmznyOoC9B3ZJ7Zr6fpWOfs+Hre9PdYO2zgGRe9foWLJs0xDd2Q02
Tsd1ZG7Q8bGPoM2mym54E3n5yZgZHdXdbq0vyO6GrIpbmVE3CX80TK3exnVD
z6zz5FUrOq6c9H0eENoN3FtfbBO8Q8dzXXWOn326YZdGxLnmu3QUbjAzq3Lq
hpO3kj1f2dExhGH2bcmyG+4GFmZoPyB44zqLIgYEL6dhYp0THT+L2C+gdjdk
Dw4K/3Sm46PLGzLUsRt6SQtnXVzp+P7XnsfS0gTvv3WeB9zp2DOR0Tst2A2S
VzZnzHnScWglP/YxXzec8pSc+OpN8JLn1vT+64K7CQeFLX3o+Ncy3YhjvAuC
mk6c3fGcjgzyckBbaxfkrLri0feSjoP2nT/NSrqgV+L297AAOhbFrbsf+a0L
1p56NH7hDZHHr3kvn0R2we77L4WYwXTkSE65wveqC069/3CmOpTI3+gzX2mX
LrhXnOL+9D0dP22U+G/oZhe8nf6ZrvGBjv88fNvkLhA8/qYxjig6Xqnh6OJV
74I+5eGt2Z+IPigoTN+W6QIes8XT92Pp2FWvTbqyheC9WO8uH0/HNxmylrVc
XXD6+5b0yUSi/4ORqcVTnWDbs3ssJpno32ZFduWWTni7DreapBH+HRVvUMjv
hFzZk6eFv9NR5jf77i+fO6H/guHjtkw6rlJaY/HuZSfwuFp/C8yh46FGkeuU
B50g9dl19PQPOt7mb7m86monnKl9JchXSMdx06iVm0cI3tLHU8VFhP+/T1+8
KNUJwSJpbm4ldFyvNDRVTOuEPK1faVhOR3fhEWW7mQ7ov9M8slhJx9oDfPom
GR2wLnhEILWGyLN+v62xawdIFyydvF1P7CeHVH+7ox1wZmyDm2QT4Vc6yfQT
uQPs6IJpgy1E3zdxnV6pb4eQA9Ij4e10NGKn6TwMaoc840MCl7vomLHbf+Pe
y+0w8PTUSf5eOhpcXqqREG6H9SlXXev66XiwKfSYcW8bSLffSfUdouM15bM1
0x/a4Czn4+Gjo3RMNErf3XatDe7vDtjCNUHo4a0eLCXWBiHnorTzpuhodnLn
zz/9rfDD8dsjh98EL3E2WeljKwx+LE5RmKWj1h2xkg3GrbC+omVoZp6OCfku
KbbbWmHP7OjmuCVCD0lTc8+uFjgn+O+E6Qrhfx3v5mOhLXBfne+RKDsDzemh
olUXWyDUcmtK52oGPta7SdrG3wL5AXuGgrgYOCor6Kzd0AyD2cqbdXgYWGxb
L2Xyshk2DJ4+QdnAwIgtju13TjaDDMnYpYyPgWI8191deZvhnMLdZA8KA99x
PcuOKmkCewP3wcN0BsoedBAb92iCMI/ATStMBibqH5W+otYE+fHRx9P5GRhy
xg74VjfBUGO6s80WBnJzOHivyWsE3lWlSdJbGZg/KcI6+bARZCTaBkaEGcTz
WCni38FG0Dk5zh8pysC2FKsY/n8N8MBu5ZihOAPLPZ7qJWQ2QNg7kvOWnQw0
FZt4VO7QAAW/hJIaJRnolWv43uFgAwxPyQy8kGbgw4SjRb9W6oGXX4X/hCwD
/+uQCMnMrQdZ5bPHePYy8K2Cw4WrrvWga3rtYYECA2uv8eTmq9fDg+f3vj5U
YmBhwCPqyLp6eJfu0a90kIEPugMYHZV1UNj9euMsMlDP3ow72r8OhnlitBIP
E3oF3Q/W1q8DPtkMJws1Bs5EDS61itSB3IWyRPEjDNzcuz/zzFgt6D5q7+s5
ykCS3dOuzJRacIiZYIUeZ+Bg4MaGLc618L6GTev8SQY2NZ2yttOqhcJFshP9
DOFX3dnpWlYtjGzbllh5jvAjpuqPbH8NkLTk+rz0GBj4Td/1dVINyN1RZalf
ZOBU4P613K41oPf23FH2y8TnMb3OOJ+pAcd8E8fMKwy0imgK4txeA+9HbRNs
jRhYeXq3feBcNfykPemVNWHgBVOLv3tLq2F0fxBz4gYDP3Ntt+8KqwaS8WfN
T+YM9NbJ6fa/Ww3yTzMdjC0Z+MuMx+bssWo4n1wev/U2A4Mit47wi1aDY1tH
T8sdBiqUyQV2L1dB+JopRsA9Bjqc6dCLbKiCIkl2zVP3Gfj6P205y8QqGDtL
ddjgwMDr3i/uSj2rArKjSHyREwPJrXpHekyrYO9H+Z5HLgzUXo645KZRBRfK
1RjgxkD9ubK/fGJV4PRX58iCOwNZ2YV9DzirIELgxoPkJwxUFnwRWNBfCb/U
7sfdespAs6O/+Xt+VsLYTa/unb4MXDykvKU8uhIoAW/pA88Z6KRxc8HRuxL2
ZcdqvH9F6PtBImvMshIuDGTZ6wcyMCx9507KmUp4yFf5hRXEQI43z3N7FCrh
w76urppgBv6R1yvQEyB4l6dpPmFE/tTaVcxWV8K4O4eGZjgDxWnjBwXqK4Aa
T7Nf85GBMrsoLNuICtjXKPolJ4rIX50WVFlXwEW2fV32MQykqh+PYqhUgLO4
Bm3fFwYeOWC7RZ5eAR+09dSn4xnIpzSqtXGgHIptTe/HfmXgz3a7urhv5TAR
Zh97PYWBHd+MTvd5lwP1l3fntm9Ef0/Pm380KAeFqWBqx3cGXlUbau+QKwf9
jXFqb7IYuCHrmofj2nJwPpRjdzaX8Ldx9q5lexl8vFH1mZTPQKO2hanQr2VQ
4tfdUVLIQKZjrduyRxlMfJuhuP8i+lSYy3v3UhnQulerKZcS+iWp/5iVLYP/
eBh2y+WE3w2KB63WloG+jNjntCoG5hbpeVS1l4LLeYUO61rCj3AbIe6kUoh0
OUKRaiD21zaRtWs8S6Hk03nV4SYG7r4+W5imXwqT1Wa2H1oZ6KNYQl8rUwr0
xQcxBh0MbFkwqF1cUwr/bXvWvqmbgV3VHtaOTSVw6WgouaGXgTUD//KdPpfA
I+t4lecDDNzfb2c841gCkUG5944NE7zbs6Fl2iVQ+qP6E/cYkd8ZndscwiUw
NdLT9mOC6NcOS78n08VAp/0hOU0zUCLI01wvrxgU93OqKP5hYMH0NWkTv2K4
bMS892eWgW7qn37FXC6GR97in+IXGBi+O7dfULIYopL+azNbJubZeXg+Y/4X
lLVqksTYmDivUbLXoeAXTK++eLibnYnxq44T3xR+AUPS4m7wGiZ+XjXefvr8
L1A66xity83Ebe6nPA23/QIDB59W6jom+jx2aXUdKQLXD2F8FRuI67/qbWmJ
RRBdlqD8hMTE0nGBE8u2RVD+J89GlcpEG7ekhJMHi2B6S20UG4OJP/zmD6Sw
FwFTra/lO4uJyQll3TsLf8L+m395721iYqyw+qEkj59g4M+lLCPAxP4db6NO
av4EtyyWzdhWJkrPJ5K51v2ET/0SUVHbmBizRp+/sbgQynmVWq5uZyJ582G2
X56FMLNXi1dQgolVp9yD2tULgXVZ/1DzTia6qgvrCawphP3uN++82s1Ea55V
8s9yC+BKnFOk9h4mCu8e+irnUACPG3yb18kxkctWvI2lUACfVt5t+LmXiQcT
6XLK0/lQIfYVXf5jIueW6wlpMfnw+0S+9YH9THw4Z5rhapQPLNu6j3MHmdjq
TxGJ25wPB8L6m74eYuK5dZzBUPsDDItm11uqMDEvZfjdQa8f8HiSG3eoM3Fm
rEAy89APiGHxW/cdYaKgeUVezmweVOLOj2FaTLz5VLbsdGwe/L6+v+nCCSYu
PCz789AwDzb6HVvPPMXEnuJF/tPMPDj47RJUn2Hi3D3HI3UluWDYZXn7qQ4T
NzpfTaY8zAX3tc4fNM4zUfTrmq8MuVz4vOd5I4c+ExUPC8ePDuRApV74uuzL
TNy3bq1kWFAO/HFOOnjfkImJCiPJ+0/kAP+nAit5YyaGr9VqLWPPgYPV9RGT
Jky8sSR5Jcs8G64uDDTEmDKx8EbmvbmaLPAQnucxsSDm63o2Y6CUBZ81eQ4K
32Li1d34gTc8E6pub7Jqu03Ma667k7UuE/6+2RURaMPEpTnlgRfWGcD/40DD
aVsmxjknTwe0fgcYOc7DZ89EOXk3uqLadzCiGhwodmBipsP4d5/4dPBQsrrl
9pCJbw1PjcVuSofYqy7h+IiJh+TND0e7f4Nqrxf1i25MbPu1qvvV7zT4+zVi
baoHkTcaydLdMA02tSbvv+3FxPFQm3V+VamAq39aSj4j9BjYpFVwKBWMdjW+
H/Ql9NMOk937NQU8zwzVhb9gIvtah11/RFPgy4MF7sv+THxUnMBBfZMM1RHr
9vO/ZqICc7QnlC8ZZks3W9YFMXHV4d0nYx4nweY/ku99Q5j4UeG3iMrKV8At
UHf0HRPNPtY+sbX7Csaq2txcEUz8O/Z2+eyfRHhicUUp7yMTncb7VIZuJ8KX
V7dvOkQT/r4J9VaaToCazEfvFD4zcVjP1lzfOgHm+l7WznxhYvm2vVt1/8bD
Zt6PXHEJxOcPKgbL2cfDob2piqZJRP+mnjOXVsXDtUtFFqKpTNzjlE6/SY+D
J4+bwjq/MbHmUqlN844vEPdluCYog4mv/dVuHFWJhdr6RU6dbCZu4N0YWnbl
M8z9W69IyWPipEDIJfNHMbBFTMCiLJ+JSjdivPZEfwLlE1JhHj+ZaJ6tGiNa
Ew3X7mHN4WJin3RODJ5YFQ1eoSc5V0qJPPl7bU6RjYL4n4b/pVcw0SMxv/Ki
aSTUTlib21Qzcefp5SPqHz7CPNMtVLqO6F9x4tN7vR9AAP2rRxqYeNfplOm4
2AdQvh65JrKZiZZb7jrFWEaAiW+agmEbEy3uOKrFfg8H77RfZls6mXjituum
qXXhEN/ZHNLYzcRPKQFq1gbvoY57tOpFH7E/zymvkfr2Dhakl1efGGSirPeR
lwKMdyCgx6vAM8JEpkD4f0r3wuCws6BZwRgTpUSlghfSQuF6tHTIw0km+vlS
XqZ5hYB31aEqpRkm7s1KeBV8LRgS5k+tnv3DxC9/s1ReHXkL9UJG+xLniDxd
mcj0lAuChSM2phaLhL47N8deFXsDgrcfB4v/Y+J/XsaGPMKvQeVNQGUPGwvz
wjQHrooEwvW8KI5QDhYGZEZTz+4OgKfD3/ae52Sh/e7g97ngD4mUkhv0tSxM
FpdQ99Z9BfWKrW8r17FQkic+x9/2JSwajlV48bJwKePDv8+hL2Cr1z92dTIL
7+wSTI8oew4qX/n2stNY+C3374009udwo2XrjUwGCxdDnsg/OegHzzhk3tpu
ZKE6o/vM3ENfSNx5uEJ2Mws9SfuWc174QMPpM+wTAiyk2g7PgMwzWLI3lv8k
xMI23XgDsTZv2Bpx97qxCAsfrsl+IP3SC1RL3YO2irGwZSmOm6bzBEx/B5a3
SLCwVf6a+RNRT/DZ/GlVwC4W7vGtrTu64g5fVb7LnZJioaViyDlS72NoNC81
2SDDQutcLzbfGjdYetn2pkiOhds+VbI9KnMFoczxskf7WFihIZD+ruoRqPWt
sIEiC40DndsiOlzAdANZbmE/C8/G8LiozjqDj7ywSTKwUE/tgNIBljMk6cu+
uaXMQo0hzd1qyg+h0U2lbKcqC1/RpbT2DjvCcuxZtgF1FnJk0rUmDBxAuP6a
7HtNFspkXZmVGrQHtX/3rukfY2F+lV7Ibaf7YLbd8zVLm4WCY5zGstvtwPf4
m9KaUyw8v8Hx8mTLPUi+G7Py7CwLVVuGYyTC7kJTSIaMpi4L6dbXnly5bQP/
CsuM11xgodyPj7c3n7oD2ybaA3P0Waif+UKs66A1qDMnS+wNiPkfVBYpKNwG
c1i1svcq4Z+IeveXA1bgZ0KRmTZmoc9yoV3V8VuQ7LPNOPY6C21cPeUN629C
c6pc4HUzFkq9DMrJFbGAlQ7Vkm03WTib77Aw6m4G27h1/rXfYuGcT5gbbeUG
aEhf3/PGmoV1JqSjNz2vg4WundHZuyws7xXlthU1Ab+HTwJIdiz8/Z4lXVZj
DClRQcUl9iy89adY4tgLI2ip/Lz82JH1v/9fMilc6eXIIfS/1/8PstotlA==

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
jaJ6MLOq8e4NQZn//X/Q/8X/DxttmvI=
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {3.8793323181606763`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{5.67351006745225}, {5.67351006745225}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"32.929834922406286`", ",", 
             RowBox[{"-", "5.804137920071371`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{3.8793323181606763`, 8.506824845464024}, {0., 
        1.2393117414784056`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
jaJ6MLOq8e4NQZn//X/Q/8X/DxttmvI=
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {3.8793323181606763`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{5.6659517834226945`}, {5.6659517834226945`}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"37.29840728161943`", ",", 
             RowBox[{"-", "6.582902344976922`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{3.8793323181606763`, 8.506824845464024}, {0., 
        1.2393117414784056`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
jaJ6MLOq8e4NQZn//X/Q/8X/DxttmvI=
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {3.8793323181606763`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{5.66469163721984}, {5.66469163721984}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"38.480748302064754`", ",", 
             RowBox[{"-", "6.79308791483496`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{3.8793323181606763`, 8.506824845464024}, {0., 
        1.2393117414784056`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
jaJ6MLOq8e4NQZn//X/Q/8X/DxttmvI=
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {3.8793323181606763`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{5.6646478918741865`}, {5.6646478918741865`}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"38.54673582738184`", ",", 
             RowBox[{"-", "6.804789381997827`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{3.8793323181606763`, 8.506824845464024}, {0., 
        1.2393117414784056`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
jaJ6MLOq8e4NQZn//X/Q/8X/DxttmvI=
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {3.8793323181606763`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{5.664647818648941}, {5.664647818648941}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"38.546925325503`", ",", 
             RowBox[{"-", "6.804822922724385`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{3.8793323181606763`, 8.506824845464024}, {0., 
        1.2393117414784056`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
jaJ6MLOq8e4NQZn//X/Q/8X/DxttmvI=
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {3.8793323181606763`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{5.664647818648661}, {5.664647818648661}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"38.546925327037016`", ",", 
             RowBox[{"-", "6.804822922995527`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{3.8793323181606763`, 8.506824845464024}, {0., 
        1.2393117414784056`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
jaJ6MLOq8e4NQZn//X/Q/8X/DxttmvI=
           "]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {3.8793323181606763`, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{5.664647818648648}, {5.664647818648648}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"38.546925327052435`", ",", 
             RowBox[{"-", "6.804822922998264`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{3.8793323181606763`, 8.506824845464024}, {0., 
        1.2393117414784056`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{{3.8028024279308996`*^9, 3.8028024761709175`*^9}, 
   3.802803634256821*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"714f75e3-e376-487f-8ed6-269af6424ef8"]
}, Open  ]],

Cell["\<\
Gr\[AAcute]ficas de los modelos log\[IAcute]sticos en cada iteraci\[OAcute]n. \
En la etiqueta se muestra el valor de w. La l\[IAcute]nea vertical representa \
la posici\[OAcute]n de la frontera \[OAcute]ptima, mientras que la \
l\[IAcute]nea horizontal representa el valor de probabilidad 0.5 a partir del \
cual se calcul\[OAcute] la frontera \[OAcute]ptima.\
\>", "Text",
 CellChangeTimes->{{3.802803324513771*^9, 
  3.8028033884917307`*^9}},ExpressionUUID->"b8b227e5-260d-44ed-973b-\
b87acbed66b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"PlotLogisticClassifier", ",", "ws"}], "]"}]], "Input",
 CellChangeTimes->{3.8028023700337048`*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"c56a8cce-83ea-4cd6-b6fa-3b268da84269"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYGIg4MYPDBftZMEBCG88+eAQEhOB+iHsGH0Oj6
RUlUL4jTfnTzjMFAmABfEI0vjuYfMQLuFcGpHnt44daP7n90eXT3o4cPOh/i
HkJ8hH3o5qO7F10/hEYPH0Luw60ePX7R/Y/dPCGc+tHVEwpPQvEBUY8ID3Tz
AUy5wDc=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJyFkWsKwjAQhBevIFRNk4hX0At4hh6h0P71PHqm9k6arGThIyEDpQybmdnH
bX5Ny0FE7r8v/R8Zl6f8ofxU+JrhUbf3Cof3sfDPO+EIfSh83xIcuOXRX/3Y
7wj90JyHevqrPja54gw/y9f5LZ967q83v3LLU3/m08+jHsCvTT37Y15vnvp+
2/vi/KzzfvV7c38O73v3Zn+W9wX3C6CV
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, "Charting`Private`Tag$9379#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1: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
gp8G2w==
             "]]}, Annotation[#, "Charting`Private`Tag$9379#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> 
       GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{5.796999999999999}, {0.5}}, GridLinesStyle -> Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"10.366166265961425`", ",", 
             RowBox[{"-", "1.7881949742903962`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{0, 10}, {-0.1, 1.1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}, 
       TicksStyle -> GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Virginica|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYGIg4MYPDBftZMEBCG88+eAQEhOB+iHsGH0Oj6
RUlUL4jTfnTzjMFAmABfEI0vjuYfMQLuFcGpHnt44daP7n90eXT3o4cPOh/i
HkJ8hH3o5qO7F10/hEYPH0Luw60ePX7R/Y/dPCGc+tHVEwpPQvEBUY8ID3Tz
AUy5wDc=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJyFkWsKwjAQhBevIFRNk4hX0At4hh6h0P71PHqm9k6arGThIyEDpQybmdnH
bX5Ny0FE7r8v/R8Zl6f8ofxU+JrhUbf3Cof3sfDPO+EIfSh83xIcuOXRX/3Y
7wj90JyHevqrPja54gw/y9f5LZ967q83v3LLU3/m08+jHsCvTT37Y15vnvp+
2/vi/KzzfvV7c38O73v3Zn+W9wX3C6CV
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, "Charting`Private`Tag$9491#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1: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

             "]]}, Annotation[#, "Charting`Private`Tag$9491#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> 
       GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{5.732094796486849}, {0.5}}, GridLinesStyle -> Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"17.99598081965982`", ",", 
             RowBox[{"-", "3.13951207343769`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{0, 10}, {-0.1, 1.1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}, 
       TicksStyle -> GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Virginica|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYGIg4MYPDBftZMEBCG88+eAQEhOB+iHsGH0Oj6
RUlUL4jTfnTzjMFAmABfEI0vjuYfMQLuFcGpHnt44daP7n90eXT3o4cPOh/i
HkJ8hH3o5qO7F10/hEYPH0Luw60ePX7R/Y/dPCGc+tHVEwpPQvEBUY8ID3Tz
AUy5wDc=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJyFkWsKwjAQhBevIFRNk4hX0At4hh6h0P71PHqm9k6arGThIyEDpQybmdnH
bX5Ny0FE7r8v/R8Zl6f8ofxU+JrhUbf3Cof3sfDPO+EIfSh83xIcuOXRX/3Y
7wj90JyHevqrPja54gw/y9f5LZ967q83v3LLU3/m08+jHsCvTT37Y15vnvp+
2/vi/KzzfvV7c38O73v3Zn+W9wX3C6CV
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1: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
ezPMb5axQNultY4/uEUZeYum6ljAu7LBhmr204uu5YMs8Fv00elZ3CwbTxNc
hlmA3YBNhmqGB6cbRSZZwHrw6ugM7vWGPsrVJRboenbVkeop6YqvhryskHLu
/KFpaj8duXKkfz8rGOonzk1S4yFI4/ptU1bY/D6XQXUD/+xzHStWfL0Fzaiu
0j/JnenECo3VRbkT1PjN1nt/9goreG2PMxrHnaeztiwWxgrs6nUzv6j52VMq
236bFcod7t2j+iHDtnDVRFboUeXoG8Md7cwMayWsABJNB0ep/XH9jWdhBSvk
0gePjuCOiAtMdahlBUb54itUX22YWH37gRUC804+GabWU+m28qhxVvjeYD/9
A7fpSMx2SUk26D++nfyVOr/tIz120myQWaj7ZAj3QR/NqykKbCBrkadM9QG6
r53CmmxgfMpUbZC6f8Tt/nzmbFD32kxhALe63btallA24JLyqOylxnuWsNv+
m2zwezBMmmrV3+58EXfYwKcvJLKHGl+XeM/Qp7AB7RFOy27ccokO7JulbJDu
FtvUiVu8Z8VqYZQNNkAOtVL7r9ihLZUpNugr7Qx9j1vkVEae1zwbLFX3v23B
LThvuDa9yQYvFn/sbcZNIMRljAuxQxvze8I73PQmyr+HjNhhUpFRvoZab+6H
xImbs0O72t+91dR++aVnr601O+xlSzOrosbD2csx/U7s8FT6t+tr3P9uNKt3
X2aH/Qwk7xe4J986XWsuZIf3Vz53F+KWiu13u1PGDjpXAh88peavvanVkUp2
SF02sCig1otlLYXvzezA6kWqzsN9T4mnZ2mYHdgKq62ycDetRtRUT7JDTV35
TCb1+03redfn2KG7FwvNoOab0/gV7i126AgoTkzFvSfhjaysKAf4TORdS6Dm
r7M67zSRAyJcW34/oPY/lYL1ElkO2G7eYh5HXY+2+I+YOgcws7OwxFLrJ43n
ZWtzDviT+VHuNu4oN/GO8AgOcAn4JH6Z2g8171UcjOYAsYZVkYvU+TOwZPPE
cUDOGUvuAGr/S18ITM3kgNIr2396U/tVz3tyeRUH9D3n2OaG+2wmcF5+ywF0
YT7fXXCneb5Ygvf4+1h57p+m5iPro7a2TxxgHe4ydBL30N6L/iPzHFB/IY/u
KLXesc+ezF/hAIbwGZ8j1Pjrdz7oRcMJNvImXw5T+5e3OXGdkxPMucoiTajx
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
             "]]}, Annotation[#, "Charting`Private`Tag$9603#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1: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
YjDr7jKeFo+Fyoq/PuyNwyxJlpn1ioUsC6hAIxE7P/2Vp7IDsTDXmfGj12ts
/6S4947JL+GG07PCpTy8/nO9h3I8jLyR9qmvEauv8t0v2ZoIr8uzlKy2YOtP
0tnQsiTBY2T7Et52LjTw4cnXuBNJcMhR8bNuNxdyUre2IJQkQQXHz6VVw1xI
Vx8lPc1PhvX2HeVZm9j5JzPvKzanwJeyyhX1NNyI/W/0uiJ3KnSajq4YpedG
oe22mkImqZDX3rSSwMKNkFI589vZVGhuN1EVzsuNEusrvaTF0rC/p7dqPeW5
kVl7hdlYTgb8ute87oUiN1JwKM7PY8yEyRNVdQWHuJEuTZ7Vc9NMqHU9oH7u
KJa/H+JK4ngDI214Gi00uVGZCpfAiUdZUN5apkXnKjY/iHnBMTUH/roudiPb
ghs5LUxs374jFwbZc7Gz2XAjGwt2QX6NXDjhvH7uqyO2vrKPtX9JLnzl2fjt
nCc34re2y/ue9w7yhdn9NIriRnWWFt8Vat/DmvAr9z/GYP1dIyZJO/PhrSh9
Mf54bjSefm3vX4N82Pby6NWeFG6Uq36z+9JoPgxMYx25lMeNVHofZGpzF8Ct
kjfTZs3cqPBL++WG+EL49ktCcHkrdr7Ms2fTlgqhScVzOfFObL7Nm+Wnp4pg
Ue1dp6FerP9qQqX/RhG82X5qyXKcGz3+4BdlZvcJjo1NrdvS8yDj4YXXefdL
YeRk/8tGRh7k5QOZdUdL4YmZDpIsCw9KdA18IXz2C0xa+PRghp0HrShxL0ly
lsFLm4H0TqI8yKzvj0bCbBn8yinL6qrKg3QiG3tfVldA4OAwEXuMBxUOODUf
2aqAb2vf1lZAHnTiyRUPW9VK+NTzgC+7Bg8a93la+DCnEuqMKm++0eNBJke4
TiUnV8GGIjXybzseJDzGaKeQWgOPcPs0M9/gQU37w0MOjtfATMeqNwouPCh6
vdKiTaYWPpE4aXPfgwd1rtqk/cqvhZrBOoMCj3jQ0hbfgGZLHaw2O9+hG8+D
spoe/g0VbYRKn6LfuSfxoPz7TdZX7BphCk9vSHwKD5puco1uLGyEvg0mOtOZ
PMgXSax7GjbB40rm1f4feVC495YyimyGZdsdPpa28iD2io8t/oKt8NNb71hZ
el7UJf9IjGOhHTLqGApGMfKi0o5zV5clO+C5iT0vaFl4ke+Bf8WyFzvgmERz
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
41pJRw==
             "]]}, Annotation[#, "Charting`Private`Tag$9603#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> 
       GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{5.693820468171033}, {0.5}}, GridLinesStyle -> Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"25.8627613590116`", ",", 
             RowBox[{"-", "4.54225093741307`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{0, 10}, {-0.1, 1.1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}, 
       TicksStyle -> GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Virginica|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYGIg4MYPDBftZMEBCG88+eAQEhOB+iHsGH0Oj6
RUlUL4jTfnTzjMFAmABfEI0vjuYfMQLuFcGpHnt44daP7n90eXT3o4cPOh/i
HkJ8hH3o5qO7F10/hEYPH0Luw60ePX7R/Y/dPCGc+tHVEwpPQvEBUY8ID3Tz
AUy5wDc=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJyFkWsKwjAQhBevIFRNk4hX0At4hh6h0P71PHqm9k6arGThIyEDpQybmdnH
bX5Ny0FE7r8v/R8Zl6f8ofxU+JrhUbf3Cof3sfDPO+EIfSh83xIcuOXRX/3Y
7wj90JyHevqrPja54gw/y9f5LZ967q83v3LLU3/m08+jHsCvTT37Y15vnvp+
2/vi/KzzfvV7c38O73v3Zn+W9wX3C6CV
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1: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
fHVb7GtQ0Fj0PhJMjXn4k11tMPbcP2f6qSRgWDgzFLR6ETO82eToiPDxxb06
45N4EUs6kHp/A0ig/TH/CYfORUz9s9FHojYJAnQ9OOrirTC71bLtNsdIwKXs
HclrYInVaT+kmzEkwfMa5eRXfOYYH7ed+B0jEpREuzaSgs0w8579ewkmJFi9
lFe3xmSGLV7+67DLjARHReqcs7aYYrKPTHuuXyRBKHcocVTIBHMx2jvHYkOC
WQVprdMvjLGPJAJXrC0J2LrParcqGmMG+VUHSi6TgF4zYL73hBHm/2VH9uZV
EoSHeFbvSTLE2pIYG8KukaDH5TSnqpYhJnFlcITkSsL751aejR4D7O3GY1Ht
6yQoS/Nk/yxggA1TVvzve5HAe/MrT0GSPrbfqe487wMSuPs7oEHW09hq78Th
6iAS9Da/vp5ToIflH+TcdSOEBL+PxA8JWethsqKnWQce4fEQetrPF6yLcVb3
5adH4fFW6LA7r3oSq1X6l3A+hgT6Fyv2laWewO7ESgdzx5GgbVfF5a+iJ7A5
J2tLt2ckeDv6UJCV/TjWKzrDBSn4912/eaqV9SgW7k9YmUslgbP9MdKjhzrY
8dldP1LTSLDuqz6WIqSDfay+8Z4jE88vc8LyC8UjWMpV+ks9b0jwy/JHS677
Icy5RqDcqYwEDQLyhZjNAWzHzn2ZpAoSyNzjKLfnOICNxBlHdVXi3yNf4HTy
7X7M0Pn5FY1aEmDe1g6CrPsxLfFtoswtJCg037L+/AHCFu8dYyxuJYHEz98H
ns9iWM7vK7MObSTo9G59GGqEYeTaNzXtnSSQ7PASY9hNxVivabo86yNBMbPq
qQZWTazyq5mZXj8+/ze7OGv9NTDPwz46DIMkWE7vcTrCoIHNiNdIXf6Ox08z
bnsaizrWVXuqSXUcf983kYIwhX1YgoSVTPNfPP/H7fpcB3ZjGrvllayWSLCb
tMn22Xc31nV0Yd/yMgmqNyafdW7fjbHeCDgus06Ci/3Sz4K9dmHO7a9cvLaQ
4XSnZB9RVQVjH3f14mMkg7CDstjLnzuxlA2tgHQmMlxeVzN9HLMT65X/FNvF
SgYemUxvny07MQiYL1fgIQPjrZtn5JsVsb6npY2VBDIka3JvpWorYm5v73UZ
8ZEhyeU3V8lHBSz9m/C4vyAZxBTkyZ/ey2O8mlo8A+JkCMvfL6vcuh0bnvU3
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
             "]]}, Annotation[#, "Charting`Private`Tag$9715#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, "Charting`Private`Tag$9715#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> 
       GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{5.67351006745225}, {0.5}}, GridLinesStyle -> Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"32.929834922406286`", ",", 
             RowBox[{"-", "5.804137920071371`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{0, 10}, {-0.1, 1.1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}, 
       TicksStyle -> GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Virginica|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYGIg4MYPDBftZMEBCG88+eAQEhOB+iHsGH0Oj6
RUlUL4jTfnTzjMFAmABfEI0vjuYfMQLuFcGpHnt44daP7n90eXT3o4cPOh/i
HkJ8hH3o5qO7F10/hEYPH0Luw60ePX7R/Y/dPCGc+tHVEwpPQvEBUY8ID3Tz
AUy5wDc=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJyFkWsKwjAQhBevIFRNk4hX0At4hh6h0P71PHqm9k6arGThIyEDpQybmdnH
bX5Ny0FE7r8v/R8Zl6f8ofxU+JrhUbf3Cof3sfDPO+EIfSh83xIcuOXRX/3Y
7wj90JyHevqrPja54gw/y9f5LZ967q83v3LLU3/m08+jHsCvTT37Y15vnvp+
2/vi/KzzfvV7c38O73v3Zn+W9wX3C6CV
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1: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
aoxRr0yNFElavHBDYUWQ4dHzm6ouW/LCpoIQNELY2PbMpeO2vCDw7taHYcZ8
2oXzKTjxQgxq1WQ4zWnarMeXF1rdOvAhxnxeeTd/IJ4XTufP8wwQrveZui+V
zAs72ck+vwnv9qMf+JvOC8eqlvr6GfMdePP2szxeCGa6mdXHWE8iDDbzfeYF
c88m3l+E99y+0TjSxgsTH66a/ySceafYvbKbF0SU8KwfjPUvllruOcIL2RYP
d30nTG6aV5xcT4KUX9ri3wgb6JOYTFlJcIu07nAX43tulm+pZSfB1mZ2l05G
PrSaXkklkaCmNC2/nfDXzooqAzIJjIUmV1sY9dOkO76CSgLXzE0sDGt2z13a
tokER/5VMzczvrfvm/nZFUmw80/d9GdG/e27dbZEnQTkvM3BDYSrrDOV5TES
PHrFZ1zPqF+/y1ligQRPt57YXEfYbmj2mdMhEqgxabysZuTbuPFfmgEJJi2u
XCxn1AfBwJZrZ0jg9/00Zxnh2b1ZOd0mJICC2+mlhFPCli/EWpEg95R5RTFj
PHL3O9idSXB59G78a8LHj1Xm27iR4KOI0UIeo/5dHov6cJkE2b0bjuUSPlm1
T/vqVRLUFmr/zGas11Y9RVNhJODyTY3IYORv2IZYvVskQLKtD9IJn3m11fXZ
HRJwj+5Me0x4A5OfgnU8CbzDYm8nEz77gJzUnk4Ch7FOYgEk6muHuW9pGQku
bRJhCmTU67XQMxKVJFCS+KrpT7hE9qWqVw0J+J7oeV9l1EcPpnHlRhLIN/AU
eDLym/+RWfo3Il4vNl64RFh0T536+h8kuC9dK2fLWP8tp4XMe0lQPGD21Zqw
xEuNRtFhEqiPui2bEXbX68Uj5kmQxZdsdIyRj+4cEsOLJJg/4HH1CGHKfZW/
B/8R49HIDz9E+NNIQM4aMx/kr4acR4Rlb9Apbnx8cOzkIyYlRr2osF5nrMgH
JRz7TFkJT2l0iV/dxgc5Py5rrSPMVn5MNUWFD9xOKwmvrE6iXe/3XBjYzQfT
twbPTROOKSZ9cj3IBxtWXmZ2EX6+J2Tg3mE+eJjCl9NK+EPR8tqbI3wghh2J
bSQ8UzigsqbPB6bRJSwVhI/ll8SHn+WDSN11xzII2+xQyc225IMu96faKYT9
cjMavljzQfneQukExvtfRq+KXOKDqQIWkzDCHC9srdM8+eCB4J0FO8LV6YLb
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
/8gurq3RQfHJSqRQsin2/wHUQe+z
             "]]}, Annotation[#, "Charting`Private`Tag$9827#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1: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
0coWXl0jDv0GqC6bl8QWicOcWar/DxYaCG0=
             "]]}, Annotation[#, "Charting`Private`Tag$9827#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> 
       GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{5.6659517834226945`}, {0.5}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"37.29840728161943`", ",", 
             RowBox[{"-", "6.582902344976922`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{0, 10}, {-0.1, 1.1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}, 
       TicksStyle -> GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Virginica|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYGIg4MYPDBftZMEBCG88+eAQEhOB+iHsGH0Oj6
RUlUL4jTfnTzjMFAmABfEI0vjuYfMQLuFcGpHnt44daP7n90eXT3o4cPOh/i
HkJ8hH3o5qO7F10/hEYPH0Luw60ePX7R/Y/dPCGc+tHVEwpPQvEBUY8ID3Tz
AUy5wDc=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJyFkWsKwjAQhBevIFRNk4hX0At4hh6h0P71PHqm9k6arGThIyEDpQybmdnH
bX5Ny0FE7r8v/R8Zl6f8ofxU+JrhUbf3Cof3sfDPO+EIfSh83xIcuOXRX/3Y
7wj90JyHevqrPja54gw/y9f5LZ967q83v3LLU3/m08+jHsCvTT37Y15vnvp+
2/vi/KzzfvV7c38O73v3Zn+W9wX3C6CV
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1: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
aWB9Z6HnR6M28v8AXTYQgg==
             "]]}, Annotation[#, "Charting`Private`Tag$9939#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1: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
915FA7HPqI+GJMPrJdxGai8zPqMjB07mRdHvwPxHdoHUiVbrVi1p7sDNFWgq
2YX6GkfezZHG3fnAxvILOnq8UjVYEXceTJj5gpqemOu3VMHN9lw1vAdVsjSX
YT2I21+Mt+4r+sterPbSGdwdQnFOfaiFo5mzkSNujs5QwX60wenWTmlX3G0m
CR39aKbrzKlv/rijthRlDaCWl9/+OZCIW7fuDDKINvlNpwim4R5jfpE9iKoE
iBxYeIQbyfLm+oFyBN+MevISN8ueR4s/0PcRJpI7W3Eft5EdGEbVosJaxj9T
+ksHrEfQ7DtvPGt6cXuBm0Mj6PV4oSrvcdwf3q/N/0QJbX9kyBtYMYcMBauP
oyZHWekst+Bu6uvrHEcj2qU+NWzDXT5b6/kLXeqwvPyAFff8yYg3E2jnl+pa
EwJuRssz3mR0+8nexGoh3FyRkGca1er97SwvhjnQf2n60jRa0CfJtk0Gzw26
h9Vm0Ns/bluVqeK5dVB03yxaa5etKIXgXmq+e2gO/TdctSke4naVF62YQ51G
55+46uB+lin5ZB7VmbRYEDbBnZvvm/EHTeUI/nTVDJ9fdGqX6AI6v//p896T
eN5d3pKzgKaHL5+Nt8HdzK1U/hddkkjp3uaG16N+1tuXUaMjNYUOHni+P/pe
zjL6+NJE9LtLlPUbzfT+ocdq1fWuXMHrDwS/ubuCPrP5VjIdjjvzmfIuOrAh
fHP8oduYKyMH74bRAbMXshef3MH713RZRunAZroAabtEPHe4eyOXHljdJyR3
PcLtqjN0bCMorDnorZyDGXqaXnu3ETBOuBy78wx39viDPZtAkVoFk8FL3IUC
eUKbAWv3af/ySrx/oSaabytwWAs146/B93P413LaVlAmnq/sU4+vzx5wTpIB
nPOim1RswfOGljua20A1W8apR1/xeeZdXKlMgEetUXVDPz4vOSAGYQYuZ2Y4
Tw/itmHNGmAG/PkaLTxjeP/I1SlFFuB5aBCN+IPPPy2Qe40VNHky8o8t4vV7
+lcHWAEpRWlBewW3NIO35k7wYTzo+drGnZiXfJmZ2YB4mAjJYyfm9Mfuqm/Y
gf9zg3+tHJhJdJzSshygvdOjW4ZnJz4/7VkGB7gqVhM9QsA8kMz9MIYTdFfb
0VvI4PV2wYzx3GBao4fvijyeh+2n5+QBW6uOKKcr4fP5TB7G84C9FWpnR1Qw
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
X1xbE4EGS1T/D4Cm9YY=
             "]]}, Annotation[#, "Charting`Private`Tag$9939#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> 
       GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{5.66469163721984}, {0.5}}, GridLinesStyle -> Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"38.480748302064754`", ",", 
             RowBox[{"-", "6.79308791483496`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{0, 10}, {-0.1, 1.1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}, 
       TicksStyle -> GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Virginica|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYGIg4MYPDBftZMEBCG88+eAQEhOB+iHsGH0Oj6
RUlUL4jTfnTzjMFAmABfEI0vjuYfMQLuFcGpHnt44daP7n90eXT3o4cPOh/i
HkJ8hH3o5qO7F10/hEYPH0Luw60ePX7R/Y/dPCGc+tHVEwpPQvEBUY8ID3Tz
AUy5wDc=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJyFkWsKwjAQhBevIFRNk4hX0At4hh6h0P71PHqm9k6arGThIyEDpQybmdnH
bX5Ny0FE7r8v/R8Zl6f8ofxU+JrhUbf3Cof3sfDPO+EIfSh83xIcuOXRX/3Y
7wj90JyHevqrPja54gw/y9f5LZ967q83v3LLU3/m08+jHsCvTT37Y15vnvp+
2/vi/KzzfvV7c38O73v3Zn+W9wX3C6CV
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1: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
p4vULEiubm7i8Rp/pU8r1EH+H78P79k=
             "]]}, Annotation[#, "Charting`Private`Tag$10051#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1: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
I8XNa8NIDtA98nCY4sSBUcSnleli7STFSlZjiJ5lZeD6HHX+0Bgy5q/26fI/
iqXnxhHiJ6nDR/noyWbbOYXMGA9a3xKmOPTjFFI2mhRQJEGx8rlpxGQzb9UO
RYoV42eQcD2Gg/Q6FNslzSI0n/th2Q2KX8UvIAHj5U9u3KLYlm0R2UzzmE4t
iOI8v0WEc6dp1dsoig+6/kK232078jqH4mX3P0jm49fplwspZvz7B1HID9ks
X04x9rsBUf2p05DeQPF82jJyVL3y+NMRivO3/kWaT6a8tpim+Oqbv8gpOx92
0UWKx0+vIWZR+9sTaBko98v5hziRco2iCBRfrqVB5xkfFpySINuvVoYWvUZw
5uOUpeQmIbSon45cd6gKJdc5S4c+evbMLMiA4ikuBpS/5NY7LVNKvU0QA5rY
el6E0YKS+60zoGlrQv23LlPc/4sRLTodecEriFLPxMiMaji5VamFUfKz4czo
hwD97UtRlLxHZDNa/4Zt9MozSh57mAXtZb3j4FROsXoZG2ohfqFBvpq6j9UW
dFhVU36ygdJvvWUrOmOzNn2xm5LTOG1DaSs8XC0XKVZT5EADO0+1i66SXTHz
iANlmd695wctI244ssyBcgvOLJ7ZRrZfWyMnuuOKraehLNkVAuHc6M79faeS
FSn5yXVuVJnGZNfEPko+4MKDHnigM+J7kGyaw2d5UfNUecOXZpT6m8f5URuH
57t+W1HqF9v40UuKIqya9pTz95gIoDfKtlV2elDqNS8LotEd87vowij150oJ
6ON4R9ZjUZT6KmNhNNViaCQmgVLv/ksYzZ368nhnOqV+XkMUbWYoZjX9QKkH
q0SUca/v6OsFslMKOCVRttU/lSvLZBO1fSVRzg8uSYdpmHD3S85IosRjVkbf
2Jgo78f27aiGzeGPTDvIttAqkUIPypUnnZSn5In7pdGjc/tuJCpR+l+8k0ZN
bkrvVgJkVxAaZdArUazJ50zI9pNlk0e9zgbcSDcnO+X7M3nUX2zNaMGabGI1
uhMNfzXDds+VUn/NRwHNqm67kR9MmZ/7SBEd+hVjzPqObHb92D3oU8097t8/
kh2uy6qMng9pDntdT3bruJ8y2iPJWHeqi3Ke3pW9aNspN/XEBUq9+00VNDR5
i4nTCtn6RzeponqT6Vcg7SZyv06kKlrr3/dqaCvZNFuL1NDyN3rEnbJkszdJ
a6Dea6Ma64qUnKVZA1XTuW3apkJ2OPs1BM3vL47wOEzJOzpQNHObFGO5BdnW
P/shane2Uiz8ItmSUwc10e0vzqFWTmRza2Rooilo5DUmb4p/3jiAxlymnTge
Q6mvVT+EGhYnMoklkT3ln3sI5WRUlVhIpcz/LXcYDU10MovJJTv1iJQWGtDw
rbmviexDDpra6AG+a5NvOsjuLW/RRtetOJkDvpGdZWypg95Y0daUHie7IzH0
KOoiU5DnwsCMu7aQ6xiq4HGy9QAr2aqny4+hkxVTU9ycZI/1XTqO2ppI7CgW
JVt6c+cJ9Nzd8FhadbIXX18+iQp+lnv7WZPixc8n0S6Rmrbn2mRzRmgYoIYF
ayxHjcmmY+M5hR4ddrgZ4Upx5JAhqnVTIuuQJ9mzY2ZG6AGe3p7fPmRPzX81
QvcfPqZ69gHZFdadxqjs810LEi/Ing/+bYLuQMbEOl+RzXIy0BQV/5KiH5RP
ttIpgTOoICNn9tQHshONdc6irDaLdm97yb7h8/kcyryWFXNxkOx2LV9zlCHK
5pPABNlBUwrn0b9VnRI+fyg59zELdEqy+IcW52byfb3bLNGxMtcty/xkZxFU
rdAhQ1mNl6Jku7M+sUJ7AxLitu2k5Kw3LqCNQzcNu46QbSxy1Aat9d53O/g4
2TxlVTZoFTfpjYYR2ayEA7Zo2SGLbU+syL5udfgimpV6oN7+JtkHvjvbo+ka
q0tCAWQLmNM5oKkdeVLNwWQXyMY6oIkM2+8oxZKdttDkiIZYb4KruWQfc7d2
QoP/vnd6VUx2gA+XMxoY6fn4fAXZ/dc/OaM+VeMrH5vIlj2e6II6STa+fTCG
22+JR9oNdSgLGEJJZLulh7uhtoYI19wvsvdErbqh5gHZLkb0LLi35He5o8eH
wuVERMgWiX7jgTbKDXWYSZLdyLjjKqrrruKTIIub5tJI4lVUm+5HK78KOVfa
FXENPUCUu8qlT85NzydeRysu+ogaGJPzg1+230DB67bacDOy/8jn3kA1UE+h
rfZkz7//7IXuNauuYPYn94vs1/BB85/xOxwJIufC/j98UKVJR67AUHJO3B3g
iyrc4LSlT8Bd0ch02Q+Vjj3P+i+PbImprlsooWPZaGGY3H9znOMOGi90bH33
FG64A/v7ExW4kJLuMk92ncfvOyjvvNbq9D9yvcyboUCUnT0yZYyPlZx/7wtC
Q0+P6kiJ4KYhnbe5h25J3r9gI0l2evb0PZRF4efhQUVyPZhhuo/S6ylMftfB
XdGXfS4E9X90K5KgT7a93moISvOtAzlrTO6fVEkMRf/ae4V3WZFzSTgWhv6+
W7v3sxfu/uVQo4foxEcrv9pX5HrmjquRqOjDLofQfLKJ7DORqKH5cSPDUnL/
LJ1dFFq+pCbbX4s7xUTPOhqN2MnR8WeQPE8Y+sWiNSuB5e8myPteod0Wh/6t
+Zt+e47sULoncait1djNbeu4Lfayt8Sj6jHvpaQE2fB57HeNHqMu1ns5p4m4
/excaZLQtN0v/+ZK4baIAa+TUPbG6DZ0L+7+U65sKegQjZOXsT5u9lfOYU9Q
geZBG8Jp8jzLil9P0OMJpvoD53Ar7rcxf4oW7T283cmR3D/5c98z9IEDoeVO
INlcKkzP0Q8qEcW6IeT6hAK/5+hvBuZUjkjcsz/W156jFskLno+fkOsXFWlf
oMod9eJvy3C7/JmUy0Dtn8AtXh9xVwRFlWegSU4Ff2A9ef8nUYaZKPPmp42N
X8nzno8Gv0S/I9evDs3jhnTsEtkoJyvJInMZN83Ai/ZsVLvLWteFZgt+Xjca
+BrNddMn/t2Cm79v0DsHDXwhVc8lg1s1/zpLLlp65XF+9y7cdtox7rnorCZX
cvI+3BYnBfpy0TO9/9zlDuHW7/B/l4cqcHQKHzyPm/1kYNxbdCRkxD/Khnwe
/ejWAvQxy5/RUUfcsw+rAwtQNgb+3Aee5Pm5Sj6F6MRvU63Oh2THnAkpRp+6
O7yUjsWdU7+XvwQ1nb3B7pWEW/shfVoJWjue0CP6kny+ZmF9Kfq897uTfRV5
f1+j/eWomenM59J63K0mcT/KUe7Of6pb23ArdpsGvkf9W0Tp877jNvE77lKB
WlRaxvz9jfvKDvmfH1BC+vD7MJmt+HkvS3dUox2SvyUHduHuDcyKq0bvP2EK
Vt6HW3F9y7ZP6Eq8lGH3AdzKfCa0NWhXiP2YuBnuyL2hjHVoOMuNYx5WuPlt
74bUoUfuBufW2OGu9bnAX48W+L30vuSBG3rRqzSgj9yn2QtCcR9SeB3XhB6d
XfNgjiLPW7i3vxmlu7z125kE3HadzT+aURfbXc/XX+Duqp3lb0WPm7qq6XzA
rdC93b8NZQG/LHsXcDdeP1nQgXpqSjMXrJD3/W2l+AUdOXg2O4x2G2ZC78FX
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
             "]]}, Annotation[#, "Charting`Private`Tag$10051#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> 
       GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{5.6646478918741865`}, {0.5}}, GridLinesStyle -> 
       Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"38.54673582738184`", ",", 
             RowBox[{"-", "6.804789381997827`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{0, 10}, {-0.1, 1.1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}, 
       TicksStyle -> GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Virginica|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYGIg4MYPDBftZMEBCG88+eAQEhOB+iHsGH0Oj6
RUlUL4jTfnTzjMFAmABfEI0vjuYfMQLuFcGpHnt44daP7n90eXT3o4cPOh/i
HkJ8hH3o5qO7F10/hEYPH0Luw60ePX7R/Y/dPCGc+tHVEwpPQvEBUY8ID3Tz
AUy5wDc=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJyFkWsKwjAQhBevIFRNk4hX0At4hh6h0P71PHqm9k6arGThIyEDpQybmdnH
bX5Ny0FE7r8v/R8Zl6f8ofxU+JrhUbf3Cof3sfDPO+EIfSh83xIcuOXRX/3Y
7wj90JyHevqrPja54gw/y9f5LZ967q83v3LLU3/m08+jHsCvTT37Y15vnvp+
2/vi/KzzfvV7c38O73v3Zn+W9wX3C6CV
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1:eJw913c8V+//OH6lYXva+zlFJKJFOuc8KCKKiEpShIRsKaNEKCMiW8goJSNk
ZWfLCKVEZYbsUVZ8z/P1/vx+/nG73xznXNfj8bge13VRzOz1LLYyMDAUMjIw
0H8/vWO2Q948CGX472cW2/ltUHKKVIL9f37WnOT4m9T0/zs75+E3W9lebGOT
/jODJbG2+HKp/cRW/8/XsI+xk05D2J//s3W4V0VH2Cg2+X+2G5EaKsgex3r/
z9U8QrFKhCks9//MQrkv+UNxFjP5P3+IkZSq+jCH1Wz8z48ILdLPrixgT/79
z8tLnK56/EvY+ur/bPbtbCXjhz9Y4tL/fb9jMqzk9jL2YeJ/dqy7b2YvuYoV
dP/PXPGNvceK17CyzP/5jQObvqDmP4zB+H9ezZ/jKV/bwEyyN/7zMw+biX3n
GGBM499/Dmc/kMhN3QI7Xq/+Z5+k9TOLk1vgTtDSf1YpsdP8kr8VqNW//zND
108oc2eE0pYv/zkiNdX4gd42cMrL+c8SLpa3zkpvBwffi/95+8G7v3IWtkNc
X8UG3cNL0Yas5TtAdHvIP7qjb2yZOB29E/7tmVul++SItVe4IxM8ngtZols6
XW6B9oIJ/jH4LdDNarFo9baPCQSe8M/RPSle8l2dmxmejMhO/xfvYa+zX04w
g4xh4QTdZcevcD4zY4aDou/G6H6dptp83YsZ3F+HjdKdsG2Xn0IMM4imKAzT
HWK+E9bymCFALmGA7ju146vvW5khj7fx+3/5F//wNniMGfye5H6j2+R+toMB
IwtQrut8ofv0cNgeIpEFlIqedtOtsfV7h+BhFvCI7uugW5W85yaPLgsIajV+
oBvL+dgYZswCFqUJzXQfRW+JcFzHnXShke6DxnVVTD4soF3z4D3dCr9tePwf
sUDMz+UqumXduS0Z41nA+cCpCrp3x1xm3cjHv1/6tJhu0e4Vg4URFmjbUppJ
t9DV5AyHeRa4NiCZQTf/vPra1AYLnN1un0Y3gfAkeUyAFVrdfBL+q9dzvzQl
iawwccs2jm72pCMLFuKsMHpCK+a/epcdUBvaxwojl0Yj6GbUlv3dr8kKfv5B
gf/VU8S9J6K6rJAjwvfgv/r51o1cNGQFhduP/ehev+4R9sWMFVgdTL3p/hPQ
eLDLgxV27TF0pXvivZl3YxYrtDhrG9NNevzF+lEBK9Smhp+n+6zJaYOz71hB
l/j+LN0Vy0rSPxtZ4dSfn9r/1fderu6/Q6wgnbrlKN0Nq/4V5ROscOR10OH/
vt+wnuE7xwqRRWsKdFuajXlxbrLCpnOQFN3K0ZWSksJs0Mp3no9uB/OD3FNk
NrDsZSDQ/Vw+cz1Pkg3qvANZ/ovfh6iP6EE2cIlFNjfo9c5g52GoywZPRTl+
0S3UNmQheo4NxmRe/qT7dPwF3cFLbBCwRuylu/ig2i47Gzbws47+QHewtWi7
nz8bVESk5NBdfTi8RCuEDfrerb6g+882pjSuJ2wwoCGRTPeVpIVbT5+xAcVz
IZTuA93N1LdlbMBtonGD7uvPgN3jPRu4/hYzpzvRrvAvNLPBPq4KI7qZmFM+
fOhhg1mVCyfo7kdu3xyeZ4Msqx4xurlZZ668WmEDEcHv3HRrfDHXcmBgh7XP
aTvpznPSJa+zs8OVDNvZf7j9X0g280ixg2VJaQXd71yeFnyVYwe3o9Fv6J5V
4UlKOsQOfAqSaXQb9W047znODilORg/oluX6LHbsMjtYLfRq0z0aMuoTacEO
3IJyKN1PWf7++mXDDrd89svRzbZNMC/4FjucMFIn0D3x54L658fscNDcrG0d
d4qzdebuGHZ4qbqznO4Ls+4Ej0R2YOk4lUl343h8LymTHSInivzpTu/rt7te
yw6HDeoU6Ta+MN31rpkdTKQRcbp5P28ocnxkh6O2apx0+7STGPP72WEh59/Q
Gj0fNabR63/Y4XNmQwDdohkjlaFSHBA6ZVm4irtb/I/4oBwHMIhnxtId9GxH
4IFDHGByUN+T7tU4ybNfVTmg9Uk1RveXkOtjVGMOuLrwtmIFdxiL+ylXMw6o
lChOoPtEQGBegxUHBKVscae70DvT09aVA/5kGynQHeE8RSh8xAHcK29il+n9
dvafK1MkB1zu83Cke+sNjm9G8Rwgp2yjQbeDpVz65gsOwGpfLPyl1+sFRyXN
ag7o6+DE6GbBlkz7Fjhgx4fNtCXct1R2MxWuckDD2N9rdI8eu5gduoUTLhg8
kKK7RqN6VZWTEyZbdTMWcbvrhUS8lOaEWlJwxALusbNVSr7ynKA3pH+SbsNz
Cz+MFTlhK8V2c57e/4wvyBDUOSGQx9Kc7t8Wu+pumuLv+2skOEevH6vzNrpW
nHDgoG/VLD2f1kFc0vacoF+Rbkl3mv3cpX5PTkirfvl6hp7P2+V/jsVwQrjC
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
U1BHKhYkVjY38X7hazmun6OG/D9X7gte
             "]]}, Annotation[#, "Charting`Private`Tag$10163#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1:eJxF1nk8VN8bB3AklS2yMxhLtqwlKe49R6kIJVsqyZZE9kSolKWIQsieikJI
dpIQWUOSJEnZ17GVPb97Z8b35x+v9+vznOc559w7g4iVs8EFOhoaGk56Ghr8
d9INKwYlm3soDfWn5jNR9xTxEtjw+ocKfyLx2n9OqgwT3kwM/s+XEQ/HBeG4
//x5xS5qWjjjP2/5/ltyUrj0Pz9pfOw6Ltzwn3NeBX+/LN9Nda665NVjqFTU
/52izvSkf+n/jmwItT1T+53qSvWr/Q9mjpr9+M+PmZr82Q/3UV2vztt+b6g5
8/+OiNXVvsv26z/772xhXf++4Tb11fH7rmUav/+zR96JDo8X//dF8Cluwq2f
6g51KaPVpxcODFDdpT5iJ5nVSztIdY+6X5Pux4/8/zevvNtU+Z7/W2uuXDHh
wob71DOuGxSeavi/GbeO7OeUG6L6t7p95PWKtvAND6g3EjgOhc1veEh914v0
Om3TYapH1EOVUF2G8g2PqU+8+dxWLTxC9YS67pFLxjf9Nzylnt3275va8Ian
1VnPRpkvHhulelbdaVC6vyBnw3Pqqk3D1wb5x6j+o77pdRob950NL6iPPKM3
k3+74UX1lhjrF0fmNryknh9cPWsuPU71snqsrwjqeX7Dq+pWVj87XjRt+J+6
rFaSQ9e+CYr9aBB2tdWiaccN0yJ/5c7SbUulmoYO6SGW6Yl0b3gTUsXBF7ef
bZJqeuQ5g9fAySNU+9EjoUudCva+G96MuE7s9bmdt2EGxORn1If4kQ1vQdTa
59jzhaao3ooQaw3ONRlRTcOIjGWyza9UbuTMSGuSM+Bc2DALUhDeEiIrR6LW
b0fi/eU6Na2phmzIzauhIufiNnJ2xObS+GWPVqor2ZGd8jt7PtBNU/vtQBhF
AiR/qlINOZEg0+R9ggYb5kLowkuOnnWgmoYbWf43cfFr0oZ5kasqW7y4ijfM
h8w6itw1bNswPzLeY5zeSjdD7UdA7DhdSlgIVPsJIgM6IfU6e6muFEJ6yipG
6i5umIg0x0pKVzZT3SeGhBQoK53/ttFPHNFq09j/b5DqFHGEYeK4RtIs1cSd
SM0WM2319Y18J1J+NfxSidIsdb4k4h2Z5HoKpZpGClHNybz299hGLoUUDNYE
K9tsWBrJNlrKyI2hunIXctmFIe/EM6otZBGZUI6yqVdU98kiz9/LNco2UE2U
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
48akrC9otVbV8sHtuKVszF91ot4GYQ8zZHB7VQ53daEjRpX7/ZVwm+03dfiG
mpya+2mminv1rSRtN7rb7LQs2xHcE1179n1Hxy/srL1qSe7Hdqz1B3rGztRB
3w53bPTSjV603v4eu4wz7jP+Bbt/oqnOM+d++JL7oyaGfajZtbd/D8Xidvr4
+tcvtNFnOlHwMW73Yk6d36jqDbFDC2m4+0sHin6jnP7BDzLzcReHbY7pR5tD
jaXYW3FX/SG5D6IHHtxtGfuCW+Ov+ewgmh7x5kpND+79fMXuQ2hAjEiV5xju
bQ0Xbw6jQm1/ZUl0bJjB7ZryUdT4JBuNGQPubS/cjcbQ0Hbpz/XbcGe8TSGN
ocsdZteesuH+FlKnOIF2fquuNRbCfcXwed8UynK2J7ZaBPfFsJQYEqrZ88dB
YSdmv60pF6Sm0bxeqR3bZHErvWYcnUbv9983L9+Pe21fZuAsWmuTriSN4OtT
kc+zs+jqYBV9DMR9Ouam1RxqPzKf6XwUN+FLkvY8enTyzIKoMb5+UjBN9S+a
zOn/+aYpbpcGpdK/6Lzay1c9Z3E/5H2uvoCmhKxcjLHC11/bH6y7iC5LJnZt
c8F9zEEqchnVP1FTYOuOmzWid9cK+vzqRPj7q7jdh1kaVlDDWnXt69dxmy1K
sa6hWVY/SqdDcOfZp9Suo3Qhm2P07mOGyMUilAaYvpZzy4zAc1qV3EQasJnm
hoxNLL6f5hXW87TAPEko4WsaXq9N6v5HBwpqjngqZ+B+uf728ibAOOFkGJGF
ubK/hPBjEyg+8I5JJx/PeSeCaukBW9d534pKPOc6VVjEAGzX75gK1OB5SSD/
gS2gXCJX2asOn29b61m5BVzyoJlUasHrNULPd24F1TuenEv7jtf//fdDignw
HmjYT/cTd+zQci0TcLKc4Tr/G68/8jjVlhkI5Gq08I7i/UwIM3ks4IrebzT0
L/n53hpUZwONVxgFRpdw+zF1xLMBYuLuhcNrmIkt47+W2cDHsduv1jexQ5q+
FNawKnYgcVeM6M6O2SLIOsSeA/i+0llt5cRcma39vZsDtHe6d8ny4vXVXYV6
nODmzprwISHMNHorB9W4QFe1De0ZWcx+xAjHfTxgWqOb/7oCnqf0JRfwgC1V
J5RTduP98lXclXmByrsDF4dUcUsIo+p8IOoN20e3w7g38f9zFABZB4KGorUw
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
             "]]}, Annotation[#, "Charting`Private`Tag$10163#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> 
       GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{5.664647818648941}, {0.5}}, GridLinesStyle -> Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"38.546925325503`", ",", 
             RowBox[{"-", "6.804822922724385`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{0, 10}, {-0.1, 1.1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}, 
       TicksStyle -> GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Virginica|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYGIg4MYPDBftZMEBCG88+eAQEhOB+iHsGH0Oj6
RUlUL4jTfnTzjMFAmABfEI0vjuYfMQLuFcGpHnt44daP7n90eXT3o4cPOh/i
HkJ8hH3o5qO7F10/hEYPH0Luw60ePX7R/Y/dPCGc+tHVEwpPQvEBUY8ID3Tz
AUy5wDc=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJyFkWsKwjAQhBevIFRNk4hX0At4hh6h0P71PHqm9k6arGThIyEDpQybmdnH
bX5Ny0FE7r8v/R8Zl6f8ofxU+JrhUbf3Cof3sfDPO+EIfSh83xIcuOXRX/3Y
7wj90JyHevqrPja54gw/y9f5LZ967q83v3LLU3/m08+jHsCvTT37Y15vnvp+
2/vi/KzzfvV7c38O73v3Zn+W9wX3C6CV
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1:eJw913c8l9//OH6jIfNp76fnMFIioqiu63ogUmkpiqSMZJTMlFEiZCZ7hYwo
FSFUdrZCUUZINtl7+17P1/vz+/nH7X67nrczHudxHuccsskdnRsMdHR0+Yx0
dLT/zx+Y7JA3C0Dp/vubxnb+7pOaEPuI/X9+UZ9o90+s7v/3uyy/37dkO7HN
LdrfFJbI0uDFqdGLrf6fb2LfY8bt+7HF/7NVqHtJc8gQNv5/thmU7s97N4p1
/p/LuQVjVAgTWPb/mZn8WOqP8jRm9H/+Gi0lXfZ1BqvY/J+DCQ17Xlyfw8I3
/uflBQ4nHb4FbH31fzb5fbGU8esilrDwf/03j4d8vL+MfR37n+2qHpvckVrF
8lr/Z8642k71wjWsKPN/fm/LekHgxAZGZ/g/r+bOcBevbWJG7zb/8wtX67H9
l+hgRGvjP4eyKSZwUehhx5vV/+yZuH5+fpweHgQs/GfVjzYn2nMZgFL+7z/T
tfRCkQsjfGpo/89hKSmGT3S2gX1O1n+WdDS/d3HPdrD1uvKftys9HM6a2w6x
XSWbNA8sROmxFO8Ake1BGzRH3aYfOxO1Ezb2zqzSfHLQyj3UjgmezQQt0Lwn
TW6Oms4EG3TeczSz3Ji3+NDFBPzhfDM0j4t/7NHk2gXhg7KT/8V7wP1i+/Fd
IKOXP0Zz0bHrHC9MdoGSyOcRmt+kqtVbuu8CtzchQzTHb5PwVojeBcRkhQGa
g8x2wlrOLvCVi/9L84PK0dUv33ZBDk9tz3/rL/71Q+DILvAOz/5Ns9Hjd7a6
jMxAtjzbTvOZgZC9RCIzqBQ8b6VZi6GnWeAQM7hHdTXTrEbae5f7HDMInKr9
SjOW9b02xJAZbnyKr6f5KHpPmN2SGW4m6tfSrGRYVcbkyQxnKp58oVnhnzW3
TzAzxPYul9Es68JlzhjHDA6Kp0to3h19jWUzF+//0/NCmkVaV3TnBpmhkf5T
Js2CpkkZtrN4+3+lMmjmm9Vcm9hkBr3td1JpJhDCk0b4WaDJ2TP+v3y9NHxC
isgCY/duxdLMlnh47oY4C4wcPxX9X77L/tXo388Cg1eHwmhm1Jb9132CBXx9
Avz/y6ewR+Ei51ggS5j3yX/587sVuaLHAor3n3nTvG7pGtJuwgJstsYeNC/6
1iq1uLKA1F49J5rHvph41L5lgW8O2oY0iz1rtwrOY4HqlNDLNF80OqN78TML
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
NJGSOcmVrS0qjHQuj1zI0kD+H8D8E0U=
             "]]}, Annotation[#, "Charting`Private`Tag$10275#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1: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
NqS6Lk9288UvquhBDa/zXw+QnWh8E0Fze4rCXI6RDQXaUDR9m9TmUhOyFd17
IGp1sUI05CrZld5H1NAdry6hZnZk32hJVUMT0fBbDO5ktzm5HUaf2tKOnn5K
Nou2ylFUryiOQTSB0o8x+yi6fbOy+Gwy2auuu46hQXF2Rk+zKf0rJY+j3vU/
G39/ITvjJ1RHD/PeGnvXRjm/u0kdXTfbzuj9kzKv3EQDdVtWV5MeIdubNugk
6rAzP8eBnpF8fzbOU6icy9nmw8xkG6Z/OIWOlY2Pc20nW33P9dOopaG4ZJEI
2c3a386gl3xDomhVyA7QtD2LCrTuymtVI9siqPUs2kGo/pqiTvbJnao6qF7+
GtNJA7KfJ3DpoicHrO+GOZLdLdSvhx6/K55x1JXso/ZG+uhh7q7Ovx5kZ9z8
ro8eOnZK+WIA2bJ93wxQmZQ9s+KvyGb4N2+ISiLDou1vyBYrf3geFfuWqP0o
l2y0jO8CKrB5e+Z4OdlGH9QvosxX5qzyushu+d5yCWVcy3h6tY+yX5yHMUof
ceUz/yjZZajcZXS1sl3cY4FsxWItE3Rcoqj7+PatuK8LfDVFh0scWZf4yGYr
PGCG9uvJqL4WITsnOdEM7fKOjd62m2yfxNvmaEP/Xb2OE2S3pWlcQWvclbz8
TpMtfKzyClrJRXqnqk928HM1S7TkqMm2JDOy6/uOXkUzkg/XXbtLtreu/TU0
VXVlUdCbbMevtNZocluOVKMf2TyxT63ROPodD/dGkd176YsNGmixBa5kk327
2dwO9Vv9aPemiGy0Y7s96hPuGn+5jGyB5ip71KNyZPnTF7Jfzcc6oHYSDXkB
w7g9P+RJOaHWJd79KIlsueMhTqilHsI5PU92l/yKE2rsnemgv4kJt71mhzN6
uj9kF4FAtrnEOxe0YVd/m5EE2d9Cd9xENZ0PeMTK4KbZ7RB3E1Wn627mO0DO
1XJDb6GHibtucmqT8xudsbfRsqseIjoG5Lzi1A43FLz9WhNiRPaX5+/cUFXU
VZDtGtla8q130P1GVWWMD8jnfySoeKC5L/isTzwi5w19vzzQvWM2nD5B5Dwn
2OseKue23XJTLG7Yl33dE5WOusz8Lwd3mWNox31UqG1Jf3aAfD7gHsdDNEbw
1LrCOLleNPzBQ5TfPDHVYYbsl1v+PkR5Zo6vTPwj16ej/T4oO3t44jAvM56z
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
             "]]}, Annotation[#, "Charting`Private`Tag$10275#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> 
       GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{5.664647818648661}, {0.5}}, GridLinesStyle -> Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"38.546925327037016`", ",", 
             RowBox[{"-", "6.804822922995527`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{0, 10}, {-0.1, 1.1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}, 
       TicksStyle -> GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Virginica|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYGIg4MYPDBftZMEBCG88+eAQEhOB+iHsGH0Oj6
RUlUL4jTfnTzjMFAmABfEI0vjuYfMQLuFcGpHnt44daP7n90eXT3o4cPOh/i
HkJ8hH3o5qO7F10/hEYPH0Luw60ePX7R/Y/dPCGc+tHVEwpPQvEBUY8ID3Tz
AUy5wDc=
            "]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]], 
           PointBox[CompressedData["
1:eJyFkWsKwjAQhBevIFRNk4hX0At4hh6h0P71PHqm9k6arGThIyEDpQybmdnH
bX5Ny0FE7r8v/R8Zl6f8ofxU+JrhUbf3Cof3sfDPO+EIfSh83xIcuOXRX/3Y
7wj90JyHevqrPja54gw/y9f5LZ967q83v3LLU3/m08+jHsCvTT37Y15vnvp+
2/vi/KzzfvV7c38O73v3Zn+W9wX3C6CV
            "]]}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}, {{
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{}], 
            RGBColor[0., 0.76, 0.33]]}, {
           Directive[
            PointSize[0.009166666666666668], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6], 
            AbsoluteDashing[{6, 2}], 
            RGBColor[0.9, 0.05, 0.]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0., 0.76, 0.33]], 
            LineBox[CompressedData["
1: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
x9fsEgEYWJCsuN5WhRVpHbwwUykA+452q0XLV2E276acr38SAP1jvEW3Niqw
MAPS4aefBeCRX5hbhn0FVjamu/6uTQB667kFdnWWY7zUV/eXOgXAivji+2hp
GVb1yCrOY1AAHB8q3iAkvsfGpcIvxY0IgN7HPs4tou8xwboq8dJxAbitYfmO
41kJ5rhGyvk3KwC7a5Yv26YWYyK2nbU+mwJgkzjEcLmxELupemLyvqAghN13
C+FzzMfSur3yXhAF4deHxbURlnys1T3zZiNJEExQ10T3l3mYRBYzE4u4IGTz
+E2nj+VibcI1AiFygrDG9+J8mt9bbOPdTPcbBUForxUdjtr3FttzkpzSclgQ
eFpo53g7czCfAG9pAioI3F87fUIVcjCZ+cOq4TqC0LMzs3J45Q127rHN9nw9
Qajrb3sjbP0G89/ztLndQBAsrrSJMrW9xrovzRrznxaEB1l7m5oLMrHAT6/t
YywF4Uh/5lHCs5fYwHNKRKKXIJyQuSxk9TMdG7/3d4XJRxCsbacs/lqmY7MW
yRdt/QShL4BH5fNkGsYgRtkrFygIiqp+hu2saZhwFLm6OkoQFnrVPFTMUzCK
2x9JyThB4Huc57BzPRnbbZQUEpQgCKIOn15ORydjBznJZ0+lC4KKhsy23h9J
mEGA2PRAriBktiswXv+TgJ22/m2sUyAIjRYuS24HEzAz9cT3WcWCYJ4dncXx
6BnmsEkKcK8UhKPGgpal2vHYfXcSaWeLIEhKqFZRRmKw0suiutIjglDgYN3a
WvwUq9HoeRs6jseTddTNDp5iTbRnAgtTglBsFmkT9yEC6/gt0le2KAjrHH92
hvWFY7OnRTz0twoB2waH+wWFMGzlYPfvvB1CUBu3UqbT8gRj4I3XEGQVAoTz
4DV7+ycY+2ci118uIZB94hPJ/TIU261FzHARE4IedP9kjPcjTFbiJ3sHVQgG
mwj94l9DsENb41xVJIRATvb0Nts9IZh6pTC2dZ8QHIz3OFUxEISZKQp/f6os
BL3HysNS/R9i1vxdKquIEAjvnrzVsPAAuzIfk2ymKgRPrsh6sdk9wG7lCF2V
1BKCUxpjUgVnArCI3UJbi42F4JxHuVXVOX/M1EziRd8ZIdjzssiPb/Qetivi
gA6HqRAY9UURCzzvYfmbeqGWFkLwlDmh/026H9b+3VeE45oQvH13494RHl8s
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
gWYRsHj1Pudm7AbapGnqdr9TBCYTa732za+hUgzDiZPdIhAqG3B33WgNfVDs
2mTyRwTQD1Le5oWrqKZ0kJjkkAjs5wlKiHuwglZzlXxomBcBSttQwhvDJZTS
rDEvuywCHq3evNs/LaI+976QotdE4GiukbOpziKKLg272jKKgp5XdXa53gJa
0i1A2kkQBYf6vrFQtzlUKDJVy5lHFO69e+nBvn0Ovakv69rJLwq2zxcJO2Nm
0UPVmo0vRUVBvbzS8Wj9DJr7ws1FZ68o1KuGyekfmUa5zLc8y5URhSNY8JeH
5VOok3BIg7C8KIinPItKZJ5CZULSRMYUReH875NKYxkT6CuXtvogTVHgJrZ4
BAiMoTulL87MaYvCH+WZy5peo6jtwCjRVE8UfLcd23GnfwSVOMPoLH1KFBbP
aIhzVAyjKYgc8ZO5KBi/76p9EjuIVp9g8VuzEgUYeT7oTxlEey/2jUrZisKd
lX8oY+YASvN9WnLfURSep6smXqjrR9PqV86CpyjkfXi2qcDfh9Z2fK1yvC0K
BiUJzzeye9H+4UypZ3dFIeTCv4yx473oLlazlZUAUZC4VrafMfAvmq5fHZ0X
IQoPmxn8p0T/oPWX4hh6o0SBC3vAqPr4NzrofN2WECcKHKYvL2CDv1CJCAnF
q8mioPLgs05tQg/6/Edgh0QW/v8330ePHv6JZpgb8cc2iELBuXfLpWvf0UYX
6duNTaJwSvlxZIbPd3TYb9vg4ic8Xy78BpLM39HdzwvfGbWLwtu1XKUXpG/o
y1GiMftfUXi3ty4HbNvQprX5UpV+UTh6gtRtyNCGjrK17LIfEoW+8cCnT2K/
ontkfebrJ0ThVbjJRZtvX9BXrv3hPquiMPuwwuKQ5We06V7ZWtY/UdhW9VX3
OutndPRppGUPAwm8wu3PEBxa0b1FWgeUd5DgtUrmWT5SC/p6/fXXOR4SiO8W
OjX8uhl94+/GdXkfCQ4nnO33N2tAx49c8PXfT4LWyL9zn/rqUen5o3OpB0hA
LmN3jnWoR19Z8H77o0SC+osPhYJ969AMLC/6nCYJVgP+Njh9rEGHF2N33tIm
gU6+8fRNqxpUMsvXI0qXBMIlE5ypG9XocxFD03ZDEnw/bJK6X6kaTVuZFjtx
kQRNusJl2+or0f6cH6FXLEjgZP07YvpqJUqzrdwSZE2CWbuI5ZcClWjK98d9
DQ4k2HExVb3uTzmamCfzQvUmCb5yWhb8dChFY69ekTn4hASdxZYtUrxFaNeu
U4lGESQwEIxfLXxaiAp1qxBcokgQEski8UuoEI3WYZ3NekaCQcVKzVKpAvSp
5Kt3u1+RoLKeK8bIJh9t//VE4tgbEjiMiyYdWMtDeSNvRVnnkGCCelpeMywP
DduqfSulgARJ7xLZvtXnoqF/h46I1JBgf640zVrrLfo5uvWNcj0JvnRbG6dO
5KCcBoWksx9IUCjKKVYekYM+Kr/PENlKAkb109S6z9locJx4LWc3CZpHvijW
aL1BA4wtjzMtkKCj2cDDoDUDTdHvNrVeJkF/yd4HJLUMtFTb2LFhjQRFsYs0
QtELdBY59iSIUQwsWFMX+d88R00l9nbwEMTgHo+aeUdxGupOTht24xGDo8XJ
J/vU09AwYdHVDn4xGMxOCXz0ORVt4OAUjRcVA9ExMY+AmRRUfmnWYtdeMbjk
nzTnZpCM6s04XL8vIwax1t3m4xNJqO1Yv/+wnBiE3DgcEx6ShD77/T3jtaIY
xJ9OifZ/nogyN5ZMKmiKwbfzPCk5E/EorfoAQ5S2GMxLDZE4tONRtPQ114qu
GOxNjXrMmxGHuuYkKJQZiQGb7JLzB6dY9Fe0r4eGOW7egfiMPdHoStha0Asr
MRBerSoWS45CeUOuP9tpKwYk2S+P04WjUO27NpWfHMVgOuDM/mj+SDTfTme7
iRceDz+Xae39EWirZY1A0R0xGF5/9taqLBwdvXBESthPDAiHnE+x64WjYoYy
ur8eiuHvGxFXWlzD0EBl7jCbKDFQcDf9EdwTiqYrBKU2xoqB0VjckSfeoWil
zNZ3exLE4HLN8T+FYqHoAnWxYzJNDDKfK+x3b3+EXmLtEnXPFQM73de9ufuC
UY9tRrKd7/D5l+lsMQ4JQp9uNoNKsRgc0Yn5EDAdiDbNlVluVohBwPqDlBNV
D9GD3ckvAz6JgV7+Y0WNwACUIGO7nP1ZDBQrs+7sYg9Ax+/IHPvRJgarh8QH
4sPuo2m09/27u8RAP6WYn5ruj/I6tIs1DYpBrpUxmX3ID50ujXWcHRGDoOgc
fTVvP/Qjh3mZ8IQYjDUKfX/J54fey5045zAnBp6fnzv/1fVFV72Yjm9nIIO9
dfdsSZsPOpxu4xK7hQyH0/gktD180O8tH2JkmMggVNTTlEv1QXPJocMm28mQ
XnVGtXfmNmpfK3L/BRsZRLEBn13XvdBO1kNVWkJkUD1160Ywx020XiFmuFuY
DGK3zeJfP3JH8y+sczqLkMHjGMXjOpc7GppdbRYjRoYTfwgKNaQbqJaR/vqI
OBkOaotF9JlcRw955dJuS5Jho9hOu37UFd2VznecW4oMW6+XvBnycUUZln7G
KEuT4d3U0I7CPBe0KNb2cJA8GWQfFitqyzujz2uazcQU8PH0W1v+fHdCI8Zl
7ucdxOenQNI083ZCndCF9p+KZLhOdLOpS7yG7u696yKNkUHipPgWZt6raLRU
3JtPx8mwJNg8U/LUFp2f00z30yMDxvEdEGZbVL98Nl5JnwxtTsy/J7wvo9uN
dILTDclAsZJTfOJig7p5rdh7nyVDbUaK3MptK/SzZrrFgfNkkLxe85FppxUq
zXXy3IgpGZyYGbTePbVE+9MztI0vkYHz78U9nwssUMPW07v3XSbD352Hbunz
m6NZMUzkPlsyrMk4OC7nXUJ3WmULxNjj69/Bf77D6BJaubx9xzZHMsQiOzeY
FS6istSCge7rZGgQLMgJ8zZFA8fNe8JukIH41T4vtvM8OljA/k3rJhl2u1yz
MFQ6jyYct67N98TXw2Zp6cV0DmVz400N9iXDip/CpfuVp1FbrDJW7R4ZnoFa
cdvh02jNzithy/5keC6a0Hwg1wT1SKi5a/WQDBXu22oGso3RkQaXS0dCyWDU
735S+ZMRejSMdGb2CRn2qRb0qp83QpNMm/Qzwsnw5UHRqZ4xQ/TMDAXjjcLj
9Zj9oD+vIVov/EV0/Blej0EpfmRfA5Q64MWXkkiGq39EdEk0A9Q7ezf7mWQy
1EyXV3gH66MKR33Wa9LweF7OYb4mfgJNuSr7My6TDKRgUdU794+jG4d/fj35
hgwxb32O8A3roGcZA5p2ZJPBKuXWuLKeDkqI+lXsmkuGiSvTfX0UbfROZUj0
8WIyvPx4uDJwVhMd7amMWCnBnxe3a6zLSRM1WZsLfVFKhj/MJEbmWQ1U+tC5
h0yVeH0o60QVrR9Ff2RKeLyvJ8Nj2UWrWjl1VP3D2Rt2jWR4oRh1XqdODc0a
DHYRaCLDB8LIxYPn1VB/ypy96ycyHF/1eL/1kSoqH1Vxfm87GX4zsauSOQB9
lj97uvMbGW7e+zjXYIOhzF/FTwV04PF1j1kxeIeiv9mCdfu6yEAeNn7Lboag
wb5nkLi/eP3m8VR9/6mMLiUGKWn34d/3tYmyHVVGLcrKDy71k2FeTsUoLlsJ
VVreJWM0TIYr4imznqGK6ODVGRLrFBkUDo1H6LkfQk8G7SIWT5Mht2uvisny
QbQ047TA5VkytBw3vCrtdRAN7yvjrFkgw2UuggtjsAIKZwMZPNfx8Y5pcWQ3
yaOZN8rWd2/g+ceiojwvyaP8EdPL3zfJcKdEzjBpWQ6daDGZkWeiAHOjxvMy
WTk09iitd3QnBUJ0ofjTNVl0m4XJr2hWClzIt6qilcugTncedmmyU+CkcmOn
NUEGPVYy9TWFgP8+roXDpFIanZctrTknQAGr8pPk6ON70It6UxXMQhQQqV7P
Wi+QQpvsqaUFwhQYUVAVeCkuhSalP8jnJlFAnPIp7zHbblSPaJzetIsCzquC
6s83xNHofpnK8xIUwKbaRuICxdH+N8w/xyUpkKByoH5BUBz1glIC514KsLA3
jqYe2YW+tqZ5GclRYG/2kbzoBCq6LPMvsl+eAocMXs+aHqGiR5e/v3VToACR
fNFNspuC/gwMHIo6TIEHlzpq0igUlCVnxrAboUB/R5iE5n0x1ORW89WrGAW0
89eq5n+T0BS19AcbQAHbgFvtBISEKn07U04+SgFUJ8tWe4soartaIWWtQ4Ht
sQ+2dWYLow1HHzFMmlBARfvw2I0ofpSbw5Z45wwFPKu2nNEk86NmHaqHCOco
4Lo6FxWYyYcu2i04yF+ggCa/1SbygReVeGzaccMSj8fcG75FMR7U5cyh2R3W
FKgadmjjfM+NllMI7DE2FJDjODyAnOFGjfNr1N7b4evvnTbNjOZC73Xuydq8
RgEOiTmH5/sJ6OeUrR9CnSkwPtE95F7AiYpc+dVHcaXA3bwL2G5OTjRv44nQ
0RsUeK682dXSxI720lbuPfDC81sbbKZux4qqOjac53pIgZrxFr2rCjvQ1R8j
mrWBFGCyHNH4mL0dzVdnk3cPpkDWi4fHKTLbUQmhk8w9jykwIaS0z/7ANpSt
tis/IxLPR8twab4ZE1ov8y/xfDQFdl8q+bIxxYjeiREL4oilQD716JsqP0Z0
1tHK/PozPB+id+7fyt2C/hCaZIc0CvzxjX6ptJcBDbtHWJlNp0Bt6nPRxGeb
yPEp+f70FxQIestmMDa8gZTXupewZlIgiiWYGBD0D0m7tuVyx1sK6K3vvHJm
YxUx66IZBuZR4BmxvpTTahUR0NBEkHcUyFDR+KP4aQUJFA7iSS2iQJ/qff2w
l8uIUx1vpWMFBfzjzN8aP1hE9uw/nEmpokDlD1mN4B2LSF/s2cj2agqkf3o2
nfJwATFxSriiXE+BrTUesrKR88gR4m6h7Z8o8ELh4Cf21llk0V9na3ELBZIO
W08HW84i2dNXphw+U8Bg2dPfZXUGoda/rfvSRgGhGNJ1ZdkZhNlZxeVZFwXq
p/5eSrKZQqp/Xrhg0E0BYbGHQxJ5k4inpo8W0y8KfEDDVLKZJpFJYh3J7i8F
TnU7ydvnjCPt9SeaFYYpUJcS/kry0CjySM65YGgEr0+UsP900ghyLD48OXaM
AvF+Puu/2EeQEucf7gxTFCDnbphlzg4hiSIWuz4u4PNNLjyv/HcAUT6wV8Zi
iQKZLJ2RllcGkHbt+cPLyxSwDHxWvr7SjzC73z++a50Cx444sxwX6Uecvrxy
8WKkArY7eG7NsxdhGXb14t5KBa95oVVNoV4kbePI/YxtVFBmnBJKLvqL/Njb
GtPOTIXepSMDJv/+IHB/rlKakwo569qrGiq/ka740qZqAhWCnV1Gb0f8Qq7n
+bef4abCc5tOV/mZHiTjj8DwPT4qkJaP2lTkdyNcKkc4e4hUoMTde+pj0YX0
Tt27ELKbChdiqou1dL4jXttPXKbtoYJx9twctH1D+EUFnIv3UuFj+eOWfLNv
iI7Oy3sDMlSwj65K6fJqR3LTPmUiB6lwl/9QSmn7V0T3feS7tkNUEHG8UbjP
6Ssy+OVihZ0iFVDBnsZC9q+I8ObM16cqVBCI7tQbPfEF8TvLvzqhSoXDJrYW
Kl9aEZLTb6Z76lQYSs56aCTZihTdz2AX1qCCzJDDxqJPCzKep0zR1KKCOBm5
G4F+Qk5xXNRKOEEFt7Ppdvv/NiG7al5EnjhPBVXfa/767+qRFunltG5TKhwk
rhy2ReuRm5FaefZmVCjaN+k79aEOabYbab1vTgX25I8KAsO1iAth786Ky1SI
OZj69AZWg4h4eAro2VFhLrEs701XNVLX1yz+0x7PT1tn4Lx7NSJYeEVt6SoV
Tlu/vXa/qAqpuJDlKXsdn08Ao2+sQSVi27DxsMyNCg3v9W+cW6xAuOX0o4+7
U6F2psJ/40QFYrN1Ov+yB56fu5GvbrGUI2yZcpOJPlRo3ojoMsx4j5xbzr9E
CKECX3Zcy2XnQmSrxbZrCY+oEKnK9+zFYgGS1WzsLR1KhdVvDFL2twuQLYmL
MVrhVLCNEtmt/vQdkqGh2OYTQ4Ud4wW6A7/yEMPsB3854qggEXM8rvNGHrIm
2DkVH0+FTV2ugklCHnJi/BZbcSIVNpT+LZ04nosshL3XmEmnwttjKnVlHTlI
wjrrqTsvqJAyU9cffCcH0bIxtWB/SQW2mdVmKakcJF7p322p13g8GHcVnGDK
RtT+oEXmuVRIfWEyaxfyGgndV73nazkV9KTthCMPZCAZiud3+lZSIfnKLynF
Vy+QCvX5IblqPN6nt44O0F4gk2cl0p/UUWF90r9IjPwcOX4/UOzkRyoglaly
oJyGWDyhbTC0UOG91/Azp4ZUxCO+tDunlQpU74Y86dOpSEbuZAyhjQrFsbyW
HLdTkO2/DXk/d1LBlPiPZWkoCREdHZu985MKrznKMrY8SEIUFu59ke3B4/O+
YVJ6TxJiyVr46PEfKhj5D7fbjyQglYeJO/WH8P3x4gt3jFo88kMtf2hjmAql
eTJlcilxyJSeXn3WKBVWXj3vPLMtDiFZ3fHjmKQCU06HCOP3GMQztO/fp3kq
7NtirvIiIQoJi/Pq9l6kwq3vr5MjBaOQV8/53u9bxtd3OWj19tNI5EfpsZsh
a3g93TS4vBT1FDk0kjmry0iDYGHVv3Vl4Yje/NEv60w0wGPzrUgvHLHa7Ml+
vY0G+/WtP0j+CUPC+QhX2XbSYGbDPEqVLQyZVr0+1MxJg+h/iloTd0IRZj32
ek8uGhy+pWevSQ1FxM48T9vLQ4M+pEPJJuQxcsLxh3kQPw1k62XT9u99hGTG
HunWEaWB9u0hyIkIQqrTv5Wskmjg9Wpm267lQKQrxzHmFZkGoU9OniNcDESY
G5JMWHbRoMRMwmjr4YeIzdzWLx/20EB50/KPLnsAYvbqaIupNA1qBPL+iIbf
R0zM7zVP7aOB95bft28Q7yOarUz1fHI0iLC+pfTwgD8ikcn43vwwDZhdWi1a
7vghJAu1onlFGhi4/txxXdAP4RfyfRegTIOGOymeSJ4vsj1gS84bhAalhvJv
OKbuIgMWDOkr6jTg2Ezc43nbB+kWgpRgDRrse6rmyyHpg7R/vpModgwfP7f8
Rm/KHaQW3YzR0KEB56KA9j+T20ia8MajJwY0OBJ5fs55yBOx+rp2U+oCDQIu
Uqv8Yt0R04cqN0rN8PFL/h61FXVHToGnq/4lGjT3lw70pdxAjmatXnWzpIHp
r8huu3duyK7AFYsqOxqI7zvUoLrkioioKl065UAD85DHOo4hrgjv8s0LQ1do
QPlxo6hZ3BXZarN8mt2JBr1N6qJjpi5In+qS7tkbNMhmTS3173NCupYP6Yy7
0yD+5qH7WwKdkK/ZN47duUWD9JmBhtPyTki16KJquhcNZkleip2Ea0jKyvyh
GV8aaJr2CVuEXUEs3s6SHz6mwcuNPXnEvbbIFV+jdZ0nNOg2OqCiFX8ZcTPK
72ALx+NTfae1knAZebDg9ig0kgYCctuTtJhskCyllbWoZzSoMn7L84bNCili
OddxNpEGJEbFof2RlkjVz5JcYjINLlraTzpRLZF2by+7xDQa5Kck6w+oWSAr
VZvfn2fS4OnBfa0zyZcQxvBLubZvaCDvUbf0HLuEsFlVhezJxvOh4bGhWnER
IW33O5qVS4PGMvUsU10z5KjO9tx3xTQI5xtPCY8+j5wgXg5xf4+vP1P+5e2F
c8jp8QZbpTIasD0Rc9pncg6xf/RQrKySBoBV1HlTzyKhX9lCahtokBB10yi2
3wSJTb1qe/8DDe6dcTI3uGCCpF5vUddqxp+XNTYt3mmMFPCHrja30CA12UJm
sPMU0n2Ox7btGw0KNf1efv5niAzuva7+tIMGgd9eSD8NMUSm1ttJpztpcBnZ
Nj0tZogwJkZ+6+rG8x/y3EhO9yQi2Sek3tuH16/2mIm3rz6yP9+DlDZAg6/K
Ak7HGk8gyv4/V6yHaCDlfWb5AvcJRFfyWc7IKP57xxR91jxdxMWBTJqZoUEG
wxamWpoO4nXk7kruHA30kHMHdR5qI/7sve3XF/D90n5N13xWC4nOTg1aXqaB
f//E2cmWY0iKz9bLJas0WJK/8ExF7RiSedJazWudBmHhQ2cbizSRfGq9KLpB
A1bO7gt35TWR8jmJlc1NGsyXLQ0bZWsg/w9WUQV+
             "]]}, Annotation[#, "Charting`Private`Tag$10387#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.9, 0.05, 0.]], 
            LineBox[CompressedData["
1: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
zH89RB+fG9GUFMbtVfPb8hHKnHx4/ooEI+nzLjf1CGWQ+60+II+7ws+aLhDd
oi038VOTdN5E+FIw+uDJ/QhBHZI5S1aCUaofHchFQ9L5vKfxj9G1a3dDu8xJ
59eej4Sgf/zrDrTfxU2IP2wQho5/NPeqy8Jt6ud0KwIVCeuyeZxP6uf/eioC
1Tc5baD/jnT+QMLVSLR86ZBMXx3pvNJviyg0fA9bx98B0v5xjZ4xaO2KX/n7
cZJdA1hi0bXatXTvWVI986OUWNTKfPTejg3cfZ5hzXGoSvQHSUl+Jtzq6/qJ
qKPlAfYpAhNp/8GNRPSFwuu1XEnchJE32Ukoa1PUF/QA7hTrXUwp6CCV/V1D
HdwzB4RDnqJ8zQNXBM/hNlWwW3yKno4/r9N/CbfOCVaTZ2jxAfWd9ra4Hc89
UnqOBtkItvj6keZ/7NyahlYeDC/RCibNO6LvlYb+oaVPZYvAneMUv56GmibP
uyY+JRmpo3qJKnY0iBWUkfYRdtv9Cr32FDLf/UjqryFa/gpNsi/8CxtwV0wK
62eg9NufNTV9I7nPNuA1+hO5c2twjrT/zUdi2Sg7I9E0Yxk3q4dwWzaq0WWp
5UjFjDs01/cNmntDh7DGjLu1LM49B/V7KdnAIY07R1GGIRd9dzMx//te3LyC
x51z0Rk1juRkJdxSDp96c9ELPf+cdx/DXWEj+z4PlWPrFDp6GXeopVRsAToc
PPwg8gpuCPxZCtFEhr8jI7a4qSYt/ApRJlre3CBX3DF7Pt8rQsf/nD/eGUaa
1zsZVII+c7Z5LRWD++F4DU8pen7GjfVuEm5Hz7C0UrRuLL5b5DWp/jVseIem
9fy0v1aNm97w66Fy1Pj8dPu7BtJ+mdy95Shn5z9lli+k+yZ2+H5AH7SIbMn7
iZsTbnesQE2rzKLX/uD20vndV4kKpg99CJFmwRyhabmrBu2Q+CPRvxd3q4Ne
bA0a+JQuQFEJt45MHssndCVOUv/7EdwJmctUtWhX8LVRMWPcqvukttajoQxu
p1zMcTdZigTXoyf8A3JrrUn1Lss8DWih12v36y64Z45GKjWiT5ynWAsf43YV
UI79jJ6cWXehjyT1e8x6uBmlsWP5cSEe9xq7Xm8z6mi1N23jJW7z2zm8rejp
806HNCtxE0z67n9BGcCiWc887rqrVIUdqKuaFH3hCu7jcqzyX9HhoxezQ6h3
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
             "]]}, Annotation[#, "Charting`Private`Tag$10387#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> 
       GrayLevel[0], BaseStyle -> GrayLevel[0], DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox["\"P(Setosa | Sepal length)\"", TraditionalForm], None}, {
          FormBox["\"Sepal length\"", TraditionalForm], None}}, FrameStyle -> 
       GrayLevel[0], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       FrameTicksStyle -> GrayLevel[0], 
       GridLines -> {{5.664647818648648}, {0.5}}, GridLinesStyle -> Directive[
         GrayLevel[0.5], 
         Opacity[0.3]], ImageSize -> 400, 
       LabelStyle -> {FontFamily -> "Helvetica", 
         GrayLevel[0]}, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> FormBox[
         RowBox[{"{", 
           RowBox[{"38.546925327052435`", ",", 
             RowBox[{"-", "6.804822922998264`"}]}], "}"}], TraditionalForm], 
       PlotRange -> {{0, 10}, {-0.1, 1.1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}, 
       TicksStyle -> GrayLevel[0]}], 
     FormBox[
      TagBox[
       GridBox[{{
          FormBox[
           
           TemplateBox[{"\"Setosa\"", "\"Virginica\""}, "PointLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{}], 
                    RGBColor[0., 0.76, 0.33]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6], 
                    AbsoluteDashing[{6, 2}], 
                    RGBColor[0.9, 0.05, 0.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Helvetica", 
               GrayLevel[0]}, Background -> Automatic, StripOnInput -> 
              False]& ), 
            InterpretationFunction :> (RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"6", ",", "2"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                 ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "False"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}, {
          FormBox[
           
           TemplateBox[{
            "\"P(Setosa|Sepal length)\"", "\"P(Virginica|Sepal length)\""}, 
            "LineLegend", DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.76, 0.33]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.05, 0.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.76, 0.33], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.5066666666666667, 0.22000000000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.76`", ",", "0.33`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.76, 0.33]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.76, 0.33], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.05, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.03333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.05`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.05, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.05, 0.], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8028023780412936`*^9, 3.802803635468217*^9, 3.8028036699129305`*^9, {
   3.8028037024904385`*^9, 3.802803713288767*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"eef6ba21-5165-4986-8d3c-8f67b6e057d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tasa de clasificaci\[OAcute]n", "Subchapter",
 CellChangeTimes->{{3.7910441307642603`*^9, 3.7910441355342293`*^9}, {
  3.802791442617474*^9, 3.802791446191646*^9}, {3.8027921416957283`*^9, 
  3.802792154126571*^9}, {3.8028009223280935`*^9, 3.80280092431532*^9}, {
  3.8028025248919754`*^9, 
  3.802802528933178*^9}},ExpressionUUID->"065758ca-4116-46fe-9cab-\
390462b084a0"],

Cell["\<\
El clasificador clasifica correctamente el 94% de las especies setosa\
\>", "Text",
 CellChangeTimes->{{3.8028004732617702`*^9, 3.802800496387722*^9}, {
  3.802802632829694*^9, 
  3.802802632989321*^9}},ExpressionUUID->"e179506d-2634-487c-841b-\
04e981099e44"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"truePositives", " ", "=", " ", 
  RowBox[{"N", "@", 
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{
      RowBox[{"onlySetosa", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"x_", "/;", 
       RowBox[{"x", "<", "bestFrontier"}]}]}], "]"}], 
    RowBox[{"Length", "[", 
     RowBox[{"onlySetosa", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.802800103671937*^9, 3.8028001732545223`*^9}, {
  3.8028002063832917`*^9, 3.8028002255417356`*^9}, {3.8028002692555857`*^9, 
  3.802800292005975*^9}, {3.802802580531208*^9, 3.802802589928089*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"646e5505-1038-465a-9ed7-a497cb892798"],

Cell[BoxData["0.94`"], "Output",
 CellChangeTimes->{
  3.8028001740184884`*^9, {3.802800207348705*^9, 3.802800225974884*^9}, {
   3.8028002698160625`*^9, 3.8028002923510523`*^9}, {3.8028025848386917`*^9, 
   3.802802590260196*^9}, 3.802803635672674*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"24fb324a-3516-4326-996f-df5e6df0daa0"]
}, Open  ]],

Cell["\<\
sin embargo clasifica incorrectamente como setosa el 4% de las especies \
virginica\
\>", "Text",
 CellChangeTimes->{{3.8028005043069844`*^9, 3.8028005398227882`*^9}, 
   3.802802627999607*^9},ExpressionUUID->"a3b562b9-eba1-4bf7-9fa2-\
83703f56dd9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"falsePositives", " ", "=", " ", 
  RowBox[{"N", "@", " ", 
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{
      RowBox[{"onlyVirginica", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"x_", "/;", 
       RowBox[{"x", "<", "bestFrontier"}]}]}], "]"}], 
    RowBox[{"Length", "[", 
     RowBox[{"onlySetosa", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.8028003071213307`*^9, 3.8028003233965454`*^9}, 
   3.802802583662836*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"5c96eb17-85f8-4296-a209-2cd533bdf226"],

Cell[BoxData["0.04`"], "Output",
 CellChangeTimes->{{3.8028003202515697`*^9, 3.8028003236797857`*^9}, 
   3.802802593579322*^9, 3.8028036357125673`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"49331f61-fa8b-4a01-b8af-c81be9cec867"]
}, Open  ]],

Cell["\<\
De la especie virg\[IAcute]nica, clasifica incorretamente el 6% como setosa\
\>", "Text",
 CellChangeTimes->{{3.8028026451754684`*^9, 3.802802667005103*^9}, {
  3.802802697104618*^9, 
  3.8028027177653856`*^9}},ExpressionUUID->"9f84d704-5eee-463d-aa65-\
db2c5a308772"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"falseNegatives", " ", "=", " ", 
  RowBox[{"N", "@", " ", 
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{
      RowBox[{"onlySetosa", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"x_", "/;", 
       RowBox[{"x", ">", "bestFrontier"}]}]}], "]"}], 
    RowBox[{"Length", "[", 
     RowBox[{"onlyVirginica", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.802800376062806*^9, 3.8028004021296425`*^9}, {
   3.8028004321785107`*^9, 3.802800433448139*^9}, 3.8028025995802765`*^9, 
   3.8028026913669605`*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"380bc1b7-ab0f-4046-88c7-0febdb42b88a"],

Cell[BoxData["0.06`"], "Output",
 CellChangeTimes->{3.8028004039805813`*^9, 3.802800434012399*^9, 
  3.802802692251594*^9, 3.802803635751465*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"40d876ef-8c02-4d3f-9046-6f207c456f77"]
}, Open  ]],

Cell["Y clasifica correctamente el 96% de las especies virg\[IAcute]nica.", \
"Text",
 CellChangeTimes->{{3.8028027227053537`*^9, 
  3.8028027350104494`*^9}},ExpressionUUID->"3ecebafc-b995-41c5-8265-\
ffd495d472ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trueNegatives", " ", "=", " ", 
  RowBox[{"N", "@", " ", 
   FractionBox[
    RowBox[{"Count", "[", 
     RowBox[{
      RowBox[{"onlyVirginica", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"x_", "/;", 
       RowBox[{"x", ">", "bestFrontier"}]}]}], "]"}], 
    RowBox[{"Length", "[", 
     RowBox[{"onlyVirginica", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.802800441038167*^9, 3.8028004518283324`*^9}, 
   3.802802601683657*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"0908a142-5b31-43b8-84db-b9d445ad6b93"],

Cell[BoxData["0.96`"], "Output",
 CellChangeTimes->{3.8028004523559217`*^9, 3.802802602179328*^9, 
  3.8028036357973557`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"de6fbe73-2a6f-445a-abeb-d48b2a1a696d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949., 472.5},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.7 Inherited,
FrontEndVersion->"12.1 para Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0ebcffe1-231c-430c-b7e0-983278e203ee"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 327, 5, 68, "Title",ExpressionUUID->"f811a4ed-1dda-47ab-b26d-5f8881b9244a"],
Cell[910, 29, 416, 9, 56, "Subsection",ExpressionUUID->"878fbff7-241e-48cc-bbf9-8690bbc81c1b"],
Cell[CellGroupData[{
Cell[1351, 42, 226, 4, 34, "Subchapter",ExpressionUUID->"9d6dfe1c-d455-4e3c-a524-fcb3fb55436d"],
Cell[1580, 48, 176, 3, 24, "Text",ExpressionUUID->"cc8957ed-65f7-4d62-a228-1cb161b00cf7"],
Cell[1759, 53, 557, 14, 21, "Input",ExpressionUUID->"7395b67e-7643-40b4-8dd3-2b0a1cd40171"],
Cell[CellGroupData[{
Cell[2341, 71, 183, 2, 21, "Input",ExpressionUUID->"f6f470f6-af6d-43d7-8243-e7c4a7132103"],
Cell[2527, 75, 399, 8, 23, "Output",ExpressionUUID->"9494720f-0e48-4517-a28b-ff0ffac145eb"]
}, Open  ]],
Cell[2941, 86, 361, 13, 24, "Text",ExpressionUUID->"c361ddef-ef1e-4480-9a1c-e06b07e798a7"],
Cell[CellGroupData[{
Cell[3327, 103, 790, 20, 21, "Input",ExpressionUUID->"eed92880-b884-4de4-b541-705b3b7159fa"],
Cell[4120, 125, 8011, 207, 161, "Output",ExpressionUUID->"8ba207d0-42c5-40e9-b57a-177636eb7b46"]
}, Open  ]],
Cell[12146, 335, 288, 7, 24, "Text",ExpressionUUID->"68146d49-84d3-4ace-bb77-b1e4fe18daa9"],
Cell[CellGroupData[{
Cell[12459, 346, 500, 11, 21, "Input",ExpressionUUID->"9ff56fd5-4c76-402a-a017-631b795ded17"],
Cell[12962, 359, 6466, 205, 92, "Output",ExpressionUUID->"f8099c39-6e96-4bea-bdf9-85c9259d01ac"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19477, 570, 273, 4, 44, "Subchapter",ExpressionUUID->"dd636bed-93b9-4220-9a60-5e4108c11405"],
Cell[19753, 576, 238, 6, 24, "Text",ExpressionUUID->"c5aa5806-85c8-43a8-ba8a-f82ab1f3ad0b"],
Cell[19994, 584, 1473, 42, 34, "Input",ExpressionUUID->"1555d2c4-2508-43cd-b199-6c9e1f2e93bf"],
Cell[21470, 628, 577, 13, 34, "Input",ExpressionUUID->"4d911725-061f-4a3d-aa5e-e6b846a35e83"],
Cell[CellGroupData[{
Cell[22072, 645, 591, 12, 21, "Input",ExpressionUUID->"73d8e12d-1d83-48c4-977e-0fbb501d22b5"],
Cell[22666, 659, 46727, 832, 172, "Output",ExpressionUUID->"34dd0a74-476a-4848-8cfa-33c04854fe51"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69442, 1497, 337, 5, 44, "Subchapter",ExpressionUUID->"c3fc7021-3592-4466-afc1-d940ee6b6384"],
Cell[69782, 1504, 39460, 655, 158, "Text",ExpressionUUID->"e96ff8fa-b38f-40be-b0d3-713d9f59b76d"],
Cell[109245, 2161, 2401, 66, 156, "Input",ExpressionUUID->"edd5c214-b647-4fa2-b55b-706347c05452",
 InitializationCell->True],
Cell[111649, 2229, 186, 3, 24, "Text",ExpressionUUID->"2235026a-4cc0-4c9c-8855-1f0dcc7b752d"],
Cell[111838, 2234, 979, 21, 48, "Input",ExpressionUUID->"0bfd9523-cfa3-467d-8a19-afab3c0527f0"],
Cell[112820, 2257, 254, 8, 24, "Text",ExpressionUUID->"a933d300-12ca-44ff-b8b8-9d85bb8d1a09"],
Cell[CellGroupData[{
Cell[113099, 2269, 235, 4, 21, "Input",ExpressionUUID->"1a7b7c26-e109-4659-88df-44b7b96247ba"],
Cell[113337, 2275, 275, 5, 23, "Output",ExpressionUUID->"3e592e7e-6262-4f42-8951-b2cba81d9818"]
}, Open  ]],
Cell[113627, 2283, 161, 3, 24, "Text",ExpressionUUID->"7eb4b876-35be-439a-bbbd-3eb58fe24875"],
Cell[CellGroupData[{
Cell[113813, 2290, 545, 13, 21, "Input",ExpressionUUID->"87172767-f5f9-4030-b001-a37e3e293126"],
Cell[114361, 2305, 1440, 36, 37, "Output",ExpressionUUID->"a02e003e-2bd8-47e2-b889-e2595c2b44b0"]
}, Open  ]],
Cell[115816, 2344, 266, 6, 24, "Text",ExpressionUUID->"da8d9c79-ab7a-4135-84d2-c4c17439aca8"],
Cell[116085, 2352, 11784, 284, 307, "Input",ExpressionUUID->"15c174d5-d07b-459f-bf13-fa3a0b014c15",
 InitializationCell->True],
Cell[127872, 2638, 398, 8, 24, "Text",ExpressionUUID->"1c37dfed-9610-4263-9c1d-0d075eaec069"],
Cell[CellGroupData[{
Cell[128295, 2650, 285, 5, 21, "Input",ExpressionUUID->"3f3b82ab-5757-4b99-a5f6-02e91be387b8"],
Cell[128583, 2657, 513, 9, 23, "Output",ExpressionUUID->"aea3504f-ebf2-4249-b911-94f5cc9c48f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129133, 2671, 256, 4, 21, "Input",ExpressionUUID->"c20c23cc-3cad-4499-8d10-1b4f83e05f31"],
Cell[129392, 2677, 192, 2, 23, "Output",ExpressionUUID->"43d5979a-9246-48d4-8a58-413e84724b2d"]
}, Open  ]],
Cell[129599, 2682, 301, 6, 24, "Text",ExpressionUUID->"53ab4984-b57f-4b77-a704-94b2201374d3"],
Cell[CellGroupData[{
Cell[129925, 2692, 835, 20, 62, "Input",ExpressionUUID->"ef2ffc98-dc2d-45fd-afb3-383ae30a7d90"],
Cell[130763, 2714, 470002, 8355, 330, "Output",ExpressionUUID->"714f75e3-e376-487f-8ed6-269af6424ef8"]
}, Open  ]],
Cell[600780, 11072, 512, 9, 40, "Text",ExpressionUUID->"b8b227e5-260d-44ed-973b-b87acbed66b0"],
Cell[CellGroupData[{
Cell[601317, 11085, 224, 4, 21, "Input",ExpressionUUID->"c56a8cce-83ea-4cd6-b6fa-3b268da84269"],
Cell[601544, 11091, 611331, 11186, 2101, "Output",ExpressionUUID->"eef6ba21-5165-4986-8d3c-8f67b6e057d2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1212924, 22283, 379, 6, 44, "Subchapter",ExpressionUUID->"065758ca-4116-46fe-9cab-390462b084a0"],
Cell[1213306, 22291, 270, 6, 24, "Text",ExpressionUUID->"e179506d-2634-487c-841b-04e981099e44"],
Cell[CellGroupData[{
Cell[1213601, 22301, 773, 18, 36, "Input",ExpressionUUID->"646e5505-1038-465a-9ed7-a497cb892798"],
Cell[1214377, 22321, 332, 5, 23, "Output",ExpressionUUID->"24fb324a-3516-4326-996f-df5e6df0daa0"]
}, Open  ]],
Cell[1214724, 22329, 260, 6, 24, "Text",ExpressionUUID->"a3b562b9-eba1-4bf7-9fa2-83703f56dd9d"],
Cell[CellGroupData[{
Cell[1215009, 22339, 660, 17, 36, "Input",ExpressionUUID->"5c96eb17-85f8-4296-a209-2cd533bdf226"],
Cell[1215672, 22358, 231, 3, 23, "Output",ExpressionUUID->"49331f61-fa8b-4a01-b8af-c81be9cec867"]
}, Open  ]],
Cell[1215918, 22364, 278, 6, 24, "Text",ExpressionUUID->"9f84d704-5eee-463d-aa65-db2c5a308772"],
Cell[CellGroupData[{
Cell[1216221, 22374, 736, 18, 36, "Input",ExpressionUUID->"380bc1b7-ab0f-4046-88c7-0febdb42b88a"],
Cell[1216960, 22394, 224, 3, 23, "Output",ExpressionUUID->"40d876ef-8c02-4d3f-9046-6f207c456f77"]
}, Open  ]],
Cell[1217199, 22400, 215, 4, 24, "Text",ExpressionUUID->"3ecebafc-b995-41c5-8265-ffd495d472ee"],
Cell[CellGroupData[{
Cell[1217439, 22408, 660, 17, 36, "Input",ExpressionUUID->"0908a142-5b31-43b8-84db-b9d445ad6b93"],
Cell[1218102, 22427, 204, 3, 23, "Output",ExpressionUUID->"de6fbe73-2a6f-445a-abeb-d48b2a1a696d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

